Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    DOT
    ELSE
    FOR
    IF
    LETTER
    NUMBER
    SQUOTES
    THEN
    TO
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON variables function bloque
Rule 2     variables -> VARS variables1
Rule 3     variables1 -> tipo COLON listaids
Rule 4     listaids -> ID listaids1
Rule 5     listaids1 -> COMA ID listaids1
Rule 6     listaids1 -> listaids2
Rule 7     listaids1 -> SEMICOLON
Rule 8     listaids2 -> LBRACKET INT RBRACKET listaids1
Rule 9     listaids2 -> LBRACKET INT RBRACKET SEMICOLON
Rule 10    listaids2 -> SEMICOLON
Rule 11    tipo -> INT
Rule 12    tipo -> FLOAT
Rule 13    tipo -> CHAR
Rule 14    function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloque
Rule 15    bloque -> LCBRACKET estatuto bloque1
Rule 16    bloque -> LCBRACKET RCBRACKET
Rule 17    bloque1 -> RCBRACKET
Rule 18    bloque1 -> estatuto
Rule 19    estatuto -> asignacion
Rule 20    estatuto -> retornofuncion
Rule 21    estatuto -> lectura
Rule 22    estatuto -> escritura
Rule 23    tiporetorno -> INT
Rule 24    tiporetorno -> FLOAT
Rule 25    asignacion -> ID EQUALS expresion SEMICOLON
Rule 26    asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON
Rule 27    retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON
Rule 28    expresion -> exp expresion1
Rule 29    expresion1 -> GTHAN exp
Rule 30    expresion1 -> LTHAN exp
Rule 31    expresion1 -> AND exp
Rule 32    expresion1 -> OR exp
Rule 33    exp -> termino exp1
Rule 34    exp1 -> PLUS exp
Rule 35    exp1 -> MINUS exp
Rule 36    exp1 -> SEMICOLON
Rule 37    termino -> factor termino1
Rule 38    termino1 -> TIMES termino
Rule 39    termino1 -> DIVIDE termino
Rule 40    termino1 -> SEMICOLON
Rule 41    factor -> LCBRACKET expresion RCBRACKET
Rule 42    factor -> PLUS varcte
Rule 43    factor -> MINUS varcte
Rule 44    factor -> varcte
Rule 45    varcte -> INT
Rule 46    varcte -> FLOAT
Rule 47    varcte -> ID
Rule 48    lectura -> READ LPAREN lectura1
Rule 49    lectura1 -> RPAREN SEMICOLON
Rule 50    lectura1 -> listaids lectura1
Rule 51    escritura -> WRITE LPAREN escritura1
Rule 52    escritura1 -> letrero escritura2
Rule 53    escritura1 -> expresion escritura2
Rule 54    escritura2 -> RPAREN SEMICOLON
Rule 55    escritura2 -> escritura1
Rule 56    letrero -> QUOTES letrero1
Rule 57    letrero1 -> CHAR QUOTES
Rule 58    letrero1 -> CHAR letrero1

Terminals, with rules where they appear

AND                  : 31
CHAR                 : 13 57 58
COLON                : 3
COMA                 : 5
DIVIDE               : 39
DO                   : 
DOT                  : 
ELSE                 : 
EQUALS               : 25 26
FLOAT                : 12 24 46
FOR                  : 
FUNCTION             : 14
GTHAN                : 29
ID                   : 1 4 5 14 25 26 47
IF                   : 
INT                  : 8 9 11 23 45
LBRACKET             : 8 9 26
LCBRACKET            : 15 16 41
LETTER               : 
LPAREN               : 14 27 48 51
LTHAN                : 30
MINUS                : 35 43
NUMBER               : 
OR                   : 32
PLUS                 : 34 42
PROGRAMA             : 1
QUOTES               : 56 57
RBRACKET             : 8 9 26
RCBRACKET            : 16 17 41
READ                 : 48
RETURN               : 27
RPAREN               : 14 27 49 54
SEMICOLON            : 1 7 9 10 14 25 26 27 36 40 49 54
SQUOTES              : 
THEN                 : 
TIMES                : 38
TO                   : 
VARS                 : 2
WHILE                : 
WRITE                : 51
error                : 

Nonterminals, with rules where they appear

asignacion           : 19
bloque               : 1 14
bloque1              : 15
escritura            : 22
escritura1           : 51 55
escritura2           : 52 53
estatuto             : 15 18
exp                  : 26 27 28 29 30 31 32 34 35
exp1                 : 33
expresion            : 25 26 41 53
expresion1           : 28
factor               : 37
function             : 1
lectura              : 21
lectura1             : 48 50
letrero              : 52
letrero1             : 56 58
listaids             : 3 50
listaids1            : 4 5 8
listaids2            : 6
programa             : 0
retornofuncion       : 20
termino              : 33 38 39
termino1             : 37
tipo                 : 3
tiporetorno          : 14
varcte               : 42 43 44
variables            : 1 14
variables1           : 2 14

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON variables function bloque

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON variables function bloque

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON variables function bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . variables function bloque
    (2) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID SEMICOLON variables . function bloque
    (14) function -> . FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloque

    FUNCTION        shift and go to state 8

    function                       shift and go to state 7

state 6

    (2) variables -> VARS . variables1
    (3) variables1 -> . tipo COLON listaids
    (11) tipo -> . INT
    (12) tipo -> . FLOAT
    (13) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (1) programa -> PROGRAMA ID SEMICOLON variables function . bloque
    (15) bloque -> . LCBRACKET estatuto bloque1
    (16) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 15

    bloque                         shift and go to state 14

state 8

    (14) function -> FUNCTION . tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloque
    (23) tiporetorno -> . INT
    (24) tiporetorno -> . FLOAT

    INT             shift and go to state 17
    FLOAT           shift and go to state 18

    tiporetorno                    shift and go to state 16

state 9

    (2) variables -> VARS variables1 .

    FUNCTION        reduce using rule 2 (variables -> VARS variables1 .)
    LCBRACKET       reduce using rule 2 (variables -> VARS variables1 .)


state 10

    (3) variables1 -> tipo . COLON listaids

    COLON           shift and go to state 19


state 11

    (11) tipo -> INT .

    COLON           reduce using rule 11 (tipo -> INT .)


state 12

    (12) tipo -> FLOAT .

    COLON           reduce using rule 12 (tipo -> FLOAT .)


state 13

    (13) tipo -> CHAR .

    COLON           reduce using rule 13 (tipo -> CHAR .)


state 14

    (1) programa -> PROGRAMA ID SEMICOLON variables function bloque .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON variables function bloque .)


state 15

    (15) bloque -> LCBRACKET . estatuto bloque1
    (16) bloque -> LCBRACKET . RCBRACKET
    (19) estatuto -> . asignacion
    (20) estatuto -> . retornofuncion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (25) asignacion -> . ID EQUALS expresion SEMICOLON
    (26) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON
    (27) retornofuncion -> . RETURN LPAREN exp RPAREN SEMICOLON
    (48) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1

    RCBRACKET       shift and go to state 21
    ID              shift and go to state 26
    RETURN          shift and go to state 27
    READ            shift and go to state 28
    WRITE           shift and go to state 29

    estatuto                       shift and go to state 20
    asignacion                     shift and go to state 22
    retornofuncion                 shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25

state 16

    (14) function -> FUNCTION tiporetorno . ID LPAREN variables1 RPAREN SEMICOLON variables bloque

    ID              shift and go to state 30


state 17

    (23) tiporetorno -> INT .

    ID              reduce using rule 23 (tiporetorno -> INT .)


state 18

    (24) tiporetorno -> FLOAT .

    ID              reduce using rule 24 (tiporetorno -> FLOAT .)


state 19

    (3) variables1 -> tipo COLON . listaids
    (4) listaids -> . ID listaids1

    ID              shift and go to state 32

    listaids                       shift and go to state 31

state 20

    (15) bloque -> LCBRACKET estatuto . bloque1
    (17) bloque1 -> . RCBRACKET
    (18) bloque1 -> . estatuto
    (19) estatuto -> . asignacion
    (20) estatuto -> . retornofuncion
    (21) estatuto -> . lectura
    (22) estatuto -> . escritura
    (25) asignacion -> . ID EQUALS expresion SEMICOLON
    (26) asignacion -> . ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON
    (27) retornofuncion -> . RETURN LPAREN exp RPAREN SEMICOLON
    (48) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1

    RCBRACKET       shift and go to state 35
    ID              shift and go to state 26
    RETURN          shift and go to state 27
    READ            shift and go to state 28
    WRITE           shift and go to state 29

    estatuto                       shift and go to state 33
    bloque1                        shift and go to state 34
    asignacion                     shift and go to state 22
    retornofuncion                 shift and go to state 23
    lectura                        shift and go to state 24
    escritura                      shift and go to state 25

state 21

    (16) bloque -> LCBRACKET RCBRACKET .

    $end            reduce using rule 16 (bloque -> LCBRACKET RCBRACKET .)
    LCBRACKET       reduce using rule 16 (bloque -> LCBRACKET RCBRACKET .)


state 22

    (19) estatuto -> asignacion .

    RCBRACKET       reduce using rule 19 (estatuto -> asignacion .)
    ID              reduce using rule 19 (estatuto -> asignacion .)
    RETURN          reduce using rule 19 (estatuto -> asignacion .)
    READ            reduce using rule 19 (estatuto -> asignacion .)
    WRITE           reduce using rule 19 (estatuto -> asignacion .)
    $end            reduce using rule 19 (estatuto -> asignacion .)
    LCBRACKET       reduce using rule 19 (estatuto -> asignacion .)


state 23

    (20) estatuto -> retornofuncion .

    RCBRACKET       reduce using rule 20 (estatuto -> retornofuncion .)
    ID              reduce using rule 20 (estatuto -> retornofuncion .)
    RETURN          reduce using rule 20 (estatuto -> retornofuncion .)
    READ            reduce using rule 20 (estatuto -> retornofuncion .)
    WRITE           reduce using rule 20 (estatuto -> retornofuncion .)
    $end            reduce using rule 20 (estatuto -> retornofuncion .)
    LCBRACKET       reduce using rule 20 (estatuto -> retornofuncion .)


state 24

    (21) estatuto -> lectura .

    RCBRACKET       reduce using rule 21 (estatuto -> lectura .)
    ID              reduce using rule 21 (estatuto -> lectura .)
    RETURN          reduce using rule 21 (estatuto -> lectura .)
    READ            reduce using rule 21 (estatuto -> lectura .)
    WRITE           reduce using rule 21 (estatuto -> lectura .)
    $end            reduce using rule 21 (estatuto -> lectura .)
    LCBRACKET       reduce using rule 21 (estatuto -> lectura .)


state 25

    (22) estatuto -> escritura .

    RCBRACKET       reduce using rule 22 (estatuto -> escritura .)
    ID              reduce using rule 22 (estatuto -> escritura .)
    RETURN          reduce using rule 22 (estatuto -> escritura .)
    READ            reduce using rule 22 (estatuto -> escritura .)
    WRITE           reduce using rule 22 (estatuto -> escritura .)
    $end            reduce using rule 22 (estatuto -> escritura .)
    LCBRACKET       reduce using rule 22 (estatuto -> escritura .)


state 26

    (25) asignacion -> ID . EQUALS expresion SEMICOLON
    (26) asignacion -> ID . LBRACKET exp RBRACKET EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 36
    LBRACKET        shift and go to state 37


state 27

    (27) retornofuncion -> RETURN . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 38


state 28

    (48) lectura -> READ . LPAREN lectura1

    LPAREN          shift and go to state 39


state 29

    (51) escritura -> WRITE . LPAREN escritura1

    LPAREN          shift and go to state 40


state 30

    (14) function -> FUNCTION tiporetorno ID . LPAREN variables1 RPAREN SEMICOLON variables bloque

    LPAREN          shift and go to state 41


state 31

    (3) variables1 -> tipo COLON listaids .

    FUNCTION        reduce using rule 3 (variables1 -> tipo COLON listaids .)
    LCBRACKET       reduce using rule 3 (variables1 -> tipo COLON listaids .)
    RPAREN          reduce using rule 3 (variables1 -> tipo COLON listaids .)


state 32

    (4) listaids -> ID . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON
    (8) listaids2 -> . LBRACKET INT RBRACKET listaids1
    (9) listaids2 -> . LBRACKET INT RBRACKET SEMICOLON
    (10) listaids2 -> . SEMICOLON

    COMA            shift and go to state 43
    SEMICOLON       shift and go to state 45
    LBRACKET        shift and go to state 46

    listaids1                      shift and go to state 42
    listaids2                      shift and go to state 44

state 33

    (18) bloque1 -> estatuto .

    $end            reduce using rule 18 (bloque1 -> estatuto .)
    LCBRACKET       reduce using rule 18 (bloque1 -> estatuto .)


state 34

    (15) bloque -> LCBRACKET estatuto bloque1 .

    $end            reduce using rule 15 (bloque -> LCBRACKET estatuto bloque1 .)
    LCBRACKET       reduce using rule 15 (bloque -> LCBRACKET estatuto bloque1 .)


state 35

    (17) bloque1 -> RCBRACKET .

    $end            reduce using rule 17 (bloque1 -> RCBRACKET .)
    LCBRACKET       reduce using rule 17 (bloque1 -> RCBRACKET .)


state 36

    (25) asignacion -> ID EQUALS . expresion SEMICOLON
    (28) expresion -> . exp expresion1
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    expresion                      shift and go to state 48
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 37

    (26) asignacion -> ID LBRACKET . exp RBRACKET EQUALS expresion SEMICOLON
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 58
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 38

    (27) retornofuncion -> RETURN LPAREN . exp RPAREN SEMICOLON
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 59
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 39

    (48) lectura -> READ LPAREN . lectura1
    (49) lectura1 -> . RPAREN SEMICOLON
    (50) lectura1 -> . listaids lectura1
    (4) listaids -> . ID listaids1

    RPAREN          shift and go to state 61
    ID              shift and go to state 32

    lectura1                       shift and go to state 60
    listaids                       shift and go to state 62

state 40

    (51) escritura -> WRITE LPAREN . escritura1
    (52) escritura1 -> . letrero escritura2
    (53) escritura1 -> . expresion escritura2
    (56) letrero -> . QUOTES letrero1
    (28) expresion -> . exp expresion1
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    QUOTES          shift and go to state 66
    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    escritura1                     shift and go to state 63
    letrero                        shift and go to state 64
    expresion                      shift and go to state 65
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 41

    (14) function -> FUNCTION tiporetorno ID LPAREN . variables1 RPAREN SEMICOLON variables bloque
    (3) variables1 -> . tipo COLON listaids
    (11) tipo -> . INT
    (12) tipo -> . FLOAT
    (13) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 67
    tipo                           shift and go to state 10

state 42

    (4) listaids -> ID listaids1 .

    FUNCTION        reduce using rule 4 (listaids -> ID listaids1 .)
    LCBRACKET       reduce using rule 4 (listaids -> ID listaids1 .)
    RPAREN          reduce using rule 4 (listaids -> ID listaids1 .)
    ID              reduce using rule 4 (listaids -> ID listaids1 .)


state 43

    (5) listaids1 -> COMA . ID listaids1

    ID              shift and go to state 68


state 44

    (6) listaids1 -> listaids2 .

    FUNCTION        reduce using rule 6 (listaids1 -> listaids2 .)
    LCBRACKET       reduce using rule 6 (listaids1 -> listaids2 .)
    RPAREN          reduce using rule 6 (listaids1 -> listaids2 .)
    ID              reduce using rule 6 (listaids1 -> listaids2 .)


state 45

    (7) listaids1 -> SEMICOLON .
    (10) listaids2 -> SEMICOLON .

  ! reduce/reduce conflict for FUNCTION resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for LCBRACKET resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 7 (listaids1 -> SEMICOLON .)
    FUNCTION        reduce using rule 7 (listaids1 -> SEMICOLON .)
    LCBRACKET       reduce using rule 7 (listaids1 -> SEMICOLON .)
    RPAREN          reduce using rule 7 (listaids1 -> SEMICOLON .)
    ID              reduce using rule 7 (listaids1 -> SEMICOLON .)

  ! FUNCTION        [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]
  ! LCBRACKET       [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]
  ! RPAREN          [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]
  ! ID              [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]


state 46

    (8) listaids2 -> LBRACKET . INT RBRACKET listaids1
    (9) listaids2 -> LBRACKET . INT RBRACKET SEMICOLON

    INT             shift and go to state 69


state 47

    (47) varcte -> ID .

    TIMES           reduce using rule 47 (varcte -> ID .)
    DIVIDE          reduce using rule 47 (varcte -> ID .)
    SEMICOLON       reduce using rule 47 (varcte -> ID .)


state 48

    (25) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 70


state 49

    (28) expresion -> exp . expresion1
    (29) expresion1 -> . GTHAN exp
    (30) expresion1 -> . LTHAN exp
    (31) expresion1 -> . AND exp
    (32) expresion1 -> . OR exp

    GTHAN           shift and go to state 72
    LTHAN           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75

    expresion1                     shift and go to state 71

state 50

    (33) exp -> termino . exp1
    (34) exp1 -> . PLUS exp
    (35) exp1 -> . MINUS exp
    (36) exp1 -> . SEMICOLON

    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    SEMICOLON       shift and go to state 79

    exp1                           shift and go to state 76

state 51

    (37) termino -> factor . termino1
    (38) termino1 -> . TIMES termino
    (39) termino1 -> . DIVIDE termino
    (40) termino1 -> . SEMICOLON

    TIMES           shift and go to state 81
    DIVIDE          shift and go to state 82
    SEMICOLON       shift and go to state 83

    termino1                       shift and go to state 80

state 52

    (41) factor -> LCBRACKET . expresion RCBRACKET
    (28) expresion -> . exp expresion1
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    expresion                      shift and go to state 84
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 53

    (42) factor -> PLUS . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    varcte                         shift and go to state 85

state 54

    (44) factor -> varcte .

    TIMES           reduce using rule 44 (factor -> varcte .)
    DIVIDE          reduce using rule 44 (factor -> varcte .)
    SEMICOLON       reduce using rule 44 (factor -> varcte .)


state 55

    (43) factor -> MINUS . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    varcte                         shift and go to state 86

state 56

    (45) varcte -> INT .

    TIMES           reduce using rule 45 (varcte -> INT .)
    DIVIDE          reduce using rule 45 (varcte -> INT .)
    SEMICOLON       reduce using rule 45 (varcte -> INT .)


state 57

    (46) varcte -> FLOAT .

    TIMES           reduce using rule 46 (varcte -> FLOAT .)
    DIVIDE          reduce using rule 46 (varcte -> FLOAT .)
    SEMICOLON       reduce using rule 46 (varcte -> FLOAT .)


state 58

    (26) asignacion -> ID LBRACKET exp . RBRACKET EQUALS expresion SEMICOLON

    RBRACKET        shift and go to state 87


state 59

    (27) retornofuncion -> RETURN LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 88


state 60

    (48) lectura -> READ LPAREN lectura1 .

    RCBRACKET       reduce using rule 48 (lectura -> READ LPAREN lectura1 .)
    ID              reduce using rule 48 (lectura -> READ LPAREN lectura1 .)
    RETURN          reduce using rule 48 (lectura -> READ LPAREN lectura1 .)
    READ            reduce using rule 48 (lectura -> READ LPAREN lectura1 .)
    WRITE           reduce using rule 48 (lectura -> READ LPAREN lectura1 .)
    $end            reduce using rule 48 (lectura -> READ LPAREN lectura1 .)
    LCBRACKET       reduce using rule 48 (lectura -> READ LPAREN lectura1 .)


state 61

    (49) lectura1 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 89


state 62

    (50) lectura1 -> listaids . lectura1
    (49) lectura1 -> . RPAREN SEMICOLON
    (50) lectura1 -> . listaids lectura1
    (4) listaids -> . ID listaids1

    RPAREN          shift and go to state 61
    ID              shift and go to state 32

    listaids                       shift and go to state 62
    lectura1                       shift and go to state 90

state 63

    (51) escritura -> WRITE LPAREN escritura1 .

    RCBRACKET       reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)
    ID              reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)
    RETURN          reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)
    READ            reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)
    WRITE           reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)
    $end            reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)
    LCBRACKET       reduce using rule 51 (escritura -> WRITE LPAREN escritura1 .)


state 64

    (52) escritura1 -> letrero . escritura2
    (54) escritura2 -> . RPAREN SEMICOLON
    (55) escritura2 -> . escritura1
    (52) escritura1 -> . letrero escritura2
    (53) escritura1 -> . expresion escritura2
    (56) letrero -> . QUOTES letrero1
    (28) expresion -> . exp expresion1
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    RPAREN          shift and go to state 92
    QUOTES          shift and go to state 66
    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    letrero                        shift and go to state 64
    escritura2                     shift and go to state 91
    escritura1                     shift and go to state 93
    expresion                      shift and go to state 65
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 65

    (53) escritura1 -> expresion . escritura2
    (54) escritura2 -> . RPAREN SEMICOLON
    (55) escritura2 -> . escritura1
    (52) escritura1 -> . letrero escritura2
    (53) escritura1 -> . expresion escritura2
    (56) letrero -> . QUOTES letrero1
    (28) expresion -> . exp expresion1
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    RPAREN          shift and go to state 92
    QUOTES          shift and go to state 66
    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    expresion                      shift and go to state 65
    escritura2                     shift and go to state 94
    escritura1                     shift and go to state 93
    letrero                        shift and go to state 64
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 66

    (56) letrero -> QUOTES . letrero1
    (57) letrero1 -> . CHAR QUOTES
    (58) letrero1 -> . CHAR letrero1

    CHAR            shift and go to state 96

    letrero1                       shift and go to state 95

state 67

    (14) function -> FUNCTION tiporetorno ID LPAREN variables1 . RPAREN SEMICOLON variables bloque

    RPAREN          shift and go to state 97


state 68

    (5) listaids1 -> COMA ID . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON
    (8) listaids2 -> . LBRACKET INT RBRACKET listaids1
    (9) listaids2 -> . LBRACKET INT RBRACKET SEMICOLON
    (10) listaids2 -> . SEMICOLON

    COMA            shift and go to state 43
    SEMICOLON       shift and go to state 45
    LBRACKET        shift and go to state 46

    listaids1                      shift and go to state 98
    listaids2                      shift and go to state 44

state 69

    (8) listaids2 -> LBRACKET INT . RBRACKET listaids1
    (9) listaids2 -> LBRACKET INT . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 99


state 70

    (25) asignacion -> ID EQUALS expresion SEMICOLON .

    RCBRACKET       reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ID              reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)
    READ            reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)
    $end            reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)
    LCBRACKET       reduce using rule 25 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 71

    (28) expresion -> exp expresion1 .

    SEMICOLON       reduce using rule 28 (expresion -> exp expresion1 .)
    RPAREN          reduce using rule 28 (expresion -> exp expresion1 .)
    QUOTES          reduce using rule 28 (expresion -> exp expresion1 .)
    LCBRACKET       reduce using rule 28 (expresion -> exp expresion1 .)
    PLUS            reduce using rule 28 (expresion -> exp expresion1 .)
    MINUS           reduce using rule 28 (expresion -> exp expresion1 .)
    INT             reduce using rule 28 (expresion -> exp expresion1 .)
    FLOAT           reduce using rule 28 (expresion -> exp expresion1 .)
    ID              reduce using rule 28 (expresion -> exp expresion1 .)
    RCBRACKET       reduce using rule 28 (expresion -> exp expresion1 .)


state 72

    (29) expresion1 -> GTHAN . exp
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 100
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 73

    (30) expresion1 -> LTHAN . exp
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 101
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 74

    (31) expresion1 -> AND . exp
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 102
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 75

    (32) expresion1 -> OR . exp
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 103
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 76

    (33) exp -> termino exp1 .

    GTHAN           reduce using rule 33 (exp -> termino exp1 .)
    LTHAN           reduce using rule 33 (exp -> termino exp1 .)
    AND             reduce using rule 33 (exp -> termino exp1 .)
    OR              reduce using rule 33 (exp -> termino exp1 .)
    RBRACKET        reduce using rule 33 (exp -> termino exp1 .)
    RPAREN          reduce using rule 33 (exp -> termino exp1 .)
    SEMICOLON       reduce using rule 33 (exp -> termino exp1 .)
    QUOTES          reduce using rule 33 (exp -> termino exp1 .)
    LCBRACKET       reduce using rule 33 (exp -> termino exp1 .)
    PLUS            reduce using rule 33 (exp -> termino exp1 .)
    MINUS           reduce using rule 33 (exp -> termino exp1 .)
    INT             reduce using rule 33 (exp -> termino exp1 .)
    FLOAT           reduce using rule 33 (exp -> termino exp1 .)
    ID              reduce using rule 33 (exp -> termino exp1 .)
    RCBRACKET       reduce using rule 33 (exp -> termino exp1 .)


state 77

    (34) exp1 -> PLUS . exp
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 104
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 78

    (35) exp1 -> MINUS . exp
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 105
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 79

    (36) exp1 -> SEMICOLON .

    GTHAN           reduce using rule 36 (exp1 -> SEMICOLON .)
    LTHAN           reduce using rule 36 (exp1 -> SEMICOLON .)
    AND             reduce using rule 36 (exp1 -> SEMICOLON .)
    OR              reduce using rule 36 (exp1 -> SEMICOLON .)
    RBRACKET        reduce using rule 36 (exp1 -> SEMICOLON .)
    RPAREN          reduce using rule 36 (exp1 -> SEMICOLON .)
    SEMICOLON       reduce using rule 36 (exp1 -> SEMICOLON .)
    QUOTES          reduce using rule 36 (exp1 -> SEMICOLON .)
    LCBRACKET       reduce using rule 36 (exp1 -> SEMICOLON .)
    PLUS            reduce using rule 36 (exp1 -> SEMICOLON .)
    MINUS           reduce using rule 36 (exp1 -> SEMICOLON .)
    INT             reduce using rule 36 (exp1 -> SEMICOLON .)
    FLOAT           reduce using rule 36 (exp1 -> SEMICOLON .)
    ID              reduce using rule 36 (exp1 -> SEMICOLON .)
    RCBRACKET       reduce using rule 36 (exp1 -> SEMICOLON .)


state 80

    (37) termino -> factor termino1 .

    PLUS            reduce using rule 37 (termino -> factor termino1 .)
    MINUS           reduce using rule 37 (termino -> factor termino1 .)
    SEMICOLON       reduce using rule 37 (termino -> factor termino1 .)


state 81

    (38) termino1 -> TIMES . termino
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    termino                        shift and go to state 106
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 82

    (39) termino1 -> DIVIDE . termino
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    termino                        shift and go to state 107
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 83

    (40) termino1 -> SEMICOLON .

    PLUS            reduce using rule 40 (termino1 -> SEMICOLON .)
    MINUS           reduce using rule 40 (termino1 -> SEMICOLON .)
    SEMICOLON       reduce using rule 40 (termino1 -> SEMICOLON .)


state 84

    (41) factor -> LCBRACKET expresion . RCBRACKET

    RCBRACKET       shift and go to state 108


state 85

    (42) factor -> PLUS varcte .

    TIMES           reduce using rule 42 (factor -> PLUS varcte .)
    DIVIDE          reduce using rule 42 (factor -> PLUS varcte .)
    SEMICOLON       reduce using rule 42 (factor -> PLUS varcte .)


state 86

    (43) factor -> MINUS varcte .

    TIMES           reduce using rule 43 (factor -> MINUS varcte .)
    DIVIDE          reduce using rule 43 (factor -> MINUS varcte .)
    SEMICOLON       reduce using rule 43 (factor -> MINUS varcte .)


state 87

    (26) asignacion -> ID LBRACKET exp RBRACKET . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 109


state 88

    (27) retornofuncion -> RETURN LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 110


state 89

    (49) lectura1 -> RPAREN SEMICOLON .

    RCBRACKET       reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)
    ID              reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)
    READ            reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)
    WRITE           reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)
    $end            reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)
    LCBRACKET       reduce using rule 49 (lectura1 -> RPAREN SEMICOLON .)


state 90

    (50) lectura1 -> listaids lectura1 .

    RCBRACKET       reduce using rule 50 (lectura1 -> listaids lectura1 .)
    ID              reduce using rule 50 (lectura1 -> listaids lectura1 .)
    RETURN          reduce using rule 50 (lectura1 -> listaids lectura1 .)
    READ            reduce using rule 50 (lectura1 -> listaids lectura1 .)
    WRITE           reduce using rule 50 (lectura1 -> listaids lectura1 .)
    $end            reduce using rule 50 (lectura1 -> listaids lectura1 .)
    LCBRACKET       reduce using rule 50 (lectura1 -> listaids lectura1 .)


state 91

    (52) escritura1 -> letrero escritura2 .

    RCBRACKET       reduce using rule 52 (escritura1 -> letrero escritura2 .)
    ID              reduce using rule 52 (escritura1 -> letrero escritura2 .)
    RETURN          reduce using rule 52 (escritura1 -> letrero escritura2 .)
    READ            reduce using rule 52 (escritura1 -> letrero escritura2 .)
    WRITE           reduce using rule 52 (escritura1 -> letrero escritura2 .)
    $end            reduce using rule 52 (escritura1 -> letrero escritura2 .)
    LCBRACKET       reduce using rule 52 (escritura1 -> letrero escritura2 .)


state 92

    (54) escritura2 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 111


state 93

    (55) escritura2 -> escritura1 .

    RCBRACKET       reduce using rule 55 (escritura2 -> escritura1 .)
    ID              reduce using rule 55 (escritura2 -> escritura1 .)
    RETURN          reduce using rule 55 (escritura2 -> escritura1 .)
    READ            reduce using rule 55 (escritura2 -> escritura1 .)
    WRITE           reduce using rule 55 (escritura2 -> escritura1 .)
    $end            reduce using rule 55 (escritura2 -> escritura1 .)
    LCBRACKET       reduce using rule 55 (escritura2 -> escritura1 .)


state 94

    (53) escritura1 -> expresion escritura2 .

    RCBRACKET       reduce using rule 53 (escritura1 -> expresion escritura2 .)
    ID              reduce using rule 53 (escritura1 -> expresion escritura2 .)
    RETURN          reduce using rule 53 (escritura1 -> expresion escritura2 .)
    READ            reduce using rule 53 (escritura1 -> expresion escritura2 .)
    WRITE           reduce using rule 53 (escritura1 -> expresion escritura2 .)
    $end            reduce using rule 53 (escritura1 -> expresion escritura2 .)
    LCBRACKET       reduce using rule 53 (escritura1 -> expresion escritura2 .)


state 95

    (56) letrero -> QUOTES letrero1 .

    RPAREN          reduce using rule 56 (letrero -> QUOTES letrero1 .)
    QUOTES          reduce using rule 56 (letrero -> QUOTES letrero1 .)
    LCBRACKET       reduce using rule 56 (letrero -> QUOTES letrero1 .)
    PLUS            reduce using rule 56 (letrero -> QUOTES letrero1 .)
    MINUS           reduce using rule 56 (letrero -> QUOTES letrero1 .)
    INT             reduce using rule 56 (letrero -> QUOTES letrero1 .)
    FLOAT           reduce using rule 56 (letrero -> QUOTES letrero1 .)
    ID              reduce using rule 56 (letrero -> QUOTES letrero1 .)


state 96

    (57) letrero1 -> CHAR . QUOTES
    (58) letrero1 -> CHAR . letrero1
    (57) letrero1 -> . CHAR QUOTES
    (58) letrero1 -> . CHAR letrero1

    QUOTES          shift and go to state 112
    CHAR            shift and go to state 96

    letrero1                       shift and go to state 113

state 97

    (14) function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN . SEMICOLON variables bloque

    SEMICOLON       shift and go to state 114


state 98

    (5) listaids1 -> COMA ID listaids1 .

    FUNCTION        reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    LCBRACKET       reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    RPAREN          reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    ID              reduce using rule 5 (listaids1 -> COMA ID listaids1 .)


state 99

    (8) listaids2 -> LBRACKET INT RBRACKET . listaids1
    (9) listaids2 -> LBRACKET INT RBRACKET . SEMICOLON
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON
    (8) listaids2 -> . LBRACKET INT RBRACKET listaids1
    (9) listaids2 -> . LBRACKET INT RBRACKET SEMICOLON
    (10) listaids2 -> . SEMICOLON

    SEMICOLON       shift and go to state 116
    COMA            shift and go to state 43
    LBRACKET        shift and go to state 46

    listaids1                      shift and go to state 115
    listaids2                      shift and go to state 44

state 100

    (29) expresion1 -> GTHAN exp .

    SEMICOLON       reduce using rule 29 (expresion1 -> GTHAN exp .)
    RPAREN          reduce using rule 29 (expresion1 -> GTHAN exp .)
    QUOTES          reduce using rule 29 (expresion1 -> GTHAN exp .)
    LCBRACKET       reduce using rule 29 (expresion1 -> GTHAN exp .)
    PLUS            reduce using rule 29 (expresion1 -> GTHAN exp .)
    MINUS           reduce using rule 29 (expresion1 -> GTHAN exp .)
    INT             reduce using rule 29 (expresion1 -> GTHAN exp .)
    FLOAT           reduce using rule 29 (expresion1 -> GTHAN exp .)
    ID              reduce using rule 29 (expresion1 -> GTHAN exp .)
    RCBRACKET       reduce using rule 29 (expresion1 -> GTHAN exp .)


state 101

    (30) expresion1 -> LTHAN exp .

    SEMICOLON       reduce using rule 30 (expresion1 -> LTHAN exp .)
    RPAREN          reduce using rule 30 (expresion1 -> LTHAN exp .)
    QUOTES          reduce using rule 30 (expresion1 -> LTHAN exp .)
    LCBRACKET       reduce using rule 30 (expresion1 -> LTHAN exp .)
    PLUS            reduce using rule 30 (expresion1 -> LTHAN exp .)
    MINUS           reduce using rule 30 (expresion1 -> LTHAN exp .)
    INT             reduce using rule 30 (expresion1 -> LTHAN exp .)
    FLOAT           reduce using rule 30 (expresion1 -> LTHAN exp .)
    ID              reduce using rule 30 (expresion1 -> LTHAN exp .)
    RCBRACKET       reduce using rule 30 (expresion1 -> LTHAN exp .)


state 102

    (31) expresion1 -> AND exp .

    SEMICOLON       reduce using rule 31 (expresion1 -> AND exp .)
    RPAREN          reduce using rule 31 (expresion1 -> AND exp .)
    QUOTES          reduce using rule 31 (expresion1 -> AND exp .)
    LCBRACKET       reduce using rule 31 (expresion1 -> AND exp .)
    PLUS            reduce using rule 31 (expresion1 -> AND exp .)
    MINUS           reduce using rule 31 (expresion1 -> AND exp .)
    INT             reduce using rule 31 (expresion1 -> AND exp .)
    FLOAT           reduce using rule 31 (expresion1 -> AND exp .)
    ID              reduce using rule 31 (expresion1 -> AND exp .)
    RCBRACKET       reduce using rule 31 (expresion1 -> AND exp .)


state 103

    (32) expresion1 -> OR exp .

    SEMICOLON       reduce using rule 32 (expresion1 -> OR exp .)
    RPAREN          reduce using rule 32 (expresion1 -> OR exp .)
    QUOTES          reduce using rule 32 (expresion1 -> OR exp .)
    LCBRACKET       reduce using rule 32 (expresion1 -> OR exp .)
    PLUS            reduce using rule 32 (expresion1 -> OR exp .)
    MINUS           reduce using rule 32 (expresion1 -> OR exp .)
    INT             reduce using rule 32 (expresion1 -> OR exp .)
    FLOAT           reduce using rule 32 (expresion1 -> OR exp .)
    ID              reduce using rule 32 (expresion1 -> OR exp .)
    RCBRACKET       reduce using rule 32 (expresion1 -> OR exp .)


state 104

    (34) exp1 -> PLUS exp .

    GTHAN           reduce using rule 34 (exp1 -> PLUS exp .)
    LTHAN           reduce using rule 34 (exp1 -> PLUS exp .)
    AND             reduce using rule 34 (exp1 -> PLUS exp .)
    OR              reduce using rule 34 (exp1 -> PLUS exp .)
    RBRACKET        reduce using rule 34 (exp1 -> PLUS exp .)
    RPAREN          reduce using rule 34 (exp1 -> PLUS exp .)
    SEMICOLON       reduce using rule 34 (exp1 -> PLUS exp .)
    QUOTES          reduce using rule 34 (exp1 -> PLUS exp .)
    LCBRACKET       reduce using rule 34 (exp1 -> PLUS exp .)
    PLUS            reduce using rule 34 (exp1 -> PLUS exp .)
    MINUS           reduce using rule 34 (exp1 -> PLUS exp .)
    INT             reduce using rule 34 (exp1 -> PLUS exp .)
    FLOAT           reduce using rule 34 (exp1 -> PLUS exp .)
    ID              reduce using rule 34 (exp1 -> PLUS exp .)
    RCBRACKET       reduce using rule 34 (exp1 -> PLUS exp .)


state 105

    (35) exp1 -> MINUS exp .

    GTHAN           reduce using rule 35 (exp1 -> MINUS exp .)
    LTHAN           reduce using rule 35 (exp1 -> MINUS exp .)
    AND             reduce using rule 35 (exp1 -> MINUS exp .)
    OR              reduce using rule 35 (exp1 -> MINUS exp .)
    RBRACKET        reduce using rule 35 (exp1 -> MINUS exp .)
    RPAREN          reduce using rule 35 (exp1 -> MINUS exp .)
    SEMICOLON       reduce using rule 35 (exp1 -> MINUS exp .)
    QUOTES          reduce using rule 35 (exp1 -> MINUS exp .)
    LCBRACKET       reduce using rule 35 (exp1 -> MINUS exp .)
    PLUS            reduce using rule 35 (exp1 -> MINUS exp .)
    MINUS           reduce using rule 35 (exp1 -> MINUS exp .)
    INT             reduce using rule 35 (exp1 -> MINUS exp .)
    FLOAT           reduce using rule 35 (exp1 -> MINUS exp .)
    ID              reduce using rule 35 (exp1 -> MINUS exp .)
    RCBRACKET       reduce using rule 35 (exp1 -> MINUS exp .)


state 106

    (38) termino1 -> TIMES termino .

    PLUS            reduce using rule 38 (termino1 -> TIMES termino .)
    MINUS           reduce using rule 38 (termino1 -> TIMES termino .)
    SEMICOLON       reduce using rule 38 (termino1 -> TIMES termino .)


state 107

    (39) termino1 -> DIVIDE termino .

    PLUS            reduce using rule 39 (termino1 -> DIVIDE termino .)
    MINUS           reduce using rule 39 (termino1 -> DIVIDE termino .)
    SEMICOLON       reduce using rule 39 (termino1 -> DIVIDE termino .)


state 108

    (41) factor -> LCBRACKET expresion RCBRACKET .

    TIMES           reduce using rule 41 (factor -> LCBRACKET expresion RCBRACKET .)
    DIVIDE          reduce using rule 41 (factor -> LCBRACKET expresion RCBRACKET .)
    SEMICOLON       reduce using rule 41 (factor -> LCBRACKET expresion RCBRACKET .)


state 109

    (26) asignacion -> ID LBRACKET exp RBRACKET EQUALS . expresion SEMICOLON
    (28) expresion -> . exp expresion1
    (33) exp -> . termino exp1
    (37) termino -> . factor termino1
    (41) factor -> . LCBRACKET expresion RCBRACKET
    (42) factor -> . PLUS varcte
    (43) factor -> . MINUS varcte
    (44) factor -> . varcte
    (45) varcte -> . INT
    (46) varcte -> . FLOAT
    (47) varcte -> . ID

    LCBRACKET       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    ID              shift and go to state 47

    exp                            shift and go to state 49
    expresion                      shift and go to state 117
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    varcte                         shift and go to state 54

state 110

    (27) retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .

    RCBRACKET       reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)
    READ            reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)
    WRITE           reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)
    $end            reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)
    LCBRACKET       reduce using rule 27 (retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON .)


state 111

    (54) escritura2 -> RPAREN SEMICOLON .

    RCBRACKET       reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)
    ID              reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)
    RETURN          reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)
    READ            reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)
    WRITE           reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)
    $end            reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)
    LCBRACKET       reduce using rule 54 (escritura2 -> RPAREN SEMICOLON .)


state 112

    (57) letrero1 -> CHAR QUOTES .

    RPAREN          reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    QUOTES          reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    LCBRACKET       reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    PLUS            reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    MINUS           reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    INT             reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    FLOAT           reduce using rule 57 (letrero1 -> CHAR QUOTES .)
    ID              reduce using rule 57 (letrero1 -> CHAR QUOTES .)


state 113

    (58) letrero1 -> CHAR letrero1 .

    RPAREN          reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    QUOTES          reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    LCBRACKET       reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    PLUS            reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    MINUS           reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    INT             reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    FLOAT           reduce using rule 58 (letrero1 -> CHAR letrero1 .)
    ID              reduce using rule 58 (letrero1 -> CHAR letrero1 .)


state 114

    (14) function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON . variables bloque
    (2) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 118

state 115

    (8) listaids2 -> LBRACKET INT RBRACKET listaids1 .

    FUNCTION        reduce using rule 8 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    LCBRACKET       reduce using rule 8 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    RPAREN          reduce using rule 8 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    ID              reduce using rule 8 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)


state 116

    (9) listaids2 -> LBRACKET INT RBRACKET SEMICOLON .
    (7) listaids1 -> SEMICOLON .
    (10) listaids2 -> SEMICOLON .

  ! reduce/reduce conflict for FUNCTION resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for LCBRACKET resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for LCBRACKET resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (listaids1 -> SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 7 (listaids1 -> SEMICOLON .)
    FUNCTION        reduce using rule 7 (listaids1 -> SEMICOLON .)
    LCBRACKET       reduce using rule 7 (listaids1 -> SEMICOLON .)
    RPAREN          reduce using rule 7 (listaids1 -> SEMICOLON .)
    ID              reduce using rule 7 (listaids1 -> SEMICOLON .)

  ! FUNCTION        [ reduce using rule 9 (listaids2 -> LBRACKET INT RBRACKET SEMICOLON .) ]
  ! LCBRACKET       [ reduce using rule 9 (listaids2 -> LBRACKET INT RBRACKET SEMICOLON .) ]
  ! RPAREN          [ reduce using rule 9 (listaids2 -> LBRACKET INT RBRACKET SEMICOLON .) ]
  ! ID              [ reduce using rule 9 (listaids2 -> LBRACKET INT RBRACKET SEMICOLON .) ]
  ! FUNCTION        [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]
  ! LCBRACKET       [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]
  ! RPAREN          [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]
  ! ID              [ reduce using rule 10 (listaids2 -> SEMICOLON .) ]


state 117

    (26) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 119


state 118

    (14) function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables . bloque
    (15) bloque -> . LCBRACKET estatuto bloque1
    (16) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 15

    bloque                         shift and go to state 120

state 119

    (26) asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .

    RCBRACKET       reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)
    ID              reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)
    READ            reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)
    $end            reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)
    LCBRACKET       reduce using rule 26 (asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON .)


state 120

    (14) function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloque .

    LCBRACKET       reduce using rule 14 (function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 45 resolved using rule (listaids1 -> SEMICOLON)
WARNING: rejected rule (listaids2 -> SEMICOLON) in state 45
WARNING: reduce/reduce conflict in state 116 resolved using rule (listaids1 -> SEMICOLON)
WARNING: rejected rule (listaids2 -> LBRACKET INT RBRACKET SEMICOLON) in state 116
WARNING: reduce/reduce conflict in state 116 resolved using rule (listaids1 -> SEMICOLON)
WARNING: rejected rule (listaids2 -> SEMICOLON) in state 116
WARNING: Rule (listaids2 -> SEMICOLON) is never reduced
WARNING: Rule (listaids2 -> LBRACKET INT RBRACKET SEMICOLON) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DOT
    GTHAN
    LTHAN
    OR
    SQUOTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON variables function
Rule 2     variables -> VARS variables1
Rule 3     variables1 -> tipo COLON listaids
Rule 4     listaids -> ID listaids1
Rule 5     listaids1 -> COMA ID listaids1
Rule 6     listaids1 -> listaids2
Rule 7     listaids1 -> SEMICOLON variables1
Rule 8     listaids1 -> SEMICOLON
Rule 9     listaids1 -> RPAREN
Rule 10    listaids2 -> LBRACKET INT RBRACKET listaids1
Rule 11    function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque
Rule 12    bloque -> LCBRACKET estatuto
Rule 13    bloque -> LCBRACKET RCBRACKET
Rule 14    estatuto -> asignacion
Rule 15    estatuto -> retornofuncion
Rule 16    estatuto -> lectura
Rule 17    estatuto -> escritura
Rule 18    estatuto -> decision
Rule 19    estatuto -> repeticion
Rule 20    estatuto -> RBRACKET
Rule 21    asignacion -> ID EQUALS expresion SEMICOLON estatuto
Rule 22    asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
Rule 23    retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON
Rule 24    expresion -> expresion PLUS expresion
Rule 25    expresion -> expresion MINUS expresion
Rule 26    expresion -> expresion TIMES expresion
Rule 27    expresion -> expresion DIVIDE expresion
Rule 28    expresion -> LPAREN expresion RPAREN
Rule 29    expresion -> INT
Rule 30    expresion -> FLOAT
Rule 31    expresion -> ID
Rule 32    lectura -> READ LPAREN lectura1
Rule 33    lectura1 -> RPAREN SEMICOLON
Rule 34    lectura1 -> listaids lectura1
Rule 35    escritura -> WRITE LPAREN escritura1
Rule 36    escritura1 -> letrero escritura2
Rule 37    escritura1 -> expresion escritura2
Rule 38    escritura2 -> RPAREN SEMICOLON
Rule 39    escritura2 -> escritura1
Rule 40    letrero -> QUOTES letrero1
Rule 41    letrero1 -> CHAR QUOTES
Rule 42    letrero1 -> CHAR letrero1
Rule 43    repeticion -> condicional
Rule 44    repeticion -> nocondicional
Rule 45    decision -> IF LPAREN expresion RPAREN THEN bloque decision1
Rule 46    decision1 -> ELSE bloque
Rule 47    condicional -> WHILE LPAREN expresion RPAREN DO bloque
Rule 48    nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque
Rule 49    tipo -> INT
Rule 50    tipo -> FLOAT
Rule 51    tipo -> CHAR
Rule 52    tiporetorno -> INT
Rule 53    tiporetorno -> FLOAT

Terminals, with rules where they appear

AND                  : 
CHAR                 : 41 42 51
COLON                : 3
COMA                 : 5
DIVIDE               : 27
DO                   : 47 48
DOT                  : 
ELSE                 : 46
EQUALS               : 21 22 48
FLOAT                : 30 50 53
FOR                  : 48
FUNCTION             : 11
GTHAN                : 
ID                   : 1 4 5 11 21 22 31 48
IF                   : 45
INT                  : 10 29 49 52
LBRACKET             : 10 22
LCBRACKET            : 12 13
LPAREN               : 11 23 28 32 35 45 47
LTHAN                : 
MINUS                : 25
OR                   : 
PLUS                 : 24
PROGRAMA             : 1
QUOTES               : 40 41
RBRACKET             : 10 20 22
RCBRACKET            : 13
READ                 : 32
RETURN               : 23
RPAREN               : 9 23 28 33 38 45 47
SEMICOLON            : 1 7 8 21 22 23 33 38
SQUOTES              : 
THEN                 : 45
TIMES                : 26
TO                   : 48
VARS                 : 2
WHILE                : 47
WRITE                : 35
error                : 

Nonterminals, with rules where they appear

asignacion           : 14
bloque               : 11 45 46 47 48
condicional          : 43
decision             : 18
decision1            : 45
escritura            : 17
escritura1           : 35 39
escritura2           : 36 37
estatuto             : 12 21 22
expresion            : 21 22 22 23 24 24 25 25 26 26 27 27 28 37 45 47 48 48
function             : 1
lectura              : 16
lectura1             : 32 34
letrero              : 36
letrero1             : 40 42
listaids             : 3 34
listaids1            : 4 5 10
listaids2            : 6
nocondicional        : 44
programa             : 0
repeticion           : 19
retornofuncion       : 15
tipo                 : 3
tiporetorno          : 11
variables            : 1 11
variables1           : 2 7 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON variables function

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON variables function

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON variables function

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . variables function
    (2) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID SEMICOLON variables . function
    (11) function -> . FUNCTION tiporetorno ID LPAREN variables1 variables bloque

    FUNCTION        shift and go to state 8

    function                       shift and go to state 7

state 6

    (2) variables -> VARS . variables1
    (3) variables1 -> . tipo COLON listaids
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (1) programa -> PROGRAMA ID SEMICOLON variables function .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON variables function .)


state 8

    (11) function -> FUNCTION . tiporetorno ID LPAREN variables1 variables bloque
    (52) tiporetorno -> . INT
    (53) tiporetorno -> . FLOAT

    INT             shift and go to state 15
    FLOAT           shift and go to state 16

    tiporetorno                    shift and go to state 14

state 9

    (2) variables -> VARS variables1 .

    FUNCTION        reduce using rule 2 (variables -> VARS variables1 .)
    LCBRACKET       reduce using rule 2 (variables -> VARS variables1 .)


state 10

    (3) variables1 -> tipo . COLON listaids

    COLON           shift and go to state 17


state 11

    (49) tipo -> INT .

    COLON           reduce using rule 49 (tipo -> INT .)


state 12

    (50) tipo -> FLOAT .

    COLON           reduce using rule 50 (tipo -> FLOAT .)


state 13

    (51) tipo -> CHAR .

    COLON           reduce using rule 51 (tipo -> CHAR .)


state 14

    (11) function -> FUNCTION tiporetorno . ID LPAREN variables1 variables bloque

    ID              shift and go to state 18


state 15

    (52) tiporetorno -> INT .

    ID              reduce using rule 52 (tiporetorno -> INT .)


state 16

    (53) tiporetorno -> FLOAT .

    ID              reduce using rule 53 (tiporetorno -> FLOAT .)


state 17

    (3) variables1 -> tipo COLON . listaids
    (4) listaids -> . ID listaids1

    ID              shift and go to state 20

    listaids                       shift and go to state 19

state 18

    (11) function -> FUNCTION tiporetorno ID . LPAREN variables1 variables bloque

    LPAREN          shift and go to state 21


state 19

    (3) variables1 -> tipo COLON listaids .

    FUNCTION        reduce using rule 3 (variables1 -> tipo COLON listaids .)
    LCBRACKET       reduce using rule 3 (variables1 -> tipo COLON listaids .)
    VARS            reduce using rule 3 (variables1 -> tipo COLON listaids .)
    RPAREN          reduce using rule 3 (variables1 -> tipo COLON listaids .)
    ID              reduce using rule 3 (variables1 -> tipo COLON listaids .)


state 20

    (4) listaids -> ID . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON variables1
    (8) listaids1 -> . SEMICOLON
    (9) listaids1 -> . RPAREN
    (10) listaids2 -> . LBRACKET INT RBRACKET listaids1

    COMA            shift and go to state 23
    SEMICOLON       shift and go to state 25
    RPAREN          shift and go to state 26
    LBRACKET        shift and go to state 27

    listaids1                      shift and go to state 22
    listaids2                      shift and go to state 24

state 21

    (11) function -> FUNCTION tiporetorno ID LPAREN . variables1 variables bloque
    (3) variables1 -> . tipo COLON listaids
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 28
    tipo                           shift and go to state 10

state 22

    (4) listaids -> ID listaids1 .

    FUNCTION        reduce using rule 4 (listaids -> ID listaids1 .)
    LCBRACKET       reduce using rule 4 (listaids -> ID listaids1 .)
    VARS            reduce using rule 4 (listaids -> ID listaids1 .)
    RPAREN          reduce using rule 4 (listaids -> ID listaids1 .)
    ID              reduce using rule 4 (listaids -> ID listaids1 .)


state 23

    (5) listaids1 -> COMA . ID listaids1

    ID              shift and go to state 29


state 24

    (6) listaids1 -> listaids2 .

    FUNCTION        reduce using rule 6 (listaids1 -> listaids2 .)
    LCBRACKET       reduce using rule 6 (listaids1 -> listaids2 .)
    VARS            reduce using rule 6 (listaids1 -> listaids2 .)
    RPAREN          reduce using rule 6 (listaids1 -> listaids2 .)
    ID              reduce using rule 6 (listaids1 -> listaids2 .)


state 25

    (7) listaids1 -> SEMICOLON . variables1
    (8) listaids1 -> SEMICOLON .
    (3) variables1 -> . tipo COLON listaids
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    FUNCTION        reduce using rule 8 (listaids1 -> SEMICOLON .)
    LCBRACKET       reduce using rule 8 (listaids1 -> SEMICOLON .)
    VARS            reduce using rule 8 (listaids1 -> SEMICOLON .)
    RPAREN          reduce using rule 8 (listaids1 -> SEMICOLON .)
    ID              reduce using rule 8 (listaids1 -> SEMICOLON .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 30
    tipo                           shift and go to state 10

state 26

    (9) listaids1 -> RPAREN .

    FUNCTION        reduce using rule 9 (listaids1 -> RPAREN .)
    LCBRACKET       reduce using rule 9 (listaids1 -> RPAREN .)
    VARS            reduce using rule 9 (listaids1 -> RPAREN .)
    RPAREN          reduce using rule 9 (listaids1 -> RPAREN .)
    ID              reduce using rule 9 (listaids1 -> RPAREN .)


state 27

    (10) listaids2 -> LBRACKET . INT RBRACKET listaids1

    INT             shift and go to state 31


state 28

    (11) function -> FUNCTION tiporetorno ID LPAREN variables1 . variables bloque
    (2) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 32

state 29

    (5) listaids1 -> COMA ID . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON variables1
    (8) listaids1 -> . SEMICOLON
    (9) listaids1 -> . RPAREN
    (10) listaids2 -> . LBRACKET INT RBRACKET listaids1

    COMA            shift and go to state 23
    SEMICOLON       shift and go to state 25
    RPAREN          shift and go to state 26
    LBRACKET        shift and go to state 27

    listaids1                      shift and go to state 33
    listaids2                      shift and go to state 24

state 30

    (7) listaids1 -> SEMICOLON variables1 .

    FUNCTION        reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    LCBRACKET       reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    VARS            reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    RPAREN          reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    ID              reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)


state 31

    (10) listaids2 -> LBRACKET INT . RBRACKET listaids1

    RBRACKET        shift and go to state 34


state 32

    (11) function -> FUNCTION tiporetorno ID LPAREN variables1 variables . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 35

state 33

    (5) listaids1 -> COMA ID listaids1 .

    FUNCTION        reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    LCBRACKET       reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    VARS            reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    RPAREN          reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    ID              reduce using rule 5 (listaids1 -> COMA ID listaids1 .)


state 34

    (10) listaids2 -> LBRACKET INT RBRACKET . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON variables1
    (8) listaids1 -> . SEMICOLON
    (9) listaids1 -> . RPAREN
    (10) listaids2 -> . LBRACKET INT RBRACKET listaids1

    COMA            shift and go to state 23
    SEMICOLON       shift and go to state 25
    RPAREN          shift and go to state 26
    LBRACKET        shift and go to state 27

    listaids1                      shift and go to state 37
    listaids2                      shift and go to state 24

state 35

    (11) function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque .

    $end            reduce using rule 11 (function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque .)


state 36

    (12) bloque -> LCBRACKET . estatuto
    (13) bloque -> LCBRACKET . RCBRACKET
    (14) estatuto -> . asignacion
    (15) estatuto -> . retornofuncion
    (16) estatuto -> . lectura
    (17) estatuto -> . escritura
    (18) estatuto -> . decision
    (19) estatuto -> . repeticion
    (20) estatuto -> . RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (22) asignacion -> . ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (23) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (32) lectura -> . READ LPAREN lectura1
    (35) escritura -> . WRITE LPAREN escritura1
    (45) decision -> . IF LPAREN expresion RPAREN THEN bloque decision1
    (43) repeticion -> . condicional
    (44) repeticion -> . nocondicional
    (47) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (48) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque

    RCBRACKET       shift and go to state 39
    RBRACKET        shift and go to state 46
    ID              shift and go to state 47
    RETURN          shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatuto                       shift and go to state 38
    asignacion                     shift and go to state 40
    retornofuncion                 shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 43
    decision                       shift and go to state 44
    repeticion                     shift and go to state 45
    condicional                    shift and go to state 52
    nocondicional                  shift and go to state 53

state 37

    (10) listaids2 -> LBRACKET INT RBRACKET listaids1 .

    FUNCTION        reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    LCBRACKET       reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    VARS            reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    RPAREN          reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    ID              reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)


state 38

    (12) bloque -> LCBRACKET estatuto .

    $end            reduce using rule 12 (bloque -> LCBRACKET estatuto .)
    ELSE            reduce using rule 12 (bloque -> LCBRACKET estatuto .)


state 39

    (13) bloque -> LCBRACKET RCBRACKET .

    $end            reduce using rule 13 (bloque -> LCBRACKET RCBRACKET .)
    ELSE            reduce using rule 13 (bloque -> LCBRACKET RCBRACKET .)


state 40

    (14) estatuto -> asignacion .

    $end            reduce using rule 14 (estatuto -> asignacion .)
    ELSE            reduce using rule 14 (estatuto -> asignacion .)


state 41

    (15) estatuto -> retornofuncion .

    $end            reduce using rule 15 (estatuto -> retornofuncion .)
    ELSE            reduce using rule 15 (estatuto -> retornofuncion .)


state 42

    (16) estatuto -> lectura .

    $end            reduce using rule 16 (estatuto -> lectura .)
    ELSE            reduce using rule 16 (estatuto -> lectura .)


state 43

    (17) estatuto -> escritura .

    $end            reduce using rule 17 (estatuto -> escritura .)
    ELSE            reduce using rule 17 (estatuto -> escritura .)


state 44

    (18) estatuto -> decision .

    $end            reduce using rule 18 (estatuto -> decision .)
    ELSE            reduce using rule 18 (estatuto -> decision .)


state 45

    (19) estatuto -> repeticion .

    $end            reduce using rule 19 (estatuto -> repeticion .)
    ELSE            reduce using rule 19 (estatuto -> repeticion .)


state 46

    (20) estatuto -> RBRACKET .

    $end            reduce using rule 20 (estatuto -> RBRACKET .)
    ELSE            reduce using rule 20 (estatuto -> RBRACKET .)


state 47

    (21) asignacion -> ID . EQUALS expresion SEMICOLON estatuto
    (22) asignacion -> ID . LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto

    EQUALS          shift and go to state 56
    LBRACKET        shift and go to state 57


state 48

    (23) retornofuncion -> RETURN . LPAREN expresion RPAREN SEMICOLON

    LPAREN          shift and go to state 58


state 49

    (32) lectura -> READ . LPAREN lectura1

    LPAREN          shift and go to state 59


state 50

    (35) escritura -> WRITE . LPAREN escritura1

    LPAREN          shift and go to state 60


state 51

    (45) decision -> IF . LPAREN expresion RPAREN THEN bloque decision1

    LPAREN          shift and go to state 61


state 52

    (43) repeticion -> condicional .

    $end            reduce using rule 43 (repeticion -> condicional .)
    ELSE            reduce using rule 43 (repeticion -> condicional .)


state 53

    (44) repeticion -> nocondicional .

    $end            reduce using rule 44 (repeticion -> nocondicional .)
    ELSE            reduce using rule 44 (repeticion -> nocondicional .)


state 54

    (47) condicional -> WHILE . LPAREN expresion RPAREN DO bloque

    LPAREN          shift and go to state 62


state 55

    (48) nocondicional -> FOR . ID EQUALS expresion TO expresion DO bloque

    ID              shift and go to state 63


state 56

    (21) asignacion -> ID EQUALS . expresion SEMICOLON estatuto
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 65

state 57

    (22) asignacion -> ID LBRACKET . expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 69

state 58

    (23) retornofuncion -> RETURN LPAREN . expresion RPAREN SEMICOLON
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 70

state 59

    (32) lectura -> READ LPAREN . lectura1
    (33) lectura1 -> . RPAREN SEMICOLON
    (34) lectura1 -> . listaids lectura1
    (4) listaids -> . ID listaids1

    RPAREN          shift and go to state 72
    ID              shift and go to state 20

    lectura1                       shift and go to state 71
    listaids                       shift and go to state 73

state 60

    (35) escritura -> WRITE LPAREN . escritura1
    (36) escritura1 -> . letrero escritura2
    (37) escritura1 -> . expresion escritura2
    (40) letrero -> . QUOTES letrero1
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    QUOTES          shift and go to state 77
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    escritura1                     shift and go to state 74
    letrero                        shift and go to state 75
    expresion                      shift and go to state 76

state 61

    (45) decision -> IF LPAREN . expresion RPAREN THEN bloque decision1
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 78

state 62

    (47) condicional -> WHILE LPAREN . expresion RPAREN DO bloque
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 79

state 63

    (48) nocondicional -> FOR ID . EQUALS expresion TO expresion DO bloque

    EQUALS          shift and go to state 80


state 64

    (31) expresion -> ID .

    SEMICOLON       reduce using rule 31 (expresion -> ID .)
    PLUS            reduce using rule 31 (expresion -> ID .)
    MINUS           reduce using rule 31 (expresion -> ID .)
    TIMES           reduce using rule 31 (expresion -> ID .)
    DIVIDE          reduce using rule 31 (expresion -> ID .)
    RBRACKET        reduce using rule 31 (expresion -> ID .)
    RPAREN          reduce using rule 31 (expresion -> ID .)
    QUOTES          reduce using rule 31 (expresion -> ID .)
    LPAREN          reduce using rule 31 (expresion -> ID .)
    INT             reduce using rule 31 (expresion -> ID .)
    FLOAT           reduce using rule 31 (expresion -> ID .)
    ID              reduce using rule 31 (expresion -> ID .)
    TO              reduce using rule 31 (expresion -> ID .)
    DO              reduce using rule 31 (expresion -> ID .)


state 65

    (21) asignacion -> ID EQUALS expresion . SEMICOLON estatuto
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    SEMICOLON       shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 66

    (28) expresion -> LPAREN . expresion RPAREN
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 86

state 67

    (29) expresion -> INT .

    SEMICOLON       reduce using rule 29 (expresion -> INT .)
    PLUS            reduce using rule 29 (expresion -> INT .)
    MINUS           reduce using rule 29 (expresion -> INT .)
    TIMES           reduce using rule 29 (expresion -> INT .)
    DIVIDE          reduce using rule 29 (expresion -> INT .)
    RBRACKET        reduce using rule 29 (expresion -> INT .)
    RPAREN          reduce using rule 29 (expresion -> INT .)
    QUOTES          reduce using rule 29 (expresion -> INT .)
    LPAREN          reduce using rule 29 (expresion -> INT .)
    INT             reduce using rule 29 (expresion -> INT .)
    FLOAT           reduce using rule 29 (expresion -> INT .)
    ID              reduce using rule 29 (expresion -> INT .)
    TO              reduce using rule 29 (expresion -> INT .)
    DO              reduce using rule 29 (expresion -> INT .)


state 68

    (30) expresion -> FLOAT .

    SEMICOLON       reduce using rule 30 (expresion -> FLOAT .)
    PLUS            reduce using rule 30 (expresion -> FLOAT .)
    MINUS           reduce using rule 30 (expresion -> FLOAT .)
    TIMES           reduce using rule 30 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 30 (expresion -> FLOAT .)
    RBRACKET        reduce using rule 30 (expresion -> FLOAT .)
    RPAREN          reduce using rule 30 (expresion -> FLOAT .)
    QUOTES          reduce using rule 30 (expresion -> FLOAT .)
    LPAREN          reduce using rule 30 (expresion -> FLOAT .)
    INT             reduce using rule 30 (expresion -> FLOAT .)
    FLOAT           reduce using rule 30 (expresion -> FLOAT .)
    ID              reduce using rule 30 (expresion -> FLOAT .)
    TO              reduce using rule 30 (expresion -> FLOAT .)
    DO              reduce using rule 30 (expresion -> FLOAT .)


state 69

    (22) asignacion -> ID LBRACKET expresion . RBRACKET EQUALS expresion SEMICOLON estatuto
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    RBRACKET        shift and go to state 87
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 70

    (23) retornofuncion -> RETURN LPAREN expresion . RPAREN SEMICOLON
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 88
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 71

    (32) lectura -> READ LPAREN lectura1 .

    $end            reduce using rule 32 (lectura -> READ LPAREN lectura1 .)
    ELSE            reduce using rule 32 (lectura -> READ LPAREN lectura1 .)


state 72

    (33) lectura1 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 89


state 73

    (34) lectura1 -> listaids . lectura1
    (33) lectura1 -> . RPAREN SEMICOLON
    (34) lectura1 -> . listaids lectura1
    (4) listaids -> . ID listaids1

    RPAREN          shift and go to state 72
    ID              shift and go to state 20

    listaids                       shift and go to state 73
    lectura1                       shift and go to state 90

state 74

    (35) escritura -> WRITE LPAREN escritura1 .

    $end            reduce using rule 35 (escritura -> WRITE LPAREN escritura1 .)
    ELSE            reduce using rule 35 (escritura -> WRITE LPAREN escritura1 .)


state 75

    (36) escritura1 -> letrero . escritura2
    (38) escritura2 -> . RPAREN SEMICOLON
    (39) escritura2 -> . escritura1
    (36) escritura1 -> . letrero escritura2
    (37) escritura1 -> . expresion escritura2
    (40) letrero -> . QUOTES letrero1
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    RPAREN          shift and go to state 92
    QUOTES          shift and go to state 77
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    letrero                        shift and go to state 75
    escritura2                     shift and go to state 91
    escritura1                     shift and go to state 93
    expresion                      shift and go to state 76

state 76

    (37) escritura1 -> expresion . escritura2
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion
    (38) escritura2 -> . RPAREN SEMICOLON
    (39) escritura2 -> . escritura1
    (36) escritura1 -> . letrero escritura2
    (37) escritura1 -> . expresion escritura2
    (40) letrero -> . QUOTES letrero1
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    RPAREN          shift and go to state 92
    QUOTES          shift and go to state 77
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 76
    escritura2                     shift and go to state 94
    escritura1                     shift and go to state 93
    letrero                        shift and go to state 75

state 77

    (40) letrero -> QUOTES . letrero1
    (41) letrero1 -> . CHAR QUOTES
    (42) letrero1 -> . CHAR letrero1

    CHAR            shift and go to state 96

    letrero1                       shift and go to state 95

state 78

    (45) decision -> IF LPAREN expresion . RPAREN THEN bloque decision1
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 97
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 79

    (47) condicional -> WHILE LPAREN expresion . RPAREN DO bloque
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 80

    (48) nocondicional -> FOR ID EQUALS . expresion TO expresion DO bloque
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 99

state 81

    (21) asignacion -> ID EQUALS expresion SEMICOLON . estatuto
    (14) estatuto -> . asignacion
    (15) estatuto -> . retornofuncion
    (16) estatuto -> . lectura
    (17) estatuto -> . escritura
    (18) estatuto -> . decision
    (19) estatuto -> . repeticion
    (20) estatuto -> . RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (22) asignacion -> . ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (23) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (32) lectura -> . READ LPAREN lectura1
    (35) escritura -> . WRITE LPAREN escritura1
    (45) decision -> . IF LPAREN expresion RPAREN THEN bloque decision1
    (43) repeticion -> . condicional
    (44) repeticion -> . nocondicional
    (47) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (48) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque

    RBRACKET        shift and go to state 46
    ID              shift and go to state 47
    RETURN          shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatuto                       shift and go to state 100
    asignacion                     shift and go to state 40
    retornofuncion                 shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 43
    decision                       shift and go to state 44
    repeticion                     shift and go to state 45
    condicional                    shift and go to state 52
    nocondicional                  shift and go to state 53

state 82

    (24) expresion -> expresion PLUS . expresion
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 101

state 83

    (25) expresion -> expresion MINUS . expresion
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 102

state 84

    (26) expresion -> expresion TIMES . expresion
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 103

state 85

    (27) expresion -> expresion DIVIDE . expresion
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 104

state 86

    (28) expresion -> LPAREN expresion . RPAREN
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 105
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 87

    (22) asignacion -> ID LBRACKET expresion RBRACKET . EQUALS expresion SEMICOLON estatuto

    EQUALS          shift and go to state 106


state 88

    (23) retornofuncion -> RETURN LPAREN expresion RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 107


state 89

    (33) lectura1 -> RPAREN SEMICOLON .

    $end            reduce using rule 33 (lectura1 -> RPAREN SEMICOLON .)
    ELSE            reduce using rule 33 (lectura1 -> RPAREN SEMICOLON .)


state 90

    (34) lectura1 -> listaids lectura1 .

    $end            reduce using rule 34 (lectura1 -> listaids lectura1 .)
    ELSE            reduce using rule 34 (lectura1 -> listaids lectura1 .)


state 91

    (36) escritura1 -> letrero escritura2 .

    $end            reduce using rule 36 (escritura1 -> letrero escritura2 .)
    ELSE            reduce using rule 36 (escritura1 -> letrero escritura2 .)


state 92

    (38) escritura2 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 108


state 93

    (39) escritura2 -> escritura1 .

    $end            reduce using rule 39 (escritura2 -> escritura1 .)
    ELSE            reduce using rule 39 (escritura2 -> escritura1 .)


state 94

    (37) escritura1 -> expresion escritura2 .

    $end            reduce using rule 37 (escritura1 -> expresion escritura2 .)
    ELSE            reduce using rule 37 (escritura1 -> expresion escritura2 .)


state 95

    (40) letrero -> QUOTES letrero1 .

    RPAREN          reduce using rule 40 (letrero -> QUOTES letrero1 .)
    QUOTES          reduce using rule 40 (letrero -> QUOTES letrero1 .)
    LPAREN          reduce using rule 40 (letrero -> QUOTES letrero1 .)
    INT             reduce using rule 40 (letrero -> QUOTES letrero1 .)
    FLOAT           reduce using rule 40 (letrero -> QUOTES letrero1 .)
    ID              reduce using rule 40 (letrero -> QUOTES letrero1 .)


state 96

    (41) letrero1 -> CHAR . QUOTES
    (42) letrero1 -> CHAR . letrero1
    (41) letrero1 -> . CHAR QUOTES
    (42) letrero1 -> . CHAR letrero1

    QUOTES          shift and go to state 109
    CHAR            shift and go to state 96

    letrero1                       shift and go to state 110

state 97

    (45) decision -> IF LPAREN expresion RPAREN . THEN bloque decision1

    THEN            shift and go to state 111


state 98

    (47) condicional -> WHILE LPAREN expresion RPAREN . DO bloque

    DO              shift and go to state 112


state 99

    (48) nocondicional -> FOR ID EQUALS expresion . TO expresion DO bloque
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    TO              shift and go to state 113
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 100

    (21) asignacion -> ID EQUALS expresion SEMICOLON estatuto .

    $end            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON estatuto .)
    ELSE            reduce using rule 21 (asignacion -> ID EQUALS expresion SEMICOLON estatuto .)


state 101

    (24) expresion -> expresion PLUS expresion .
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 24 (expresion -> expresion PLUS expresion .)
    PLUS            reduce using rule 24 (expresion -> expresion PLUS expresion .)
    MINUS           reduce using rule 24 (expresion -> expresion PLUS expresion .)
    RBRACKET        reduce using rule 24 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 24 (expresion -> expresion PLUS expresion .)
    QUOTES          reduce using rule 24 (expresion -> expresion PLUS expresion .)
    LPAREN          reduce using rule 24 (expresion -> expresion PLUS expresion .)
    INT             reduce using rule 24 (expresion -> expresion PLUS expresion .)
    FLOAT           reduce using rule 24 (expresion -> expresion PLUS expresion .)
    ID              reduce using rule 24 (expresion -> expresion PLUS expresion .)
    TO              reduce using rule 24 (expresion -> expresion PLUS expresion .)
    DO              reduce using rule 24 (expresion -> expresion PLUS expresion .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85

  ! TIMES           [ reduce using rule 24 (expresion -> expresion PLUS expresion .) ]
  ! DIVIDE          [ reduce using rule 24 (expresion -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]


state 102

    (25) expresion -> expresion MINUS expresion .
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 25 (expresion -> expresion MINUS expresion .)
    PLUS            reduce using rule 25 (expresion -> expresion MINUS expresion .)
    MINUS           reduce using rule 25 (expresion -> expresion MINUS expresion .)
    RBRACKET        reduce using rule 25 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 25 (expresion -> expresion MINUS expresion .)
    QUOTES          reduce using rule 25 (expresion -> expresion MINUS expresion .)
    LPAREN          reduce using rule 25 (expresion -> expresion MINUS expresion .)
    INT             reduce using rule 25 (expresion -> expresion MINUS expresion .)
    FLOAT           reduce using rule 25 (expresion -> expresion MINUS expresion .)
    ID              reduce using rule 25 (expresion -> expresion MINUS expresion .)
    TO              reduce using rule 25 (expresion -> expresion MINUS expresion .)
    DO              reduce using rule 25 (expresion -> expresion MINUS expresion .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85

  ! TIMES           [ reduce using rule 25 (expresion -> expresion MINUS expresion .) ]
  ! DIVIDE          [ reduce using rule 25 (expresion -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]


state 103

    (26) expresion -> expresion TIMES expresion .
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 26 (expresion -> expresion TIMES expresion .)
    PLUS            reduce using rule 26 (expresion -> expresion TIMES expresion .)
    MINUS           reduce using rule 26 (expresion -> expresion TIMES expresion .)
    TIMES           reduce using rule 26 (expresion -> expresion TIMES expresion .)
    DIVIDE          reduce using rule 26 (expresion -> expresion TIMES expresion .)
    RBRACKET        reduce using rule 26 (expresion -> expresion TIMES expresion .)
    RPAREN          reduce using rule 26 (expresion -> expresion TIMES expresion .)
    QUOTES          reduce using rule 26 (expresion -> expresion TIMES expresion .)
    LPAREN          reduce using rule 26 (expresion -> expresion TIMES expresion .)
    INT             reduce using rule 26 (expresion -> expresion TIMES expresion .)
    FLOAT           reduce using rule 26 (expresion -> expresion TIMES expresion .)
    ID              reduce using rule 26 (expresion -> expresion TIMES expresion .)
    TO              reduce using rule 26 (expresion -> expresion TIMES expresion .)
    DO              reduce using rule 26 (expresion -> expresion TIMES expresion .)

  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! TIMES           [ shift and go to state 84 ]
  ! DIVIDE          [ shift and go to state 85 ]


state 104

    (27) expresion -> expresion DIVIDE expresion .
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    PLUS            reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    MINUS           reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    TIMES           reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    DIVIDE          reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    RBRACKET        reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    RPAREN          reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    QUOTES          reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    LPAREN          reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    INT             reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    FLOAT           reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    ID              reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    TO              reduce using rule 27 (expresion -> expresion DIVIDE expresion .)
    DO              reduce using rule 27 (expresion -> expresion DIVIDE expresion .)

  ! PLUS            [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! TIMES           [ shift and go to state 84 ]
  ! DIVIDE          [ shift and go to state 85 ]


state 105

    (28) expresion -> LPAREN expresion RPAREN .

    SEMICOLON       reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    QUOTES          reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    INT             reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 28 (expresion -> LPAREN expresion RPAREN .)


state 106

    (22) asignacion -> ID LBRACKET expresion RBRACKET EQUALS . expresion SEMICOLON estatuto
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 114

state 107

    (23) retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .

    $end            reduce using rule 23 (retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .)
    ELSE            reduce using rule 23 (retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .)


state 108

    (38) escritura2 -> RPAREN SEMICOLON .

    $end            reduce using rule 38 (escritura2 -> RPAREN SEMICOLON .)
    ELSE            reduce using rule 38 (escritura2 -> RPAREN SEMICOLON .)


state 109

    (41) letrero1 -> CHAR QUOTES .

    RPAREN          reduce using rule 41 (letrero1 -> CHAR QUOTES .)
    QUOTES          reduce using rule 41 (letrero1 -> CHAR QUOTES .)
    LPAREN          reduce using rule 41 (letrero1 -> CHAR QUOTES .)
    INT             reduce using rule 41 (letrero1 -> CHAR QUOTES .)
    FLOAT           reduce using rule 41 (letrero1 -> CHAR QUOTES .)
    ID              reduce using rule 41 (letrero1 -> CHAR QUOTES .)


state 110

    (42) letrero1 -> CHAR letrero1 .

    RPAREN          reduce using rule 42 (letrero1 -> CHAR letrero1 .)
    QUOTES          reduce using rule 42 (letrero1 -> CHAR letrero1 .)
    LPAREN          reduce using rule 42 (letrero1 -> CHAR letrero1 .)
    INT             reduce using rule 42 (letrero1 -> CHAR letrero1 .)
    FLOAT           reduce using rule 42 (letrero1 -> CHAR letrero1 .)
    ID              reduce using rule 42 (letrero1 -> CHAR letrero1 .)


state 111

    (45) decision -> IF LPAREN expresion RPAREN THEN . bloque decision1
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 115

state 112

    (47) condicional -> WHILE LPAREN expresion RPAREN DO . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 116

state 113

    (48) nocondicional -> FOR ID EQUALS expresion TO . expresion DO bloque
    (24) expresion -> . expresion PLUS expresion
    (25) expresion -> . expresion MINUS expresion
    (26) expresion -> . expresion TIMES expresion
    (27) expresion -> . expresion DIVIDE expresion
    (28) expresion -> . LPAREN expresion RPAREN
    (29) expresion -> . INT
    (30) expresion -> . FLOAT
    (31) expresion -> . ID

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    ID              shift and go to state 64

    expresion                      shift and go to state 117

state 114

    (22) asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion . SEMICOLON estatuto
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    SEMICOLON       shift and go to state 118
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 115

    (45) decision -> IF LPAREN expresion RPAREN THEN bloque . decision1
    (46) decision1 -> . ELSE bloque

    ELSE            shift and go to state 120

    decision1                      shift and go to state 119

state 116

    (47) condicional -> WHILE LPAREN expresion RPAREN DO bloque .

    $end            reduce using rule 47 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    ELSE            reduce using rule 47 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)


state 117

    (48) nocondicional -> FOR ID EQUALS expresion TO expresion . DO bloque
    (24) expresion -> expresion . PLUS expresion
    (25) expresion -> expresion . MINUS expresion
    (26) expresion -> expresion . TIMES expresion
    (27) expresion -> expresion . DIVIDE expresion

    DO              shift and go to state 121
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85


state 118

    (22) asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON . estatuto
    (14) estatuto -> . asignacion
    (15) estatuto -> . retornofuncion
    (16) estatuto -> . lectura
    (17) estatuto -> . escritura
    (18) estatuto -> . decision
    (19) estatuto -> . repeticion
    (20) estatuto -> . RBRACKET
    (21) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (22) asignacion -> . ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (23) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (32) lectura -> . READ LPAREN lectura1
    (35) escritura -> . WRITE LPAREN escritura1
    (45) decision -> . IF LPAREN expresion RPAREN THEN bloque decision1
    (43) repeticion -> . condicional
    (44) repeticion -> . nocondicional
    (47) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (48) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque

    RBRACKET        shift and go to state 46
    ID              shift and go to state 47
    RETURN          shift and go to state 48
    READ            shift and go to state 49
    WRITE           shift and go to state 50
    IF              shift and go to state 51
    WHILE           shift and go to state 54
    FOR             shift and go to state 55

    estatuto                       shift and go to state 122
    asignacion                     shift and go to state 40
    retornofuncion                 shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 43
    decision                       shift and go to state 44
    repeticion                     shift and go to state 45
    condicional                    shift and go to state 52
    nocondicional                  shift and go to state 53

state 119

    (45) decision -> IF LPAREN expresion RPAREN THEN bloque decision1 .

    $end            reduce using rule 45 (decision -> IF LPAREN expresion RPAREN THEN bloque decision1 .)
    ELSE            reduce using rule 45 (decision -> IF LPAREN expresion RPAREN THEN bloque decision1 .)


state 120

    (46) decision1 -> ELSE . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 123

state 121

    (48) nocondicional -> FOR ID EQUALS expresion TO expresion DO . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 124

state 122

    (22) asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto .

    $end            reduce using rule 22 (asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto .)
    ELSE            reduce using rule 22 (asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto .)


state 123

    (46) decision1 -> ELSE bloque .

    $end            reduce using rule 46 (decision1 -> ELSE bloque .)
    ELSE            reduce using rule 46 (decision1 -> ELSE bloque .)


state 124

    (48) nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .

    $end            reduce using rule 48 (nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .)
    ELSE            reduce using rule 48 (nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .)


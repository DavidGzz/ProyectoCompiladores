Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DOT
    LBRACKET
    OR
    RBRACKET
    SQUOTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON variables function principal
Rule 2     principal -> PRINCIPAL LPAREN RPAREN bloque
Rule 3     variables -> VARS variables1
Rule 4     variables1 -> INT COLON listaidsInt
Rule 5     variables1 -> FLOAT COLON listaidsFloat
Rule 6     variables1 -> CHAR COLON listaidsChar
Rule 7     variables1 -> <empty>
Rule 8     listaidsInt -> ID COMA listaidsInt
Rule 9     listaidsInt -> ID SEMICOLON variables1
Rule 10    listaidsInt -> ID variables1
Rule 11    listaidsFloat -> ID COMA listaidsFloat
Rule 12    listaidsFloat -> ID SEMICOLON variables1
Rule 13    listaidsFloat -> ID variables1
Rule 14    listaidsChar -> ID COMA listaidsChar
Rule 15    listaidsChar -> ID SEMICOLON variables1
Rule 16    listaidsChar -> ID variables1
Rule 17    function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque
Rule 18    function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque
Rule 19    function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function
Rule 20    function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function
Rule 21    function -> <empty>
Rule 22    bloque -> LCBRACKET estatuto RCBRACKET
Rule 23    bloque -> LCBRACKET RCBRACKET
Rule 24    estatuto -> asignacion
Rule 25    estatuto -> retornofuncion
Rule 26    estatuto -> lectura
Rule 27    estatuto -> escritura
Rule 28    estatuto -> decision
Rule 29    estatuto -> repeticion
Rule 30    expresion -> expresion PLUS expresion
Rule 31    expresion -> expresion MINUS expresion
Rule 32    expresion -> expresion TIMES expresion
Rule 33    expresion -> expresion DIVIDE expresion
Rule 34    expresion -> expresion GTHAN expresion
Rule 35    expresion -> expresion LTHAN expresion
Rule 36    expresion -> LPAREN expresion RPAREN
Rule 37    expresion -> INT
Rule 38    expresion -> FLOAT
Rule 39    expresion -> ARREGLO
Rule 40    expresion -> ID
Rule 41    asignacion -> ID EQUALS expresion SEMICOLON estatuto
Rule 42    asignacion -> ID EQUALS expresion SEMICOLON
Rule 43    asignacion -> ARREGLO EQUALS expresion SEMICOLON estatuto
Rule 44    asignacion -> ARREGLO EQUALS expresion SEMICOLON
Rule 45    retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON
Rule 46    lectura -> READ LPAREN lectura1
Rule 47    lectura1 -> listaidsInt SEMICOLON estatuto
Rule 48    lectura1 -> listaidsInt SEMICOLON
Rule 49    lectura1 -> RPAREN SEMICOLON estatuto
Rule 50    lectura1 -> RPAREN SEMICOLON
Rule 51    escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
Rule 52    escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON
Rule 53    escritura1 -> letrero
Rule 54    escritura1 -> letrero COMA escritura1
Rule 55    escritura1 -> expresion
Rule 56    escritura1 -> expresion COMA escritura1
Rule 57    letrero -> QUOTES ID QUOTES
Rule 58    letrero -> COMA escritura1
Rule 59    decision -> IF LPAREN opcion RPAREN THEN bloque estatuto
Rule 60    decision -> IF LPAREN opcion RPAREN THEN bloque
Rule 61    decision -> IF LPAREN opcion RPAREN THEN bloque decision1
Rule 62    decision1 -> ELSE bloque
Rule 63    decision1 -> ELSE bloque estatuto
Rule 64    opcion -> expresion EQUALSDOBLE expresion
Rule 65    opcion -> expresion
Rule 66    repeticion -> condicional
Rule 67    repeticion -> nocondicional
Rule 68    condicional -> WHILE LPAREN expresion RPAREN DO bloque
Rule 69    condicional -> WHILE LPAREN expresion RPAREN DO bloque estatuto
Rule 70    nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque
Rule 71    nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque estatuto
Rule 72    tiporetorno -> INT
Rule 73    tiporetorno -> FLOAT
Rule 74    tiporetorno -> VOID

Terminals, with rules where they appear

AND                  : 
ARREGLO              : 39 43 44
CHAR                 : 6
COLON                : 4 5 6
COMA                 : 8 11 14 54 56 58
DIVIDE               : 33
DO                   : 68 69 70 71
DOT                  : 
ELSE                 : 62 63
EQUALS               : 41 42 43 44 70 71
EQUALSDOBLE          : 64
FLOAT                : 5 18 20 38 73
FOR                  : 70 71
FUNCTION             : 17 18 19 20
GTHAN                : 34
ID                   : 1 8 9 10 11 12 13 14 15 16 17 18 19 20 40 41 42 57 70 71
IF                   : 59 60 61
INT                  : 4 17 19 37 72
LBRACKET             : 
LCBRACKET            : 22 23
LPAREN               : 2 17 18 19 20 36 45 46 51 52 59 60 61 68 69
LTHAN                : 35
MINUS                : 31
OR                   : 
PLUS                 : 30
PRINCIPAL            : 2
PROGRAMA             : 1
QUOTES               : 57 57
RBRACKET             : 
RCBRACKET            : 22 23
READ                 : 46
RETURN               : 45
RPAREN               : 2 17 18 19 20 36 45 49 50 51 52 59 60 61 68 69
SEMICOLON            : 1 9 12 15 41 42 43 44 45 47 48 49 50 51 52
SQUOTES              : 
THEN                 : 59 60 61
TIMES                : 32
TO                   : 70 71
VARS                 : 3
VOID                 : 74
WHILE                : 68 69
WRITE                : 51 52
error                : 

Nonterminals, with rules where they appear

asignacion           : 24
bloque               : 2 17 18 19 20 59 60 61 62 63 68 69 70 71
condicional          : 66
decision             : 28
decision1            : 61
escritura            : 27
escritura1           : 51 52 54 56 58
estatuto             : 22 41 43 47 49 51 59 63 69 71
expresion            : 30 30 31 31 32 32 33 33 34 34 35 35 36 41 42 43 44 45 55 56 64 64 65 68 69 70 70 71 71
function             : 1 19 20
lectura              : 26
lectura1             : 46
letrero              : 53 54
listaidsChar         : 6 14
listaidsFloat        : 5 11
listaidsInt          : 4 8 47 48
nocondicional        : 67
opcion               : 59 60 61
principal            : 1
programa             : 0
repeticion           : 29
retornofuncion       : 25
tiporetorno          : 
variables            : 1 17 18 19 20
variables1           : 3 9 10 12 13 15 16 17 18 19 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON variables function principal

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON variables function principal

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON variables function principal

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . variables function principal
    (3) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID SEMICOLON variables . function principal
    (17) function -> . FUNCTION INT ID LPAREN variables1 RPAREN variables bloque
    (18) function -> . FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque
    (19) function -> . FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function
    (20) function -> . FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function
    (21) function -> .

    FUNCTION        shift and go to state 8
    PRINCIPAL       reduce using rule 21 (function -> .)

    function                       shift and go to state 7

state 6

    (3) variables -> VARS . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)

    variables1                     shift and go to state 9

state 7

    (1) programa -> PROGRAMA ID SEMICOLON variables function . principal
    (2) principal -> . PRINCIPAL LPAREN RPAREN bloque

    PRINCIPAL       shift and go to state 14

    principal                      shift and go to state 13

state 8

    (17) function -> FUNCTION . INT ID LPAREN variables1 RPAREN variables bloque
    (18) function -> FUNCTION . FLOAT ID LPAREN variables1 RPAREN variables bloque
    (19) function -> FUNCTION . INT ID LPAREN variables1 RPAREN variables bloque function
    (20) function -> FUNCTION . FLOAT ID LPAREN variables1 RPAREN variables bloque function

    INT             shift and go to state 15
    FLOAT           shift and go to state 16


state 9

    (3) variables -> VARS variables1 .

    FUNCTION        reduce using rule 3 (variables -> VARS variables1 .)
    PRINCIPAL       reduce using rule 3 (variables -> VARS variables1 .)
    LCBRACKET       reduce using rule 3 (variables -> VARS variables1 .)


state 10

    (4) variables1 -> INT . COLON listaidsInt

    COLON           shift and go to state 17


state 11

    (5) variables1 -> FLOAT . COLON listaidsFloat

    COLON           shift and go to state 18


state 12

    (6) variables1 -> CHAR . COLON listaidsChar

    COLON           shift and go to state 19


state 13

    (1) programa -> PROGRAMA ID SEMICOLON variables function principal .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON variables function principal .)


state 14

    (2) principal -> PRINCIPAL . LPAREN RPAREN bloque

    LPAREN          shift and go to state 20


state 15

    (17) function -> FUNCTION INT . ID LPAREN variables1 RPAREN variables bloque
    (19) function -> FUNCTION INT . ID LPAREN variables1 RPAREN variables bloque function

    ID              shift and go to state 21


state 16

    (18) function -> FUNCTION FLOAT . ID LPAREN variables1 RPAREN variables bloque
    (20) function -> FUNCTION FLOAT . ID LPAREN variables1 RPAREN variables bloque function

    ID              shift and go to state 22


state 17

    (4) variables1 -> INT COLON . listaidsInt
    (8) listaidsInt -> . ID COMA listaidsInt
    (9) listaidsInt -> . ID SEMICOLON variables1
    (10) listaidsInt -> . ID variables1

    ID              shift and go to state 24

    listaidsInt                    shift and go to state 23

state 18

    (5) variables1 -> FLOAT COLON . listaidsFloat
    (11) listaidsFloat -> . ID COMA listaidsFloat
    (12) listaidsFloat -> . ID SEMICOLON variables1
    (13) listaidsFloat -> . ID variables1

    ID              shift and go to state 26

    listaidsFloat                  shift and go to state 25

state 19

    (6) variables1 -> CHAR COLON . listaidsChar
    (14) listaidsChar -> . ID COMA listaidsChar
    (15) listaidsChar -> . ID SEMICOLON variables1
    (16) listaidsChar -> . ID variables1

    ID              shift and go to state 28

    listaidsChar                   shift and go to state 27

state 20

    (2) principal -> PRINCIPAL LPAREN . RPAREN bloque

    RPAREN          shift and go to state 29


state 21

    (17) function -> FUNCTION INT ID . LPAREN variables1 RPAREN variables bloque
    (19) function -> FUNCTION INT ID . LPAREN variables1 RPAREN variables bloque function

    LPAREN          shift and go to state 30


state 22

    (18) function -> FUNCTION FLOAT ID . LPAREN variables1 RPAREN variables bloque
    (20) function -> FUNCTION FLOAT ID . LPAREN variables1 RPAREN variables bloque function

    LPAREN          shift and go to state 31


state 23

    (4) variables1 -> INT COLON listaidsInt .

    FUNCTION        reduce using rule 4 (variables1 -> INT COLON listaidsInt .)
    PRINCIPAL       reduce using rule 4 (variables1 -> INT COLON listaidsInt .)
    LCBRACKET       reduce using rule 4 (variables1 -> INT COLON listaidsInt .)
    SEMICOLON       reduce using rule 4 (variables1 -> INT COLON listaidsInt .)
    RPAREN          reduce using rule 4 (variables1 -> INT COLON listaidsInt .)


state 24

    (8) listaidsInt -> ID . COMA listaidsInt
    (9) listaidsInt -> ID . SEMICOLON variables1
    (10) listaidsInt -> ID . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    COMA            shift and go to state 32
    SEMICOLON       shift and go to state 33
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)
    RPAREN          reduce using rule 7 (variables1 -> .)

  ! SEMICOLON       [ reduce using rule 7 (variables1 -> .) ]

    variables1                     shift and go to state 34

state 25

    (5) variables1 -> FLOAT COLON listaidsFloat .

    FUNCTION        reduce using rule 5 (variables1 -> FLOAT COLON listaidsFloat .)
    PRINCIPAL       reduce using rule 5 (variables1 -> FLOAT COLON listaidsFloat .)
    LCBRACKET       reduce using rule 5 (variables1 -> FLOAT COLON listaidsFloat .)
    SEMICOLON       reduce using rule 5 (variables1 -> FLOAT COLON listaidsFloat .)
    RPAREN          reduce using rule 5 (variables1 -> FLOAT COLON listaidsFloat .)


state 26

    (11) listaidsFloat -> ID . COMA listaidsFloat
    (12) listaidsFloat -> ID . SEMICOLON variables1
    (13) listaidsFloat -> ID . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    COMA            shift and go to state 35
    SEMICOLON       shift and go to state 36
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)
    RPAREN          reduce using rule 7 (variables1 -> .)

  ! SEMICOLON       [ reduce using rule 7 (variables1 -> .) ]

    variables1                     shift and go to state 37

state 27

    (6) variables1 -> CHAR COLON listaidsChar .

    FUNCTION        reduce using rule 6 (variables1 -> CHAR COLON listaidsChar .)
    PRINCIPAL       reduce using rule 6 (variables1 -> CHAR COLON listaidsChar .)
    LCBRACKET       reduce using rule 6 (variables1 -> CHAR COLON listaidsChar .)
    SEMICOLON       reduce using rule 6 (variables1 -> CHAR COLON listaidsChar .)
    RPAREN          reduce using rule 6 (variables1 -> CHAR COLON listaidsChar .)


state 28

    (14) listaidsChar -> ID . COMA listaidsChar
    (15) listaidsChar -> ID . SEMICOLON variables1
    (16) listaidsChar -> ID . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    COMA            shift and go to state 38
    SEMICOLON       shift and go to state 39
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)
    RPAREN          reduce using rule 7 (variables1 -> .)

  ! SEMICOLON       [ reduce using rule 7 (variables1 -> .) ]

    variables1                     shift and go to state 40

state 29

    (2) principal -> PRINCIPAL LPAREN RPAREN . bloque
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 41

state 30

    (17) function -> FUNCTION INT ID LPAREN . variables1 RPAREN variables bloque
    (19) function -> FUNCTION INT ID LPAREN . variables1 RPAREN variables bloque function
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    RPAREN          reduce using rule 7 (variables1 -> .)

    variables1                     shift and go to state 43

state 31

    (18) function -> FUNCTION FLOAT ID LPAREN . variables1 RPAREN variables bloque
    (20) function -> FUNCTION FLOAT ID LPAREN . variables1 RPAREN variables bloque function
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    RPAREN          reduce using rule 7 (variables1 -> .)

    variables1                     shift and go to state 44

state 32

    (8) listaidsInt -> ID COMA . listaidsInt
    (8) listaidsInt -> . ID COMA listaidsInt
    (9) listaidsInt -> . ID SEMICOLON variables1
    (10) listaidsInt -> . ID variables1

    ID              shift and go to state 24

    listaidsInt                    shift and go to state 45

state 33

    (9) listaidsInt -> ID SEMICOLON . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)
    SEMICOLON       reduce using rule 7 (variables1 -> .)
    RPAREN          reduce using rule 7 (variables1 -> .)

    variables1                     shift and go to state 46

state 34

    (10) listaidsInt -> ID variables1 .

    FUNCTION        reduce using rule 10 (listaidsInt -> ID variables1 .)
    PRINCIPAL       reduce using rule 10 (listaidsInt -> ID variables1 .)
    LCBRACKET       reduce using rule 10 (listaidsInt -> ID variables1 .)
    SEMICOLON       reduce using rule 10 (listaidsInt -> ID variables1 .)
    RPAREN          reduce using rule 10 (listaidsInt -> ID variables1 .)


state 35

    (11) listaidsFloat -> ID COMA . listaidsFloat
    (11) listaidsFloat -> . ID COMA listaidsFloat
    (12) listaidsFloat -> . ID SEMICOLON variables1
    (13) listaidsFloat -> . ID variables1

    ID              shift and go to state 26

    listaidsFloat                  shift and go to state 47

state 36

    (12) listaidsFloat -> ID SEMICOLON . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)
    SEMICOLON       reduce using rule 7 (variables1 -> .)
    RPAREN          reduce using rule 7 (variables1 -> .)

    variables1                     shift and go to state 48

state 37

    (13) listaidsFloat -> ID variables1 .

    FUNCTION        reduce using rule 13 (listaidsFloat -> ID variables1 .)
    PRINCIPAL       reduce using rule 13 (listaidsFloat -> ID variables1 .)
    LCBRACKET       reduce using rule 13 (listaidsFloat -> ID variables1 .)
    SEMICOLON       reduce using rule 13 (listaidsFloat -> ID variables1 .)
    RPAREN          reduce using rule 13 (listaidsFloat -> ID variables1 .)


state 38

    (14) listaidsChar -> ID COMA . listaidsChar
    (14) listaidsChar -> . ID COMA listaidsChar
    (15) listaidsChar -> . ID SEMICOLON variables1
    (16) listaidsChar -> . ID variables1

    ID              shift and go to state 28

    listaidsChar                   shift and go to state 49

state 39

    (15) listaidsChar -> ID SEMICOLON . variables1
    (4) variables1 -> . INT COLON listaidsInt
    (5) variables1 -> . FLOAT COLON listaidsFloat
    (6) variables1 -> . CHAR COLON listaidsChar
    (7) variables1 -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    FUNCTION        reduce using rule 7 (variables1 -> .)
    PRINCIPAL       reduce using rule 7 (variables1 -> .)
    LCBRACKET       reduce using rule 7 (variables1 -> .)
    SEMICOLON       reduce using rule 7 (variables1 -> .)
    RPAREN          reduce using rule 7 (variables1 -> .)

    variables1                     shift and go to state 50

state 40

    (16) listaidsChar -> ID variables1 .

    FUNCTION        reduce using rule 16 (listaidsChar -> ID variables1 .)
    PRINCIPAL       reduce using rule 16 (listaidsChar -> ID variables1 .)
    LCBRACKET       reduce using rule 16 (listaidsChar -> ID variables1 .)
    SEMICOLON       reduce using rule 16 (listaidsChar -> ID variables1 .)
    RPAREN          reduce using rule 16 (listaidsChar -> ID variables1 .)


state 41

    (2) principal -> PRINCIPAL LPAREN RPAREN bloque .

    $end            reduce using rule 2 (principal -> PRINCIPAL LPAREN RPAREN bloque .)


state 42

    (22) bloque -> LCBRACKET . estatuto RCBRACKET
    (23) bloque -> LCBRACKET . RCBRACKET
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       shift and go to state 52
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 51
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 43

    (17) function -> FUNCTION INT ID LPAREN variables1 . RPAREN variables bloque
    (19) function -> FUNCTION INT ID LPAREN variables1 . RPAREN variables bloque function

    RPAREN          shift and go to state 69


state 44

    (18) function -> FUNCTION FLOAT ID LPAREN variables1 . RPAREN variables bloque
    (20) function -> FUNCTION FLOAT ID LPAREN variables1 . RPAREN variables bloque function

    RPAREN          shift and go to state 70


state 45

    (8) listaidsInt -> ID COMA listaidsInt .

    FUNCTION        reduce using rule 8 (listaidsInt -> ID COMA listaidsInt .)
    PRINCIPAL       reduce using rule 8 (listaidsInt -> ID COMA listaidsInt .)
    LCBRACKET       reduce using rule 8 (listaidsInt -> ID COMA listaidsInt .)
    SEMICOLON       reduce using rule 8 (listaidsInt -> ID COMA listaidsInt .)
    RPAREN          reduce using rule 8 (listaidsInt -> ID COMA listaidsInt .)


state 46

    (9) listaidsInt -> ID SEMICOLON variables1 .

    FUNCTION        reduce using rule 9 (listaidsInt -> ID SEMICOLON variables1 .)
    PRINCIPAL       reduce using rule 9 (listaidsInt -> ID SEMICOLON variables1 .)
    LCBRACKET       reduce using rule 9 (listaidsInt -> ID SEMICOLON variables1 .)
    SEMICOLON       reduce using rule 9 (listaidsInt -> ID SEMICOLON variables1 .)
    RPAREN          reduce using rule 9 (listaidsInt -> ID SEMICOLON variables1 .)


state 47

    (11) listaidsFloat -> ID COMA listaidsFloat .

    FUNCTION        reduce using rule 11 (listaidsFloat -> ID COMA listaidsFloat .)
    PRINCIPAL       reduce using rule 11 (listaidsFloat -> ID COMA listaidsFloat .)
    LCBRACKET       reduce using rule 11 (listaidsFloat -> ID COMA listaidsFloat .)
    SEMICOLON       reduce using rule 11 (listaidsFloat -> ID COMA listaidsFloat .)
    RPAREN          reduce using rule 11 (listaidsFloat -> ID COMA listaidsFloat .)


state 48

    (12) listaidsFloat -> ID SEMICOLON variables1 .

    FUNCTION        reduce using rule 12 (listaidsFloat -> ID SEMICOLON variables1 .)
    PRINCIPAL       reduce using rule 12 (listaidsFloat -> ID SEMICOLON variables1 .)
    LCBRACKET       reduce using rule 12 (listaidsFloat -> ID SEMICOLON variables1 .)
    SEMICOLON       reduce using rule 12 (listaidsFloat -> ID SEMICOLON variables1 .)
    RPAREN          reduce using rule 12 (listaidsFloat -> ID SEMICOLON variables1 .)


state 49

    (14) listaidsChar -> ID COMA listaidsChar .

    FUNCTION        reduce using rule 14 (listaidsChar -> ID COMA listaidsChar .)
    PRINCIPAL       reduce using rule 14 (listaidsChar -> ID COMA listaidsChar .)
    LCBRACKET       reduce using rule 14 (listaidsChar -> ID COMA listaidsChar .)
    SEMICOLON       reduce using rule 14 (listaidsChar -> ID COMA listaidsChar .)
    RPAREN          reduce using rule 14 (listaidsChar -> ID COMA listaidsChar .)


state 50

    (15) listaidsChar -> ID SEMICOLON variables1 .

    FUNCTION        reduce using rule 15 (listaidsChar -> ID SEMICOLON variables1 .)
    PRINCIPAL       reduce using rule 15 (listaidsChar -> ID SEMICOLON variables1 .)
    LCBRACKET       reduce using rule 15 (listaidsChar -> ID SEMICOLON variables1 .)
    SEMICOLON       reduce using rule 15 (listaidsChar -> ID SEMICOLON variables1 .)
    RPAREN          reduce using rule 15 (listaidsChar -> ID SEMICOLON variables1 .)


state 51

    (22) bloque -> LCBRACKET estatuto . RCBRACKET

    RCBRACKET       shift and go to state 71


state 52

    (23) bloque -> LCBRACKET RCBRACKET .

    $end            reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    FUNCTION        reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    PRINCIPAL       reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    ELSE            reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    ID              reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    ARREGLO         reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    RETURN          reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    READ            reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    WRITE           reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    IF              reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    WHILE           reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    FOR             reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)
    RCBRACKET       reduce using rule 23 (bloque -> LCBRACKET RCBRACKET .)


state 53

    (24) estatuto -> asignacion .

    RCBRACKET       reduce using rule 24 (estatuto -> asignacion .)


state 54

    (25) estatuto -> retornofuncion .

    RCBRACKET       reduce using rule 25 (estatuto -> retornofuncion .)


state 55

    (26) estatuto -> lectura .

    RCBRACKET       reduce using rule 26 (estatuto -> lectura .)


state 56

    (27) estatuto -> escritura .

    RCBRACKET       reduce using rule 27 (estatuto -> escritura .)


state 57

    (28) estatuto -> decision .

    RCBRACKET       reduce using rule 28 (estatuto -> decision .)


state 58

    (29) estatuto -> repeticion .

    RCBRACKET       reduce using rule 29 (estatuto -> repeticion .)


state 59

    (41) asignacion -> ID . EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> ID . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 72


state 60

    (43) asignacion -> ARREGLO . EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> ARREGLO . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 73


state 61

    (45) retornofuncion -> RETURN . LPAREN expresion RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 62

    (46) lectura -> READ . LPAREN lectura1

    LPAREN          shift and go to state 75


state 63

    (51) escritura -> WRITE . LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> WRITE . LPAREN escritura1 RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 64

    (59) decision -> IF . LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> IF . LPAREN opcion RPAREN THEN bloque
    (61) decision -> IF . LPAREN opcion RPAREN THEN bloque decision1

    LPAREN          shift and go to state 77


state 65

    (66) repeticion -> condicional .

    RCBRACKET       reduce using rule 66 (repeticion -> condicional .)


state 66

    (67) repeticion -> nocondicional .

    RCBRACKET       reduce using rule 67 (repeticion -> nocondicional .)


state 67

    (68) condicional -> WHILE . LPAREN expresion RPAREN DO bloque
    (69) condicional -> WHILE . LPAREN expresion RPAREN DO bloque estatuto

    LPAREN          shift and go to state 78


state 68

    (70) nocondicional -> FOR . ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> FOR . ID EQUALS expresion TO expresion DO bloque estatuto

    ID              shift and go to state 79


state 69

    (17) function -> FUNCTION INT ID LPAREN variables1 RPAREN . variables bloque
    (19) function -> FUNCTION INT ID LPAREN variables1 RPAREN . variables bloque function
    (3) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 80

state 70

    (18) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN . variables bloque
    (20) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN . variables bloque function
    (3) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 81

state 71

    (22) bloque -> LCBRACKET estatuto RCBRACKET .

    $end            reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    FUNCTION        reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    PRINCIPAL       reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    ELSE            reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    ID              reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    ARREGLO         reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    RETURN          reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    READ            reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    WRITE           reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    IF              reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    WHILE           reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    FOR             reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)
    RCBRACKET       reduce using rule 22 (bloque -> LCBRACKET estatuto RCBRACKET .)


state 72

    (41) asignacion -> ID EQUALS . expresion SEMICOLON estatuto
    (42) asignacion -> ID EQUALS . expresion SEMICOLON
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 83

state 73

    (43) asignacion -> ARREGLO EQUALS . expresion SEMICOLON estatuto
    (44) asignacion -> ARREGLO EQUALS . expresion SEMICOLON
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 88

state 74

    (45) retornofuncion -> RETURN LPAREN . expresion RPAREN SEMICOLON
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 89

state 75

    (46) lectura -> READ LPAREN . lectura1
    (47) lectura1 -> . listaidsInt SEMICOLON estatuto
    (48) lectura1 -> . listaidsInt SEMICOLON
    (49) lectura1 -> . RPAREN SEMICOLON estatuto
    (50) lectura1 -> . RPAREN SEMICOLON
    (8) listaidsInt -> . ID COMA listaidsInt
    (9) listaidsInt -> . ID SEMICOLON variables1
    (10) listaidsInt -> . ID variables1

    RPAREN          shift and go to state 92
    ID              shift and go to state 24

    lectura1                       shift and go to state 90
    listaidsInt                    shift and go to state 91

state 76

    (51) escritura -> WRITE LPAREN . escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> WRITE LPAREN . escritura1 RPAREN SEMICOLON
    (53) escritura1 -> . letrero
    (54) escritura1 -> . letrero COMA escritura1
    (55) escritura1 -> . expresion
    (56) escritura1 -> . expresion COMA escritura1
    (57) letrero -> . QUOTES ID QUOTES
    (58) letrero -> . COMA escritura1
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    QUOTES          shift and go to state 97
    COMA            shift and go to state 95
    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    escritura1                     shift and go to state 93
    letrero                        shift and go to state 94
    expresion                      shift and go to state 96

state 77

    (59) decision -> IF LPAREN . opcion RPAREN THEN bloque estatuto
    (60) decision -> IF LPAREN . opcion RPAREN THEN bloque
    (61) decision -> IF LPAREN . opcion RPAREN THEN bloque decision1
    (64) opcion -> . expresion EQUALSDOBLE expresion
    (65) opcion -> . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    opcion                         shift and go to state 98
    expresion                      shift and go to state 99

state 78

    (68) condicional -> WHILE LPAREN . expresion RPAREN DO bloque
    (69) condicional -> WHILE LPAREN . expresion RPAREN DO bloque estatuto
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 100

state 79

    (70) nocondicional -> FOR ID . EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> FOR ID . EQUALS expresion TO expresion DO bloque estatuto

    EQUALS          shift and go to state 101


state 80

    (17) function -> FUNCTION INT ID LPAREN variables1 RPAREN variables . bloque
    (19) function -> FUNCTION INT ID LPAREN variables1 RPAREN variables . bloque function
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 102

state 81

    (18) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables . bloque
    (20) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables . bloque function
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 103

state 82

    (40) expresion -> ID .

    SEMICOLON       reduce using rule 40 (expresion -> ID .)
    PLUS            reduce using rule 40 (expresion -> ID .)
    MINUS           reduce using rule 40 (expresion -> ID .)
    TIMES           reduce using rule 40 (expresion -> ID .)
    DIVIDE          reduce using rule 40 (expresion -> ID .)
    GTHAN           reduce using rule 40 (expresion -> ID .)
    LTHAN           reduce using rule 40 (expresion -> ID .)
    RPAREN          reduce using rule 40 (expresion -> ID .)
    COMA            reduce using rule 40 (expresion -> ID .)
    EQUALSDOBLE     reduce using rule 40 (expresion -> ID .)
    TO              reduce using rule 40 (expresion -> ID .)
    DO              reduce using rule 40 (expresion -> ID .)


state 83

    (41) asignacion -> ID EQUALS expresion . SEMICOLON estatuto
    (42) asignacion -> ID EQUALS expresion . SEMICOLON
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    SEMICOLON       shift and go to state 104
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 84

    (36) expresion -> LPAREN . expresion RPAREN
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 111

state 85

    (37) expresion -> INT .

    SEMICOLON       reduce using rule 37 (expresion -> INT .)
    PLUS            reduce using rule 37 (expresion -> INT .)
    MINUS           reduce using rule 37 (expresion -> INT .)
    TIMES           reduce using rule 37 (expresion -> INT .)
    DIVIDE          reduce using rule 37 (expresion -> INT .)
    GTHAN           reduce using rule 37 (expresion -> INT .)
    LTHAN           reduce using rule 37 (expresion -> INT .)
    RPAREN          reduce using rule 37 (expresion -> INT .)
    COMA            reduce using rule 37 (expresion -> INT .)
    EQUALSDOBLE     reduce using rule 37 (expresion -> INT .)
    TO              reduce using rule 37 (expresion -> INT .)
    DO              reduce using rule 37 (expresion -> INT .)


state 86

    (38) expresion -> FLOAT .

    SEMICOLON       reduce using rule 38 (expresion -> FLOAT .)
    PLUS            reduce using rule 38 (expresion -> FLOAT .)
    MINUS           reduce using rule 38 (expresion -> FLOAT .)
    TIMES           reduce using rule 38 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 38 (expresion -> FLOAT .)
    GTHAN           reduce using rule 38 (expresion -> FLOAT .)
    LTHAN           reduce using rule 38 (expresion -> FLOAT .)
    RPAREN          reduce using rule 38 (expresion -> FLOAT .)
    COMA            reduce using rule 38 (expresion -> FLOAT .)
    EQUALSDOBLE     reduce using rule 38 (expresion -> FLOAT .)
    TO              reduce using rule 38 (expresion -> FLOAT .)
    DO              reduce using rule 38 (expresion -> FLOAT .)


state 87

    (39) expresion -> ARREGLO .

    SEMICOLON       reduce using rule 39 (expresion -> ARREGLO .)
    PLUS            reduce using rule 39 (expresion -> ARREGLO .)
    MINUS           reduce using rule 39 (expresion -> ARREGLO .)
    TIMES           reduce using rule 39 (expresion -> ARREGLO .)
    DIVIDE          reduce using rule 39 (expresion -> ARREGLO .)
    GTHAN           reduce using rule 39 (expresion -> ARREGLO .)
    LTHAN           reduce using rule 39 (expresion -> ARREGLO .)
    RPAREN          reduce using rule 39 (expresion -> ARREGLO .)
    COMA            reduce using rule 39 (expresion -> ARREGLO .)
    EQUALSDOBLE     reduce using rule 39 (expresion -> ARREGLO .)
    TO              reduce using rule 39 (expresion -> ARREGLO .)
    DO              reduce using rule 39 (expresion -> ARREGLO .)


state 88

    (43) asignacion -> ARREGLO EQUALS expresion . SEMICOLON estatuto
    (44) asignacion -> ARREGLO EQUALS expresion . SEMICOLON
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    SEMICOLON       shift and go to state 112
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 89

    (45) retornofuncion -> RETURN LPAREN expresion . RPAREN SEMICOLON
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 90

    (46) lectura -> READ LPAREN lectura1 .

    RCBRACKET       reduce using rule 46 (lectura -> READ LPAREN lectura1 .)


state 91

    (47) lectura1 -> listaidsInt . SEMICOLON estatuto
    (48) lectura1 -> listaidsInt . SEMICOLON

    SEMICOLON       shift and go to state 114


state 92

    (49) lectura1 -> RPAREN . SEMICOLON estatuto
    (50) lectura1 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 93

    (51) escritura -> WRITE LPAREN escritura1 . RPAREN SEMICOLON estatuto
    (52) escritura -> WRITE LPAREN escritura1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 116


state 94

    (53) escritura1 -> letrero .
    (54) escritura1 -> letrero . COMA escritura1

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 53 (escritura1 -> letrero .)
    COMA            shift and go to state 117

  ! COMA            [ reduce using rule 53 (escritura1 -> letrero .) ]


state 95

    (58) letrero -> COMA . escritura1
    (53) escritura1 -> . letrero
    (54) escritura1 -> . letrero COMA escritura1
    (55) escritura1 -> . expresion
    (56) escritura1 -> . expresion COMA escritura1
    (57) letrero -> . QUOTES ID QUOTES
    (58) letrero -> . COMA escritura1
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    QUOTES          shift and go to state 97
    COMA            shift and go to state 95
    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    escritura1                     shift and go to state 118
    letrero                        shift and go to state 94
    expresion                      shift and go to state 96

state 96

    (55) escritura1 -> expresion .
    (56) escritura1 -> expresion . COMA escritura1
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

  ! shift/reduce conflict for COMA resolved as shift
    RPAREN          reduce using rule 55 (escritura1 -> expresion .)
    COMA            shift and go to state 119
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110

  ! COMA            [ reduce using rule 55 (escritura1 -> expresion .) ]


state 97

    (57) letrero -> QUOTES . ID QUOTES

    ID              shift and go to state 120


state 98

    (59) decision -> IF LPAREN opcion . RPAREN THEN bloque estatuto
    (60) decision -> IF LPAREN opcion . RPAREN THEN bloque
    (61) decision -> IF LPAREN opcion . RPAREN THEN bloque decision1

    RPAREN          shift and go to state 121


state 99

    (64) opcion -> expresion . EQUALSDOBLE expresion
    (65) opcion -> expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    EQUALSDOBLE     shift and go to state 122
    RPAREN          reduce using rule 65 (opcion -> expresion .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 100

    (68) condicional -> WHILE LPAREN expresion . RPAREN DO bloque
    (69) condicional -> WHILE LPAREN expresion . RPAREN DO bloque estatuto
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    RPAREN          shift and go to state 123
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 101

    (70) nocondicional -> FOR ID EQUALS . expresion TO expresion DO bloque
    (71) nocondicional -> FOR ID EQUALS . expresion TO expresion DO bloque estatuto
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 124

state 102

    (17) function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque .
    (19) function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque . function
    (17) function -> . FUNCTION INT ID LPAREN variables1 RPAREN variables bloque
    (18) function -> . FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque
    (19) function -> . FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function
    (20) function -> . FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function
    (21) function -> .

  ! reduce/reduce conflict for PRINCIPAL resolved using rule 17 (function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque .)
    PRINCIPAL       reduce using rule 17 (function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque .)
    FUNCTION        shift and go to state 8

  ! PRINCIPAL       [ reduce using rule 21 (function -> .) ]

    function                       shift and go to state 125

state 103

    (18) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque .
    (20) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque . function
    (17) function -> . FUNCTION INT ID LPAREN variables1 RPAREN variables bloque
    (18) function -> . FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque
    (19) function -> . FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function
    (20) function -> . FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function
    (21) function -> .

  ! reduce/reduce conflict for PRINCIPAL resolved using rule 18 (function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque .)
    PRINCIPAL       reduce using rule 18 (function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque .)
    FUNCTION        shift and go to state 8

  ! PRINCIPAL       [ reduce using rule 21 (function -> .) ]

    function                       shift and go to state 126

state 104

    (41) asignacion -> ID EQUALS expresion SEMICOLON . estatuto
    (42) asignacion -> ID EQUALS expresion SEMICOLON .
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 42 (asignacion -> ID EQUALS expresion SEMICOLON .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 127
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 105

    (30) expresion -> expresion PLUS . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 128

state 106

    (31) expresion -> expresion MINUS . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 129

state 107

    (32) expresion -> expresion TIMES . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 130

state 108

    (33) expresion -> expresion DIVIDE . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 131

state 109

    (34) expresion -> expresion GTHAN . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 132

state 110

    (35) expresion -> expresion LTHAN . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 133

state 111

    (36) expresion -> LPAREN expresion . RPAREN
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    RPAREN          shift and go to state 134
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 112

    (43) asignacion -> ARREGLO EQUALS expresion SEMICOLON . estatuto
    (44) asignacion -> ARREGLO EQUALS expresion SEMICOLON .
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 44 (asignacion -> ARREGLO EQUALS expresion SEMICOLON .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 135
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 113

    (45) retornofuncion -> RETURN LPAREN expresion RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 136


state 114

    (47) lectura1 -> listaidsInt SEMICOLON . estatuto
    (48) lectura1 -> listaidsInt SEMICOLON .
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 48 (lectura1 -> listaidsInt SEMICOLON .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 137
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 115

    (49) lectura1 -> RPAREN SEMICOLON . estatuto
    (50) lectura1 -> RPAREN SEMICOLON .
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 50 (lectura1 -> RPAREN SEMICOLON .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 138
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 116

    (51) escritura -> WRITE LPAREN escritura1 RPAREN . SEMICOLON estatuto
    (52) escritura -> WRITE LPAREN escritura1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 139


state 117

    (54) escritura1 -> letrero COMA . escritura1
    (53) escritura1 -> . letrero
    (54) escritura1 -> . letrero COMA escritura1
    (55) escritura1 -> . expresion
    (56) escritura1 -> . expresion COMA escritura1
    (57) letrero -> . QUOTES ID QUOTES
    (58) letrero -> . COMA escritura1
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    QUOTES          shift and go to state 97
    COMA            shift and go to state 95
    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    letrero                        shift and go to state 94
    escritura1                     shift and go to state 140
    expresion                      shift and go to state 96

state 118

    (58) letrero -> COMA escritura1 .

    COMA            reduce using rule 58 (letrero -> COMA escritura1 .)
    RPAREN          reduce using rule 58 (letrero -> COMA escritura1 .)


state 119

    (56) escritura1 -> expresion COMA . escritura1
    (53) escritura1 -> . letrero
    (54) escritura1 -> . letrero COMA escritura1
    (55) escritura1 -> . expresion
    (56) escritura1 -> . expresion COMA escritura1
    (57) letrero -> . QUOTES ID QUOTES
    (58) letrero -> . COMA escritura1
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    QUOTES          shift and go to state 97
    COMA            shift and go to state 95
    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 96
    escritura1                     shift and go to state 141
    letrero                        shift and go to state 94

state 120

    (57) letrero -> QUOTES ID . QUOTES

    QUOTES          shift and go to state 142


state 121

    (59) decision -> IF LPAREN opcion RPAREN . THEN bloque estatuto
    (60) decision -> IF LPAREN opcion RPAREN . THEN bloque
    (61) decision -> IF LPAREN opcion RPAREN . THEN bloque decision1

    THEN            shift and go to state 143


state 122

    (64) opcion -> expresion EQUALSDOBLE . expresion
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 144

state 123

    (68) condicional -> WHILE LPAREN expresion RPAREN . DO bloque
    (69) condicional -> WHILE LPAREN expresion RPAREN . DO bloque estatuto

    DO              shift and go to state 145


state 124

    (70) nocondicional -> FOR ID EQUALS expresion . TO expresion DO bloque
    (71) nocondicional -> FOR ID EQUALS expresion . TO expresion DO bloque estatuto
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    TO              shift and go to state 146
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 125

    (19) function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function .

    PRINCIPAL       reduce using rule 19 (function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function .)


state 126

    (20) function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function .

    PRINCIPAL       reduce using rule 20 (function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function .)


state 127

    (41) asignacion -> ID EQUALS expresion SEMICOLON estatuto .

    RCBRACKET       reduce using rule 41 (asignacion -> ID EQUALS expresion SEMICOLON estatuto .)


state 128

    (30) expresion -> expresion PLUS expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    SEMICOLON       reduce using rule 30 (expresion -> expresion PLUS expresion .)
    PLUS            reduce using rule 30 (expresion -> expresion PLUS expresion .)
    MINUS           reduce using rule 30 (expresion -> expresion PLUS expresion .)
    GTHAN           reduce using rule 30 (expresion -> expresion PLUS expresion .)
    LTHAN           reduce using rule 30 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 30 (expresion -> expresion PLUS expresion .)
    COMA            reduce using rule 30 (expresion -> expresion PLUS expresion .)
    EQUALSDOBLE     reduce using rule 30 (expresion -> expresion PLUS expresion .)
    TO              reduce using rule 30 (expresion -> expresion PLUS expresion .)
    DO              reduce using rule 30 (expresion -> expresion PLUS expresion .)
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

  ! TIMES           [ reduce using rule 30 (expresion -> expresion PLUS expresion .) ]
  ! DIVIDE          [ reduce using rule 30 (expresion -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 105 ]
  ! MINUS           [ shift and go to state 106 ]
  ! GTHAN           [ shift and go to state 109 ]
  ! LTHAN           [ shift and go to state 110 ]


state 129

    (31) expresion -> expresion MINUS expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    SEMICOLON       reduce using rule 31 (expresion -> expresion MINUS expresion .)
    PLUS            reduce using rule 31 (expresion -> expresion MINUS expresion .)
    MINUS           reduce using rule 31 (expresion -> expresion MINUS expresion .)
    GTHAN           reduce using rule 31 (expresion -> expresion MINUS expresion .)
    LTHAN           reduce using rule 31 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 31 (expresion -> expresion MINUS expresion .)
    COMA            reduce using rule 31 (expresion -> expresion MINUS expresion .)
    EQUALSDOBLE     reduce using rule 31 (expresion -> expresion MINUS expresion .)
    TO              reduce using rule 31 (expresion -> expresion MINUS expresion .)
    DO              reduce using rule 31 (expresion -> expresion MINUS expresion .)
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108

  ! TIMES           [ reduce using rule 31 (expresion -> expresion MINUS expresion .) ]
  ! DIVIDE          [ reduce using rule 31 (expresion -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 105 ]
  ! MINUS           [ shift and go to state 106 ]
  ! GTHAN           [ shift and go to state 109 ]
  ! LTHAN           [ shift and go to state 110 ]


state 130

    (32) expresion -> expresion TIMES expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    SEMICOLON       reduce using rule 32 (expresion -> expresion TIMES expresion .)
    PLUS            reduce using rule 32 (expresion -> expresion TIMES expresion .)
    MINUS           reduce using rule 32 (expresion -> expresion TIMES expresion .)
    TIMES           reduce using rule 32 (expresion -> expresion TIMES expresion .)
    DIVIDE          reduce using rule 32 (expresion -> expresion TIMES expresion .)
    GTHAN           reduce using rule 32 (expresion -> expresion TIMES expresion .)
    LTHAN           reduce using rule 32 (expresion -> expresion TIMES expresion .)
    RPAREN          reduce using rule 32 (expresion -> expresion TIMES expresion .)
    COMA            reduce using rule 32 (expresion -> expresion TIMES expresion .)
    EQUALSDOBLE     reduce using rule 32 (expresion -> expresion TIMES expresion .)
    TO              reduce using rule 32 (expresion -> expresion TIMES expresion .)
    DO              reduce using rule 32 (expresion -> expresion TIMES expresion .)

  ! PLUS            [ shift and go to state 105 ]
  ! MINUS           [ shift and go to state 106 ]
  ! TIMES           [ shift and go to state 107 ]
  ! DIVIDE          [ shift and go to state 108 ]
  ! GTHAN           [ shift and go to state 109 ]
  ! LTHAN           [ shift and go to state 110 ]


state 131

    (33) expresion -> expresion DIVIDE expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    SEMICOLON       reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    PLUS            reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    MINUS           reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    TIMES           reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    DIVIDE          reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    GTHAN           reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    LTHAN           reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    RPAREN          reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    COMA            reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    EQUALSDOBLE     reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    TO              reduce using rule 33 (expresion -> expresion DIVIDE expresion .)
    DO              reduce using rule 33 (expresion -> expresion DIVIDE expresion .)

  ! PLUS            [ shift and go to state 105 ]
  ! MINUS           [ shift and go to state 106 ]
  ! TIMES           [ shift and go to state 107 ]
  ! DIVIDE          [ shift and go to state 108 ]
  ! GTHAN           [ shift and go to state 109 ]
  ! LTHAN           [ shift and go to state 110 ]


state 132

    (34) expresion -> expresion GTHAN expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
    SEMICOLON       reduce using rule 34 (expresion -> expresion GTHAN expresion .)
    RPAREN          reduce using rule 34 (expresion -> expresion GTHAN expresion .)
    COMA            reduce using rule 34 (expresion -> expresion GTHAN expresion .)
    EQUALSDOBLE     reduce using rule 34 (expresion -> expresion GTHAN expresion .)
    TO              reduce using rule 34 (expresion -> expresion GTHAN expresion .)
    DO              reduce using rule 34 (expresion -> expresion GTHAN expresion .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110

  ! PLUS            [ reduce using rule 34 (expresion -> expresion GTHAN expresion .) ]
  ! MINUS           [ reduce using rule 34 (expresion -> expresion GTHAN expresion .) ]
  ! TIMES           [ reduce using rule 34 (expresion -> expresion GTHAN expresion .) ]
  ! DIVIDE          [ reduce using rule 34 (expresion -> expresion GTHAN expresion .) ]
  ! GTHAN           [ reduce using rule 34 (expresion -> expresion GTHAN expresion .) ]
  ! LTHAN           [ reduce using rule 34 (expresion -> expresion GTHAN expresion .) ]


state 133

    (35) expresion -> expresion LTHAN expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHAN resolved as shift
    SEMICOLON       reduce using rule 35 (expresion -> expresion LTHAN expresion .)
    RPAREN          reduce using rule 35 (expresion -> expresion LTHAN expresion .)
    COMA            reduce using rule 35 (expresion -> expresion LTHAN expresion .)
    EQUALSDOBLE     reduce using rule 35 (expresion -> expresion LTHAN expresion .)
    TO              reduce using rule 35 (expresion -> expresion LTHAN expresion .)
    DO              reduce using rule 35 (expresion -> expresion LTHAN expresion .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110

  ! PLUS            [ reduce using rule 35 (expresion -> expresion LTHAN expresion .) ]
  ! MINUS           [ reduce using rule 35 (expresion -> expresion LTHAN expresion .) ]
  ! TIMES           [ reduce using rule 35 (expresion -> expresion LTHAN expresion .) ]
  ! DIVIDE          [ reduce using rule 35 (expresion -> expresion LTHAN expresion .) ]
  ! GTHAN           [ reduce using rule 35 (expresion -> expresion LTHAN expresion .) ]
  ! LTHAN           [ reduce using rule 35 (expresion -> expresion LTHAN expresion .) ]


state 134

    (36) expresion -> LPAREN expresion RPAREN .

    SEMICOLON       reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    EQUALSDOBLE     reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 36 (expresion -> LPAREN expresion RPAREN .)


state 135

    (43) asignacion -> ARREGLO EQUALS expresion SEMICOLON estatuto .

    RCBRACKET       reduce using rule 43 (asignacion -> ARREGLO EQUALS expresion SEMICOLON estatuto .)


state 136

    (45) retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .

    RCBRACKET       reduce using rule 45 (retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .)


state 137

    (47) lectura1 -> listaidsInt SEMICOLON estatuto .

    RCBRACKET       reduce using rule 47 (lectura1 -> listaidsInt SEMICOLON estatuto .)


state 138

    (49) lectura1 -> RPAREN SEMICOLON estatuto .

    RCBRACKET       reduce using rule 49 (lectura1 -> RPAREN SEMICOLON estatuto .)


state 139

    (51) escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON . estatuto
    (52) escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON .
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 52 (escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 147
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 140

    (54) escritura1 -> letrero COMA escritura1 .

    RPAREN          reduce using rule 54 (escritura1 -> letrero COMA escritura1 .)
    COMA            reduce using rule 54 (escritura1 -> letrero COMA escritura1 .)


state 141

    (56) escritura1 -> expresion COMA escritura1 .

    RPAREN          reduce using rule 56 (escritura1 -> expresion COMA escritura1 .)
    COMA            reduce using rule 56 (escritura1 -> expresion COMA escritura1 .)


state 142

    (57) letrero -> QUOTES ID QUOTES .

    COMA            reduce using rule 57 (letrero -> QUOTES ID QUOTES .)
    RPAREN          reduce using rule 57 (letrero -> QUOTES ID QUOTES .)


state 143

    (59) decision -> IF LPAREN opcion RPAREN THEN . bloque estatuto
    (60) decision -> IF LPAREN opcion RPAREN THEN . bloque
    (61) decision -> IF LPAREN opcion RPAREN THEN . bloque decision1
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 148

state 144

    (64) opcion -> expresion EQUALSDOBLE expresion .
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    RPAREN          reduce using rule 64 (opcion -> expresion EQUALSDOBLE expresion .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 145

    (68) condicional -> WHILE LPAREN expresion RPAREN DO . bloque
    (69) condicional -> WHILE LPAREN expresion RPAREN DO . bloque estatuto
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 149

state 146

    (70) nocondicional -> FOR ID EQUALS expresion TO . expresion DO bloque
    (71) nocondicional -> FOR ID EQUALS expresion TO . expresion DO bloque estatuto
    (30) expresion -> . expresion PLUS expresion
    (31) expresion -> . expresion MINUS expresion
    (32) expresion -> . expresion TIMES expresion
    (33) expresion -> . expresion DIVIDE expresion
    (34) expresion -> . expresion GTHAN expresion
    (35) expresion -> . expresion LTHAN expresion
    (36) expresion -> . LPAREN expresion RPAREN
    (37) expresion -> . INT
    (38) expresion -> . FLOAT
    (39) expresion -> . ARREGLO
    (40) expresion -> . ID

    LPAREN          shift and go to state 84
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    ARREGLO         shift and go to state 87
    ID              shift and go to state 82

    expresion                      shift and go to state 150

state 147

    (51) escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto .

    RCBRACKET       reduce using rule 51 (escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto .)


state 148

    (59) decision -> IF LPAREN opcion RPAREN THEN bloque . estatuto
    (60) decision -> IF LPAREN opcion RPAREN THEN bloque .
    (61) decision -> IF LPAREN opcion RPAREN THEN bloque . decision1
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (62) decision1 -> . ELSE bloque
    (63) decision1 -> . ELSE bloque estatuto
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 60 (decision -> IF LPAREN opcion RPAREN THEN bloque .)
    ELSE            shift and go to state 153
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 151
    decision1                      shift and go to state 152
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 149

    (68) condicional -> WHILE LPAREN expresion RPAREN DO bloque .
    (69) condicional -> WHILE LPAREN expresion RPAREN DO bloque . estatuto
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 68 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 154
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 150

    (70) nocondicional -> FOR ID EQUALS expresion TO expresion . DO bloque
    (71) nocondicional -> FOR ID EQUALS expresion TO expresion . DO bloque estatuto
    (30) expresion -> expresion . PLUS expresion
    (31) expresion -> expresion . MINUS expresion
    (32) expresion -> expresion . TIMES expresion
    (33) expresion -> expresion . DIVIDE expresion
    (34) expresion -> expresion . GTHAN expresion
    (35) expresion -> expresion . LTHAN expresion

    DO              shift and go to state 155
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    TIMES           shift and go to state 107
    DIVIDE          shift and go to state 108
    GTHAN           shift and go to state 109
    LTHAN           shift and go to state 110


state 151

    (59) decision -> IF LPAREN opcion RPAREN THEN bloque estatuto .

    RCBRACKET       reduce using rule 59 (decision -> IF LPAREN opcion RPAREN THEN bloque estatuto .)


state 152

    (61) decision -> IF LPAREN opcion RPAREN THEN bloque decision1 .

    RCBRACKET       reduce using rule 61 (decision -> IF LPAREN opcion RPAREN THEN bloque decision1 .)


state 153

    (62) decision1 -> ELSE . bloque
    (63) decision1 -> ELSE . bloque estatuto
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 156

state 154

    (69) condicional -> WHILE LPAREN expresion RPAREN DO bloque estatuto .

    RCBRACKET       reduce using rule 69 (condicional -> WHILE LPAREN expresion RPAREN DO bloque estatuto .)


state 155

    (70) nocondicional -> FOR ID EQUALS expresion TO expresion DO . bloque
    (71) nocondicional -> FOR ID EQUALS expresion TO expresion DO . bloque estatuto
    (22) bloque -> . LCBRACKET estatuto RCBRACKET
    (23) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 42

    bloque                         shift and go to state 157

state 156

    (62) decision1 -> ELSE bloque .
    (63) decision1 -> ELSE bloque . estatuto
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 62 (decision1 -> ELSE bloque .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 158
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 157

    (70) nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .
    (71) nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque . estatuto
    (24) estatuto -> . asignacion
    (25) estatuto -> . retornofuncion
    (26) estatuto -> . lectura
    (27) estatuto -> . escritura
    (28) estatuto -> . decision
    (29) estatuto -> . repeticion
    (41) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (42) asignacion -> . ID EQUALS expresion SEMICOLON
    (43) asignacion -> . ARREGLO EQUALS expresion SEMICOLON estatuto
    (44) asignacion -> . ARREGLO EQUALS expresion SEMICOLON
    (45) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (46) lectura -> . READ LPAREN lectura1
    (51) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto
    (52) escritura -> . WRITE LPAREN escritura1 RPAREN SEMICOLON
    (59) decision -> . IF LPAREN opcion RPAREN THEN bloque estatuto
    (60) decision -> . IF LPAREN opcion RPAREN THEN bloque
    (61) decision -> . IF LPAREN opcion RPAREN THEN bloque decision1
    (66) repeticion -> . condicional
    (67) repeticion -> . nocondicional
    (68) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (69) condicional -> . WHILE LPAREN expresion RPAREN DO bloque estatuto
    (70) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque
    (71) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque estatuto

    RCBRACKET       reduce using rule 70 (nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .)
    ID              shift and go to state 59
    ARREGLO         shift and go to state 60
    RETURN          shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              shift and go to state 64
    WHILE           shift and go to state 67
    FOR             shift and go to state 68

    estatuto                       shift and go to state 159
    asignacion                     shift and go to state 53
    retornofuncion                 shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    repeticion                     shift and go to state 58
    condicional                    shift and go to state 65
    nocondicional                  shift and go to state 66

state 158

    (63) decision1 -> ELSE bloque estatuto .

    RCBRACKET       reduce using rule 63 (decision1 -> ELSE bloque estatuto .)


state 159

    (71) nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque estatuto .

    RCBRACKET       reduce using rule 71 (nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque estatuto .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 24 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 26 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 28 resolved as shift
WARNING: shift/reduce conflict for COMA in state 94 resolved as shift
WARNING: shift/reduce conflict for COMA in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 132 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 132 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 133 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 133 resolved as shift
WARNING: shift/reduce conflict for LTHAN in state 133 resolved as shift
WARNING: reduce/reduce conflict in state 102 resolved using rule (function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque)
WARNING: rejected rule (function -> <empty>) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque)
WARNING: rejected rule (function -> <empty>) in state 103

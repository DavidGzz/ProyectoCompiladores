Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DOT
    GTHAN
    LTHAN
    OR
    SQUOTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON variables function
Rule 2     variables -> VARS variables1
Rule 3     variables1 -> tipo COLON listaids
Rule 4     listaids -> ID listaids1
Rule 5     listaids1 -> COMA ID listaids1
Rule 6     listaids1 -> listaids2
Rule 7     listaids1 -> SEMICOLON variables1
Rule 8     listaids1 -> SEMICOLON
Rule 9     listaids1 -> RPAREN
Rule 10    listaids2 -> LBRACKET INT RBRACKET listaids1
Rule 11    function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque
Rule 12    bloque -> LCBRACKET estatuto
Rule 13    bloque -> LCBRACKET RCBRACKET
Rule 14    estatuto -> asignacion
Rule 15    estatuto -> retornofuncion
Rule 16    estatuto -> lectura
Rule 17    estatuto -> escritura
Rule 18    estatuto -> decision
Rule 19    estatuto -> repeticion
Rule 20    estatuto -> RCBRACKET
Rule 21    expresion -> expresion PLUS expresion
Rule 22    expresion -> expresion MINUS expresion
Rule 23    expresion -> expresion TIMES expresion
Rule 24    expresion -> expresion DIVIDE expresion
Rule 25    expresion -> LPAREN expresion RPAREN
Rule 26    expresion -> INT
Rule 27    expresion -> FLOAT
Rule 28    expresion -> ID
Rule 29    asignacion -> ID EQUALS expresion SEMICOLON estatuto
Rule 30    asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
Rule 31    retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON
Rule 32    lectura -> READ LPAREN lectura1
Rule 33    lectura1 -> listaids SEMICOLON
Rule 34    lectura1 -> RPAREN SEMICOLON
Rule 35    escritura -> WRITE LPAREN escritura1
Rule 36    escritura1 -> letrero escritura2
Rule 37    escritura1 -> expresion escritura2
Rule 38    escritura1 -> RPAREN SEMICOLON
Rule 39    escritura2 -> COMA escritura1
Rule 40    letrero -> QUOTES CHAR QUOTES
Rule 41    letrero -> QUOTES CHAR letrero
Rule 42    letrero -> COMA escritura1
Rule 43    repeticion -> condicional
Rule 44    repeticion -> nocondicional
Rule 45    decision -> IF LPAREN expresion RPAREN THEN bloque decision1
Rule 46    decision1 -> ELSE bloque
Rule 47    condicional -> WHILE LPAREN expresion RPAREN DO bloque
Rule 48    nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque
Rule 49    tipo -> INT
Rule 50    tipo -> FLOAT
Rule 51    tipo -> CHAR
Rule 52    tiporetorno -> INT
Rule 53    tiporetorno -> FLOAT

Terminals, with rules where they appear

AND                  : 
CHAR                 : 40 41 51
COLON                : 3
COMA                 : 5 39 42
DIVIDE               : 24
DO                   : 47 48
DOT                  : 
ELSE                 : 46
EQUALS               : 29 30 48
FLOAT                : 27 50 53
FOR                  : 48
FUNCTION             : 11
GTHAN                : 
ID                   : 1 4 5 11 28 29 30 48
IF                   : 45
INT                  : 10 26 49 52
LBRACKET             : 10 30
LCBRACKET            : 12 13
LPAREN               : 11 25 31 32 35 45 47
LTHAN                : 
MINUS                : 22
OR                   : 
PLUS                 : 21
PROGRAMA             : 1
QUOTES               : 40 40 41
RBRACKET             : 10 30
RCBRACKET            : 13 20
READ                 : 32
RETURN               : 31
RPAREN               : 9 25 31 34 38 45 47
SEMICOLON            : 1 7 8 29 30 31 33 34 38
SQUOTES              : 
THEN                 : 45
TIMES                : 23
TO                   : 48
VARS                 : 2
WHILE                : 47
WRITE                : 35
error                : 

Nonterminals, with rules where they appear

asignacion           : 14
bloque               : 11 45 46 47 48
condicional          : 43
decision             : 18
decision1            : 45
escritura            : 17
escritura1           : 35 39 42
escritura2           : 36 37
estatuto             : 12 29 30
expresion            : 21 21 22 22 23 23 24 24 25 29 30 30 31 37 45 47 48 48
function             : 1
lectura              : 16
lectura1             : 32
letrero              : 36 41
listaids             : 3 33
listaids1            : 4 5 10
listaids2            : 6
nocondicional        : 44
programa             : 0
repeticion           : 19
retornofuncion       : 15
tipo                 : 3
tiporetorno          : 11
variables            : 1 11
variables1           : 2 7 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON variables function

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON variables function

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON variables function

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . variables function
    (2) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 5

state 5

    (1) programa -> PROGRAMA ID SEMICOLON variables . function
    (11) function -> . FUNCTION tiporetorno ID LPAREN variables1 variables bloque

    FUNCTION        shift and go to state 8

    function                       shift and go to state 7

state 6

    (2) variables -> VARS . variables1
    (3) variables1 -> . tipo COLON listaids
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (1) programa -> PROGRAMA ID SEMICOLON variables function .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON variables function .)


state 8

    (11) function -> FUNCTION . tiporetorno ID LPAREN variables1 variables bloque
    (52) tiporetorno -> . INT
    (53) tiporetorno -> . FLOAT

    INT             shift and go to state 15
    FLOAT           shift and go to state 16

    tiporetorno                    shift and go to state 14

state 9

    (2) variables -> VARS variables1 .

    FUNCTION        reduce using rule 2 (variables -> VARS variables1 .)
    LCBRACKET       reduce using rule 2 (variables -> VARS variables1 .)


state 10

    (3) variables1 -> tipo . COLON listaids

    COLON           shift and go to state 17


state 11

    (49) tipo -> INT .

    COLON           reduce using rule 49 (tipo -> INT .)


state 12

    (50) tipo -> FLOAT .

    COLON           reduce using rule 50 (tipo -> FLOAT .)


state 13

    (51) tipo -> CHAR .

    COLON           reduce using rule 51 (tipo -> CHAR .)


state 14

    (11) function -> FUNCTION tiporetorno . ID LPAREN variables1 variables bloque

    ID              shift and go to state 18


state 15

    (52) tiporetorno -> INT .

    ID              reduce using rule 52 (tiporetorno -> INT .)


state 16

    (53) tiporetorno -> FLOAT .

    ID              reduce using rule 53 (tiporetorno -> FLOAT .)


state 17

    (3) variables1 -> tipo COLON . listaids
    (4) listaids -> . ID listaids1

    ID              shift and go to state 20

    listaids                       shift and go to state 19

state 18

    (11) function -> FUNCTION tiporetorno ID . LPAREN variables1 variables bloque

    LPAREN          shift and go to state 21


state 19

    (3) variables1 -> tipo COLON listaids .

    FUNCTION        reduce using rule 3 (variables1 -> tipo COLON listaids .)
    LCBRACKET       reduce using rule 3 (variables1 -> tipo COLON listaids .)
    VARS            reduce using rule 3 (variables1 -> tipo COLON listaids .)
    SEMICOLON       reduce using rule 3 (variables1 -> tipo COLON listaids .)


state 20

    (4) listaids -> ID . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON variables1
    (8) listaids1 -> . SEMICOLON
    (9) listaids1 -> . RPAREN
    (10) listaids2 -> . LBRACKET INT RBRACKET listaids1

    COMA            shift and go to state 23
    SEMICOLON       shift and go to state 25
    RPAREN          shift and go to state 26
    LBRACKET        shift and go to state 27

    listaids1                      shift and go to state 22
    listaids2                      shift and go to state 24

state 21

    (11) function -> FUNCTION tiporetorno ID LPAREN . variables1 variables bloque
    (3) variables1 -> . tipo COLON listaids
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 28
    tipo                           shift and go to state 10

state 22

    (4) listaids -> ID listaids1 .

    FUNCTION        reduce using rule 4 (listaids -> ID listaids1 .)
    LCBRACKET       reduce using rule 4 (listaids -> ID listaids1 .)
    VARS            reduce using rule 4 (listaids -> ID listaids1 .)
    SEMICOLON       reduce using rule 4 (listaids -> ID listaids1 .)


state 23

    (5) listaids1 -> COMA . ID listaids1

    ID              shift and go to state 29


state 24

    (6) listaids1 -> listaids2 .

    FUNCTION        reduce using rule 6 (listaids1 -> listaids2 .)
    LCBRACKET       reduce using rule 6 (listaids1 -> listaids2 .)
    VARS            reduce using rule 6 (listaids1 -> listaids2 .)
    SEMICOLON       reduce using rule 6 (listaids1 -> listaids2 .)


state 25

    (7) listaids1 -> SEMICOLON . variables1
    (8) listaids1 -> SEMICOLON .
    (3) variables1 -> . tipo COLON listaids
    (49) tipo -> . INT
    (50) tipo -> . FLOAT
    (51) tipo -> . CHAR

    FUNCTION        reduce using rule 8 (listaids1 -> SEMICOLON .)
    LCBRACKET       reduce using rule 8 (listaids1 -> SEMICOLON .)
    VARS            reduce using rule 8 (listaids1 -> SEMICOLON .)
    SEMICOLON       reduce using rule 8 (listaids1 -> SEMICOLON .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    CHAR            shift and go to state 13

    variables1                     shift and go to state 30
    tipo                           shift and go to state 10

state 26

    (9) listaids1 -> RPAREN .

    FUNCTION        reduce using rule 9 (listaids1 -> RPAREN .)
    LCBRACKET       reduce using rule 9 (listaids1 -> RPAREN .)
    VARS            reduce using rule 9 (listaids1 -> RPAREN .)
    SEMICOLON       reduce using rule 9 (listaids1 -> RPAREN .)


state 27

    (10) listaids2 -> LBRACKET . INT RBRACKET listaids1

    INT             shift and go to state 31


state 28

    (11) function -> FUNCTION tiporetorno ID LPAREN variables1 . variables bloque
    (2) variables -> . VARS variables1

    VARS            shift and go to state 6

    variables                      shift and go to state 32

state 29

    (5) listaids1 -> COMA ID . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON variables1
    (8) listaids1 -> . SEMICOLON
    (9) listaids1 -> . RPAREN
    (10) listaids2 -> . LBRACKET INT RBRACKET listaids1

    COMA            shift and go to state 23
    SEMICOLON       shift and go to state 25
    RPAREN          shift and go to state 26
    LBRACKET        shift and go to state 27

    listaids1                      shift and go to state 33
    listaids2                      shift and go to state 24

state 30

    (7) listaids1 -> SEMICOLON variables1 .

    FUNCTION        reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    LCBRACKET       reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    VARS            reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)
    SEMICOLON       reduce using rule 7 (listaids1 -> SEMICOLON variables1 .)


state 31

    (10) listaids2 -> LBRACKET INT . RBRACKET listaids1

    RBRACKET        shift and go to state 34


state 32

    (11) function -> FUNCTION tiporetorno ID LPAREN variables1 variables . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 35

state 33

    (5) listaids1 -> COMA ID listaids1 .

    FUNCTION        reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    LCBRACKET       reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    VARS            reduce using rule 5 (listaids1 -> COMA ID listaids1 .)
    SEMICOLON       reduce using rule 5 (listaids1 -> COMA ID listaids1 .)


state 34

    (10) listaids2 -> LBRACKET INT RBRACKET . listaids1
    (5) listaids1 -> . COMA ID listaids1
    (6) listaids1 -> . listaids2
    (7) listaids1 -> . SEMICOLON variables1
    (8) listaids1 -> . SEMICOLON
    (9) listaids1 -> . RPAREN
    (10) listaids2 -> . LBRACKET INT RBRACKET listaids1

    COMA            shift and go to state 23
    SEMICOLON       shift and go to state 25
    RPAREN          shift and go to state 26
    LBRACKET        shift and go to state 27

    listaids1                      shift and go to state 37
    listaids2                      shift and go to state 24

state 35

    (11) function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque .

    $end            reduce using rule 11 (function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque .)


state 36

    (12) bloque -> LCBRACKET . estatuto
    (13) bloque -> LCBRACKET . RCBRACKET
    (14) estatuto -> . asignacion
    (15) estatuto -> . retornofuncion
    (16) estatuto -> . lectura
    (17) estatuto -> . escritura
    (18) estatuto -> . decision
    (19) estatuto -> . repeticion
    (20) estatuto -> . RCBRACKET
    (29) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (30) asignacion -> . ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (31) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (32) lectura -> . READ LPAREN lectura1
    (35) escritura -> . WRITE LPAREN escritura1
    (45) decision -> . IF LPAREN expresion RPAREN THEN bloque decision1
    (43) repeticion -> . condicional
    (44) repeticion -> . nocondicional
    (47) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (48) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque

    RCBRACKET       shift and go to state 39
    ID              shift and go to state 46
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 53
    FOR             shift and go to state 54

    estatuto                       shift and go to state 38
    asignacion                     shift and go to state 40
    retornofuncion                 shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 43
    decision                       shift and go to state 44
    repeticion                     shift and go to state 45
    condicional                    shift and go to state 51
    nocondicional                  shift and go to state 52

state 37

    (10) listaids2 -> LBRACKET INT RBRACKET listaids1 .

    FUNCTION        reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    LCBRACKET       reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    VARS            reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)
    SEMICOLON       reduce using rule 10 (listaids2 -> LBRACKET INT RBRACKET listaids1 .)


state 38

    (12) bloque -> LCBRACKET estatuto .

    $end            reduce using rule 12 (bloque -> LCBRACKET estatuto .)
    ELSE            reduce using rule 12 (bloque -> LCBRACKET estatuto .)


state 39

    (13) bloque -> LCBRACKET RCBRACKET .
    (20) estatuto -> RCBRACKET .

  ! reduce/reduce conflict for $end resolved using rule 13 (bloque -> LCBRACKET RCBRACKET .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (bloque -> LCBRACKET RCBRACKET .)
    $end            reduce using rule 13 (bloque -> LCBRACKET RCBRACKET .)
    ELSE            reduce using rule 13 (bloque -> LCBRACKET RCBRACKET .)

  ! $end            [ reduce using rule 20 (estatuto -> RCBRACKET .) ]
  ! ELSE            [ reduce using rule 20 (estatuto -> RCBRACKET .) ]


state 40

    (14) estatuto -> asignacion .

    $end            reduce using rule 14 (estatuto -> asignacion .)
    ELSE            reduce using rule 14 (estatuto -> asignacion .)


state 41

    (15) estatuto -> retornofuncion .

    $end            reduce using rule 15 (estatuto -> retornofuncion .)
    ELSE            reduce using rule 15 (estatuto -> retornofuncion .)


state 42

    (16) estatuto -> lectura .

    $end            reduce using rule 16 (estatuto -> lectura .)
    ELSE            reduce using rule 16 (estatuto -> lectura .)


state 43

    (17) estatuto -> escritura .

    $end            reduce using rule 17 (estatuto -> escritura .)
    ELSE            reduce using rule 17 (estatuto -> escritura .)


state 44

    (18) estatuto -> decision .

    $end            reduce using rule 18 (estatuto -> decision .)
    ELSE            reduce using rule 18 (estatuto -> decision .)


state 45

    (19) estatuto -> repeticion .

    $end            reduce using rule 19 (estatuto -> repeticion .)
    ELSE            reduce using rule 19 (estatuto -> repeticion .)


state 46

    (29) asignacion -> ID . EQUALS expresion SEMICOLON estatuto
    (30) asignacion -> ID . LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto

    EQUALS          shift and go to state 55
    LBRACKET        shift and go to state 56


state 47

    (31) retornofuncion -> RETURN . LPAREN expresion RPAREN SEMICOLON

    LPAREN          shift and go to state 57


state 48

    (32) lectura -> READ . LPAREN lectura1

    LPAREN          shift and go to state 58


state 49

    (35) escritura -> WRITE . LPAREN escritura1

    LPAREN          shift and go to state 59


state 50

    (45) decision -> IF . LPAREN expresion RPAREN THEN bloque decision1

    LPAREN          shift and go to state 60


state 51

    (43) repeticion -> condicional .

    $end            reduce using rule 43 (repeticion -> condicional .)
    ELSE            reduce using rule 43 (repeticion -> condicional .)


state 52

    (44) repeticion -> nocondicional .

    $end            reduce using rule 44 (repeticion -> nocondicional .)
    ELSE            reduce using rule 44 (repeticion -> nocondicional .)


state 53

    (47) condicional -> WHILE . LPAREN expresion RPAREN DO bloque

    LPAREN          shift and go to state 61


state 54

    (48) nocondicional -> FOR . ID EQUALS expresion TO expresion DO bloque

    ID              shift and go to state 62


state 55

    (29) asignacion -> ID EQUALS . expresion SEMICOLON estatuto
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 64

state 56

    (30) asignacion -> ID LBRACKET . expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 68

state 57

    (31) retornofuncion -> RETURN LPAREN . expresion RPAREN SEMICOLON
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 69

state 58

    (32) lectura -> READ LPAREN . lectura1
    (33) lectura1 -> . listaids SEMICOLON
    (34) lectura1 -> . RPAREN SEMICOLON
    (4) listaids -> . ID listaids1

    RPAREN          shift and go to state 72
    ID              shift and go to state 20

    lectura1                       shift and go to state 70
    listaids                       shift and go to state 71

state 59

    (35) escritura -> WRITE LPAREN . escritura1
    (36) escritura1 -> . letrero escritura2
    (37) escritura1 -> . expresion escritura2
    (38) escritura1 -> . RPAREN SEMICOLON
    (40) letrero -> . QUOTES CHAR QUOTES
    (41) letrero -> . QUOTES CHAR letrero
    (42) letrero -> . COMA escritura1
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    RPAREN          shift and go to state 76
    QUOTES          shift and go to state 77
    COMA            shift and go to state 78
    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    escritura1                     shift and go to state 73
    letrero                        shift and go to state 74
    expresion                      shift and go to state 75

state 60

    (45) decision -> IF LPAREN . expresion RPAREN THEN bloque decision1
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 79

state 61

    (47) condicional -> WHILE LPAREN . expresion RPAREN DO bloque
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 80

state 62

    (48) nocondicional -> FOR ID . EQUALS expresion TO expresion DO bloque

    EQUALS          shift and go to state 81


state 63

    (28) expresion -> ID .

    SEMICOLON       reduce using rule 28 (expresion -> ID .)
    PLUS            reduce using rule 28 (expresion -> ID .)
    MINUS           reduce using rule 28 (expresion -> ID .)
    TIMES           reduce using rule 28 (expresion -> ID .)
    DIVIDE          reduce using rule 28 (expresion -> ID .)
    RBRACKET        reduce using rule 28 (expresion -> ID .)
    RPAREN          reduce using rule 28 (expresion -> ID .)
    COMA            reduce using rule 28 (expresion -> ID .)
    TO              reduce using rule 28 (expresion -> ID .)
    DO              reduce using rule 28 (expresion -> ID .)


state 64

    (29) asignacion -> ID EQUALS expresion . SEMICOLON estatuto
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    SEMICOLON       shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 65

    (25) expresion -> LPAREN . expresion RPAREN
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 87

state 66

    (26) expresion -> INT .

    SEMICOLON       reduce using rule 26 (expresion -> INT .)
    PLUS            reduce using rule 26 (expresion -> INT .)
    MINUS           reduce using rule 26 (expresion -> INT .)
    TIMES           reduce using rule 26 (expresion -> INT .)
    DIVIDE          reduce using rule 26 (expresion -> INT .)
    RBRACKET        reduce using rule 26 (expresion -> INT .)
    RPAREN          reduce using rule 26 (expresion -> INT .)
    COMA            reduce using rule 26 (expresion -> INT .)
    TO              reduce using rule 26 (expresion -> INT .)
    DO              reduce using rule 26 (expresion -> INT .)


state 67

    (27) expresion -> FLOAT .

    SEMICOLON       reduce using rule 27 (expresion -> FLOAT .)
    PLUS            reduce using rule 27 (expresion -> FLOAT .)
    MINUS           reduce using rule 27 (expresion -> FLOAT .)
    TIMES           reduce using rule 27 (expresion -> FLOAT .)
    DIVIDE          reduce using rule 27 (expresion -> FLOAT .)
    RBRACKET        reduce using rule 27 (expresion -> FLOAT .)
    RPAREN          reduce using rule 27 (expresion -> FLOAT .)
    COMA            reduce using rule 27 (expresion -> FLOAT .)
    TO              reduce using rule 27 (expresion -> FLOAT .)
    DO              reduce using rule 27 (expresion -> FLOAT .)


state 68

    (30) asignacion -> ID LBRACKET expresion . RBRACKET EQUALS expresion SEMICOLON estatuto
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    RBRACKET        shift and go to state 88
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 69

    (31) retornofuncion -> RETURN LPAREN expresion . RPAREN SEMICOLON
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 89
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 70

    (32) lectura -> READ LPAREN lectura1 .

    $end            reduce using rule 32 (lectura -> READ LPAREN lectura1 .)
    ELSE            reduce using rule 32 (lectura -> READ LPAREN lectura1 .)


state 71

    (33) lectura1 -> listaids . SEMICOLON

    SEMICOLON       shift and go to state 90


state 72

    (34) lectura1 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 91


state 73

    (35) escritura -> WRITE LPAREN escritura1 .

    $end            reduce using rule 35 (escritura -> WRITE LPAREN escritura1 .)
    ELSE            reduce using rule 35 (escritura -> WRITE LPAREN escritura1 .)


state 74

    (36) escritura1 -> letrero . escritura2
    (39) escritura2 -> . COMA escritura1

    COMA            shift and go to state 93

    escritura2                     shift and go to state 92

state 75

    (37) escritura1 -> expresion . escritura2
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion
    (39) escritura2 -> . COMA escritura1

    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86
    COMA            shift and go to state 93

    escritura2                     shift and go to state 94

state 76

    (38) escritura1 -> RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 95


state 77

    (40) letrero -> QUOTES . CHAR QUOTES
    (41) letrero -> QUOTES . CHAR letrero

    CHAR            shift and go to state 96


state 78

    (42) letrero -> COMA . escritura1
    (36) escritura1 -> . letrero escritura2
    (37) escritura1 -> . expresion escritura2
    (38) escritura1 -> . RPAREN SEMICOLON
    (40) letrero -> . QUOTES CHAR QUOTES
    (41) letrero -> . QUOTES CHAR letrero
    (42) letrero -> . COMA escritura1
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    RPAREN          shift and go to state 76
    QUOTES          shift and go to state 77
    COMA            shift and go to state 78
    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    escritura1                     shift and go to state 97
    letrero                        shift and go to state 74
    expresion                      shift and go to state 75

state 79

    (45) decision -> IF LPAREN expresion . RPAREN THEN bloque decision1
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 98
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 80

    (47) condicional -> WHILE LPAREN expresion . RPAREN DO bloque
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 81

    (48) nocondicional -> FOR ID EQUALS . expresion TO expresion DO bloque
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 100

state 82

    (29) asignacion -> ID EQUALS expresion SEMICOLON . estatuto
    (14) estatuto -> . asignacion
    (15) estatuto -> . retornofuncion
    (16) estatuto -> . lectura
    (17) estatuto -> . escritura
    (18) estatuto -> . decision
    (19) estatuto -> . repeticion
    (20) estatuto -> . RCBRACKET
    (29) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (30) asignacion -> . ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (31) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (32) lectura -> . READ LPAREN lectura1
    (35) escritura -> . WRITE LPAREN escritura1
    (45) decision -> . IF LPAREN expresion RPAREN THEN bloque decision1
    (43) repeticion -> . condicional
    (44) repeticion -> . nocondicional
    (47) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (48) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque

    RCBRACKET       shift and go to state 102
    ID              shift and go to state 46
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 53
    FOR             shift and go to state 54

    estatuto                       shift and go to state 101
    asignacion                     shift and go to state 40
    retornofuncion                 shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 43
    decision                       shift and go to state 44
    repeticion                     shift and go to state 45
    condicional                    shift and go to state 51
    nocondicional                  shift and go to state 52

state 83

    (21) expresion -> expresion PLUS . expresion
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 103

state 84

    (22) expresion -> expresion MINUS . expresion
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 104

state 85

    (23) expresion -> expresion TIMES . expresion
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 105

state 86

    (24) expresion -> expresion DIVIDE . expresion
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 106

state 87

    (25) expresion -> LPAREN expresion . RPAREN
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    RPAREN          shift and go to state 107
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 88

    (30) asignacion -> ID LBRACKET expresion RBRACKET . EQUALS expresion SEMICOLON estatuto

    EQUALS          shift and go to state 108


state 89

    (31) retornofuncion -> RETURN LPAREN expresion RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 109


state 90

    (33) lectura1 -> listaids SEMICOLON .

    $end            reduce using rule 33 (lectura1 -> listaids SEMICOLON .)
    ELSE            reduce using rule 33 (lectura1 -> listaids SEMICOLON .)


state 91

    (34) lectura1 -> RPAREN SEMICOLON .

    $end            reduce using rule 34 (lectura1 -> RPAREN SEMICOLON .)
    ELSE            reduce using rule 34 (lectura1 -> RPAREN SEMICOLON .)


state 92

    (36) escritura1 -> letrero escritura2 .

    $end            reduce using rule 36 (escritura1 -> letrero escritura2 .)
    ELSE            reduce using rule 36 (escritura1 -> letrero escritura2 .)
    COMA            reduce using rule 36 (escritura1 -> letrero escritura2 .)


state 93

    (39) escritura2 -> COMA . escritura1
    (36) escritura1 -> . letrero escritura2
    (37) escritura1 -> . expresion escritura2
    (38) escritura1 -> . RPAREN SEMICOLON
    (40) letrero -> . QUOTES CHAR QUOTES
    (41) letrero -> . QUOTES CHAR letrero
    (42) letrero -> . COMA escritura1
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    RPAREN          shift and go to state 76
    QUOTES          shift and go to state 77
    COMA            shift and go to state 78
    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    escritura1                     shift and go to state 110
    letrero                        shift and go to state 74
    expresion                      shift and go to state 75

state 94

    (37) escritura1 -> expresion escritura2 .

    $end            reduce using rule 37 (escritura1 -> expresion escritura2 .)
    ELSE            reduce using rule 37 (escritura1 -> expresion escritura2 .)
    COMA            reduce using rule 37 (escritura1 -> expresion escritura2 .)


state 95

    (38) escritura1 -> RPAREN SEMICOLON .

    $end            reduce using rule 38 (escritura1 -> RPAREN SEMICOLON .)
    ELSE            reduce using rule 38 (escritura1 -> RPAREN SEMICOLON .)
    COMA            reduce using rule 38 (escritura1 -> RPAREN SEMICOLON .)


state 96

    (40) letrero -> QUOTES CHAR . QUOTES
    (41) letrero -> QUOTES CHAR . letrero
    (40) letrero -> . QUOTES CHAR QUOTES
    (41) letrero -> . QUOTES CHAR letrero
    (42) letrero -> . COMA escritura1

    QUOTES          shift and go to state 111
    COMA            shift and go to state 78

    letrero                        shift and go to state 112

state 97

    (42) letrero -> COMA escritura1 .

    COMA            reduce using rule 42 (letrero -> COMA escritura1 .)


state 98

    (45) decision -> IF LPAREN expresion RPAREN . THEN bloque decision1

    THEN            shift and go to state 113


state 99

    (47) condicional -> WHILE LPAREN expresion RPAREN . DO bloque

    DO              shift and go to state 114


state 100

    (48) nocondicional -> FOR ID EQUALS expresion . TO expresion DO bloque
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    TO              shift and go to state 115
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 101

    (29) asignacion -> ID EQUALS expresion SEMICOLON estatuto .

    $end            reduce using rule 29 (asignacion -> ID EQUALS expresion SEMICOLON estatuto .)
    ELSE            reduce using rule 29 (asignacion -> ID EQUALS expresion SEMICOLON estatuto .)


state 102

    (20) estatuto -> RCBRACKET .

    $end            reduce using rule 20 (estatuto -> RCBRACKET .)
    ELSE            reduce using rule 20 (estatuto -> RCBRACKET .)


state 103

    (21) expresion -> expresion PLUS expresion .
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 21 (expresion -> expresion PLUS expresion .)
    PLUS            reduce using rule 21 (expresion -> expresion PLUS expresion .)
    MINUS           reduce using rule 21 (expresion -> expresion PLUS expresion .)
    RBRACKET        reduce using rule 21 (expresion -> expresion PLUS expresion .)
    RPAREN          reduce using rule 21 (expresion -> expresion PLUS expresion .)
    COMA            reduce using rule 21 (expresion -> expresion PLUS expresion .)
    TO              reduce using rule 21 (expresion -> expresion PLUS expresion .)
    DO              reduce using rule 21 (expresion -> expresion PLUS expresion .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86

  ! TIMES           [ reduce using rule 21 (expresion -> expresion PLUS expresion .) ]
  ! DIVIDE          [ reduce using rule 21 (expresion -> expresion PLUS expresion .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]


state 104

    (22) expresion -> expresion MINUS expresion .
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 22 (expresion -> expresion MINUS expresion .)
    PLUS            reduce using rule 22 (expresion -> expresion MINUS expresion .)
    MINUS           reduce using rule 22 (expresion -> expresion MINUS expresion .)
    RBRACKET        reduce using rule 22 (expresion -> expresion MINUS expresion .)
    RPAREN          reduce using rule 22 (expresion -> expresion MINUS expresion .)
    COMA            reduce using rule 22 (expresion -> expresion MINUS expresion .)
    TO              reduce using rule 22 (expresion -> expresion MINUS expresion .)
    DO              reduce using rule 22 (expresion -> expresion MINUS expresion .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86

  ! TIMES           [ reduce using rule 22 (expresion -> expresion MINUS expresion .) ]
  ! DIVIDE          [ reduce using rule 22 (expresion -> expresion MINUS expresion .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]


state 105

    (23) expresion -> expresion TIMES expresion .
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 23 (expresion -> expresion TIMES expresion .)
    PLUS            reduce using rule 23 (expresion -> expresion TIMES expresion .)
    MINUS           reduce using rule 23 (expresion -> expresion TIMES expresion .)
    TIMES           reduce using rule 23 (expresion -> expresion TIMES expresion .)
    DIVIDE          reduce using rule 23 (expresion -> expresion TIMES expresion .)
    RBRACKET        reduce using rule 23 (expresion -> expresion TIMES expresion .)
    RPAREN          reduce using rule 23 (expresion -> expresion TIMES expresion .)
    COMA            reduce using rule 23 (expresion -> expresion TIMES expresion .)
    TO              reduce using rule 23 (expresion -> expresion TIMES expresion .)
    DO              reduce using rule 23 (expresion -> expresion TIMES expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 86 ]


state 106

    (24) expresion -> expresion DIVIDE expresion .
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    SEMICOLON       reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    PLUS            reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    MINUS           reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    TIMES           reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    DIVIDE          reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    RBRACKET        reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    RPAREN          reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    COMA            reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    TO              reduce using rule 24 (expresion -> expresion DIVIDE expresion .)
    DO              reduce using rule 24 (expresion -> expresion DIVIDE expresion .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! TIMES           [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 86 ]


state 107

    (25) expresion -> LPAREN expresion RPAREN .

    SEMICOLON       reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    TO              reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 25 (expresion -> LPAREN expresion RPAREN .)


state 108

    (30) asignacion -> ID LBRACKET expresion RBRACKET EQUALS . expresion SEMICOLON estatuto
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 116

state 109

    (31) retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .

    $end            reduce using rule 31 (retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .)
    ELSE            reduce using rule 31 (retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON .)


state 110

    (39) escritura2 -> COMA escritura1 .

    $end            reduce using rule 39 (escritura2 -> COMA escritura1 .)
    ELSE            reduce using rule 39 (escritura2 -> COMA escritura1 .)
    COMA            reduce using rule 39 (escritura2 -> COMA escritura1 .)


state 111

    (40) letrero -> QUOTES CHAR QUOTES .
    (40) letrero -> QUOTES . CHAR QUOTES
    (41) letrero -> QUOTES . CHAR letrero

    COMA            reduce using rule 40 (letrero -> QUOTES CHAR QUOTES .)
    CHAR            shift and go to state 96


state 112

    (41) letrero -> QUOTES CHAR letrero .

    COMA            reduce using rule 41 (letrero -> QUOTES CHAR letrero .)


state 113

    (45) decision -> IF LPAREN expresion RPAREN THEN . bloque decision1
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 117

state 114

    (47) condicional -> WHILE LPAREN expresion RPAREN DO . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 118

state 115

    (48) nocondicional -> FOR ID EQUALS expresion TO . expresion DO bloque
    (21) expresion -> . expresion PLUS expresion
    (22) expresion -> . expresion MINUS expresion
    (23) expresion -> . expresion TIMES expresion
    (24) expresion -> . expresion DIVIDE expresion
    (25) expresion -> . LPAREN expresion RPAREN
    (26) expresion -> . INT
    (27) expresion -> . FLOAT
    (28) expresion -> . ID

    LPAREN          shift and go to state 65
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    ID              shift and go to state 63

    expresion                      shift and go to state 119

state 116

    (30) asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion . SEMICOLON estatuto
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    SEMICOLON       shift and go to state 120
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 117

    (45) decision -> IF LPAREN expresion RPAREN THEN bloque . decision1
    (46) decision1 -> . ELSE bloque

    ELSE            shift and go to state 122

    decision1                      shift and go to state 121

state 118

    (47) condicional -> WHILE LPAREN expresion RPAREN DO bloque .

    $end            reduce using rule 47 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)
    ELSE            reduce using rule 47 (condicional -> WHILE LPAREN expresion RPAREN DO bloque .)


state 119

    (48) nocondicional -> FOR ID EQUALS expresion TO expresion . DO bloque
    (21) expresion -> expresion . PLUS expresion
    (22) expresion -> expresion . MINUS expresion
    (23) expresion -> expresion . TIMES expresion
    (24) expresion -> expresion . DIVIDE expresion

    DO              shift and go to state 123
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 120

    (30) asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON . estatuto
    (14) estatuto -> . asignacion
    (15) estatuto -> . retornofuncion
    (16) estatuto -> . lectura
    (17) estatuto -> . escritura
    (18) estatuto -> . decision
    (19) estatuto -> . repeticion
    (20) estatuto -> . RCBRACKET
    (29) asignacion -> . ID EQUALS expresion SEMICOLON estatuto
    (30) asignacion -> . ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto
    (31) retornofuncion -> . RETURN LPAREN expresion RPAREN SEMICOLON
    (32) lectura -> . READ LPAREN lectura1
    (35) escritura -> . WRITE LPAREN escritura1
    (45) decision -> . IF LPAREN expresion RPAREN THEN bloque decision1
    (43) repeticion -> . condicional
    (44) repeticion -> . nocondicional
    (47) condicional -> . WHILE LPAREN expresion RPAREN DO bloque
    (48) nocondicional -> . FOR ID EQUALS expresion TO expresion DO bloque

    RCBRACKET       shift and go to state 102
    ID              shift and go to state 46
    RETURN          shift and go to state 47
    READ            shift and go to state 48
    WRITE           shift and go to state 49
    IF              shift and go to state 50
    WHILE           shift and go to state 53
    FOR             shift and go to state 54

    estatuto                       shift and go to state 124
    asignacion                     shift and go to state 40
    retornofuncion                 shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 43
    decision                       shift and go to state 44
    repeticion                     shift and go to state 45
    condicional                    shift and go to state 51
    nocondicional                  shift and go to state 52

state 121

    (45) decision -> IF LPAREN expresion RPAREN THEN bloque decision1 .

    $end            reduce using rule 45 (decision -> IF LPAREN expresion RPAREN THEN bloque decision1 .)
    ELSE            reduce using rule 45 (decision -> IF LPAREN expresion RPAREN THEN bloque decision1 .)


state 122

    (46) decision1 -> ELSE . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 125

state 123

    (48) nocondicional -> FOR ID EQUALS expresion TO expresion DO . bloque
    (12) bloque -> . LCBRACKET estatuto
    (13) bloque -> . LCBRACKET RCBRACKET

    LCBRACKET       shift and go to state 36

    bloque                         shift and go to state 126

state 124

    (30) asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto .

    $end            reduce using rule 30 (asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto .)
    ELSE            reduce using rule 30 (asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto .)


state 125

    (46) decision1 -> ELSE bloque .

    $end            reduce using rule 46 (decision1 -> ELSE bloque .)
    ELSE            reduce using rule 46 (decision1 -> ELSE bloque .)


state 126

    (48) nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .

    $end            reduce using rule 48 (nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .)
    ELSE            reduce using rule 48 (nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 39 resolved using rule (bloque -> LCBRACKET RCBRACKET)
WARNING: rejected rule (estatuto -> RCBRACKET) in state 39

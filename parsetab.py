
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEAND CHAR COLON COMA DIVIDE DO DOT ELSE EQUALS FLOAT FOR FUNCTION GTHAN ID IF INT LBRACKET LCBRACKET LETTER LPAREN LTHAN MINUS NUMBER OR PLUS PROGRAMA QUOTES RBRACKET RCBRACKET READ RETURN RPAREN SEMICOLON SQUOTES THEN TIMES TO VARS WHILE WRITEprograma : PROGRAMA ID SEMICOLON variables function bloquevariables : VARS variables1variables1 : tipo COLON listaidslistaids : ID listaids1listaids1 : COMA ID listaids1 \n                | listaids2 \n                | SEMICOLONlistaids2 : LBRACKET INT RBRACKET listaids1 \n                | LBRACKET INT RBRACKET SEMICOLON \n                | SEMICOLONtipo : INT \n            | FLOAT \n            | CHARfunction : FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloquebloque : LCBRACKET estatuto bloque1 \n            | LCBRACKET RCBRACKETbloque1 : RCBRACKET \n                | estatutoestatuto : asignacion \n                | retornofuncion \n                | lectura \n                | escritura\n                | decision\n                | repeticiontiporetorno : INT \n                | FLOATasignacion : ID EQUALS expresion SEMICOLON \n                | ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLONretornofuncion : RETURN LPAREN exp RPAREN SEMICOLONexpresion : exp expresion1expresion1 : GTHAN exp \n                | LTHAN exp\n                | AND exp\n                | OR expexp : termino exp1exp1 : PLUS exp \n            | MINUS exp \n            | SEMICOLONtermino : factor termino1termino1 : TIMES termino \n                | DIVIDE termino\n                | SEMICOLONfactor : LCBRACKET expresion RCBRACKET\n            | PLUS varcte \n            | MINUS varcte \n            | varctevarcte : INT \n            | FLOAT \n            | IDlectura : READ LPAREN lectura1lectura1 : RPAREN SEMICOLON \n                | listaids lectura1escritura : WRITE LPAREN escritura1escritura1 : letrero escritura2 \n                | expresion escritura2escritura2 : RPAREN SEMICOLON \n                | escritura1letrero : QUOTES letrero1letrero1 : CHAR QUOTES \n                | CHAR letrero1repeticion : condicional\n                | nocondicionaldecision : IF LPAREN expresion RPAREN THEN bloque decision1decision1 : ELSE bloquecondicional : WHILE LPAREN expresion RPAREN DO bloquenocondicional : FOR ID EQUALS exp TO exp DO bloque'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,14,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[0,-1,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'ID':([2,15,16,17,18,19,20,21,22,23,24,25,26,27,33,34,36,40,41,42,43,44,45,46,47,48,49,52,53,54,55,62,63,65,70,72,73,74,75,79,83,84,85,86,87,88,89,90,91,92,94,95,102,103,104,106,107,108,114,116,117,118,119,120,121,125,126,127,128,129,132,134,135,138,141,142,146,147,],[3,28,37,-25,-26,39,28,-16,-19,-20,-21,-22,-23,-24,-61,-62,50,-18,-15,-17,57,57,57,39,57,57,57,-4,81,-6,-7,57,57,57,-50,39,-53,57,57,57,-27,-30,57,57,57,57,-35,57,57,-38,57,57,-51,-52,-54,-57,-55,-58,-5,-31,-32,-33,-34,-36,-37,57,-29,-56,-59,-60,57,-8,-7,-65,-28,-63,-64,-66,]),'SEMICOLON':([3,39,57,58,60,61,64,66,67,71,81,84,89,92,93,96,98,99,101,105,113,115,116,117,118,119,120,121,122,123,124,136,],[4,55,-49,83,92,96,-46,-47,-48,102,55,-30,-35,-38,-39,-42,-44,-45,126,127,133,135,-31,-32,-33,-34,-36,-37,-40,-41,-43,141,]),'VARS':([4,133,],[6,6,]),'FUNCTION':([5,9,38,52,54,55,114,134,135,],[8,-2,-3,-4,-6,-7,-5,-8,-7,]),'INT':([6,8,43,44,45,47,48,49,51,56,62,63,65,74,75,79,84,85,86,87,88,89,90,91,92,94,95,108,116,117,118,119,120,121,125,128,129,132,],[11,17,66,66,66,66,66,66,11,82,66,66,66,66,66,66,-30,66,66,66,66,-35,66,66,-38,66,66,-58,-31,-32,-33,-34,-36,-37,66,-59,-60,66,]),'FLOAT':([6,8,43,44,45,47,48,49,51,62,63,65,74,75,79,84,85,86,87,88,89,90,91,92,94,95,108,116,117,118,119,120,121,125,128,129,132,],[12,18,67,67,67,67,67,67,12,67,67,67,67,67,67,-30,67,67,67,67,-35,67,67,-38,67,67,-58,-31,-32,-33,-34,-36,-37,67,-59,-60,67,]),'CHAR':([6,51,76,109,],[13,13,109,109,]),'LCBRACKET':([7,9,21,22,23,24,25,26,27,33,34,38,40,41,42,43,44,45,47,48,49,52,54,55,62,70,73,74,75,79,83,84,85,86,87,88,89,90,91,92,94,95,102,103,104,106,107,108,114,116,117,118,119,120,121,125,126,127,128,129,130,131,132,134,135,138,140,141,142,143,144,145,146,147,],[15,-2,-16,-19,-20,-21,-22,-23,-24,-61,-62,-3,-18,-15,-17,62,62,62,62,62,62,-4,-6,-7,62,-50,-53,62,62,62,-27,-30,62,62,62,62,-35,62,62,-38,62,62,-51,-52,-54,-57,-55,-58,-5,-31,-32,-33,-34,-36,-37,62,-29,-56,-59,-60,15,15,62,-8,-7,-65,15,-28,-63,15,15,-14,-64,-66,]),'COLON':([10,11,12,13,],[19,-11,-12,-13,]),'RCBRACKET':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,84,89,92,97,102,103,104,106,107,116,117,118,119,120,121,126,127,138,141,142,146,147,],[21,42,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-30,-35,-38,124,-51,-52,-54,-57,-55,-31,-32,-33,-34,-36,-37,-29,-56,-65,-28,-63,-64,-66,]),'RETURN':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[29,29,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'READ':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[30,30,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'WRITE':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[31,31,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'IF':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[32,32,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'WHILE':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[35,35,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'FOR':([15,20,21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,138,141,142,146,147,],[36,36,-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,-65,-28,-63,-64,-66,]),'ELSE':([21,22,23,24,25,26,27,33,34,40,41,42,70,73,83,102,103,104,106,107,126,127,137,138,141,142,146,147,],[-16,-19,-20,-21,-22,-23,-24,-61,-62,-18,-15,-17,-50,-53,-27,-51,-52,-54,-57,-55,-29,-56,143,-65,-28,-63,-64,-66,]),'EQUALS':([28,50,100,],[43,79,125,]),'LBRACKET':([28,39,81,115,],[44,56,56,56,]),'LPAREN':([29,30,31,32,35,37,],[45,46,47,48,49,51,]),'RPAREN':([38,46,52,54,55,69,72,74,75,77,78,80,84,89,92,108,114,116,117,118,119,120,121,128,129,134,135,],[-3,71,-4,-6,-7,101,71,105,105,110,111,113,-30,-35,-38,-58,-5,-31,-32,-33,-34,-36,-37,-59,-60,-8,-7,]),'COMA':([39,81,115,],[53,53,53,]),'PLUS':([43,44,45,47,48,49,60,62,74,75,79,84,85,86,87,88,89,90,91,92,93,94,95,96,108,116,117,118,119,120,121,122,123,125,128,129,132,],[63,63,63,63,63,63,90,63,63,63,63,-30,63,63,63,63,-35,63,63,-38,-39,63,63,-42,-58,-31,-32,-33,-34,-36,-37,-40,-41,63,-59,-60,63,]),'MINUS':([43,44,45,47,48,49,60,62,74,75,79,84,85,86,87,88,89,90,91,92,93,94,95,96,108,116,117,118,119,120,121,122,123,125,128,129,132,],[65,65,65,65,65,65,91,65,65,65,65,-30,65,65,65,65,-35,65,65,-38,-39,65,65,-42,-58,-31,-32,-33,-34,-36,-37,-40,-41,65,-59,-60,65,]),'QUOTES':([47,74,75,84,89,92,108,109,116,117,118,119,120,121,128,129,],[76,76,76,-30,-35,-38,-58,128,-31,-32,-33,-34,-36,-37,-59,-60,]),'TIMES':([57,61,64,66,67,98,99,124,],[-49,94,-46,-47,-48,-44,-45,-43,]),'DIVIDE':([57,61,64,66,67,98,99,124,],[-49,95,-46,-47,-48,-44,-45,-43,]),'GTHAN':([59,89,92,120,121,],[85,-35,-38,-36,-37,]),'LTHAN':([59,89,92,120,121,],[86,-35,-38,-36,-37,]),'AND':([59,89,92,120,121,],[87,-35,-38,-36,-37,]),'OR':([59,89,92,120,121,],[88,-35,-38,-36,-37,]),'RBRACKET':([68,82,89,92,120,121,],[100,115,-35,-38,-36,-37,]),'TO':([89,92,112,120,121,],[-35,-38,132,-36,-37,]),'DO':([89,92,111,120,121,139,],[-35,-38,131,-36,-37,144,]),'THEN':([110,],[130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'variables':([4,133,],[5,140,]),'function':([5,],[7,]),'variables1':([6,51,],[9,80,]),'tipo':([6,51,],[10,10,]),'bloque':([7,130,131,140,143,144,],[14,137,138,145,146,147,]),'tiporetorno':([8,],[16,]),'estatuto':([15,20,],[20,40,]),'asignacion':([15,20,],[22,22,]),'retornofuncion':([15,20,],[23,23,]),'lectura':([15,20,],[24,24,]),'escritura':([15,20,],[25,25,]),'decision':([15,20,],[26,26,]),'repeticion':([15,20,],[27,27,]),'condicional':([15,20,],[33,33,]),'nocondicional':([15,20,],[34,34,]),'listaids':([19,46,72,],[38,72,72,]),'bloque1':([20,],[41,]),'listaids1':([39,81,115,],[52,114,134,]),'listaids2':([39,81,115,],[54,54,54,]),'expresion':([43,47,48,49,62,74,75,125,],[58,75,77,78,97,75,75,136,]),'exp':([43,44,45,47,48,49,62,74,75,79,85,86,87,88,90,91,125,132,],[59,68,69,59,59,59,59,59,59,112,116,117,118,119,120,121,59,139,]),'termino':([43,44,45,47,48,49,62,74,75,79,85,86,87,88,90,91,94,95,125,132,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,122,123,60,60,]),'factor':([43,44,45,47,48,49,62,74,75,79,85,86,87,88,90,91,94,95,125,132,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'varcte':([43,44,45,47,48,49,62,63,65,74,75,79,85,86,87,88,90,91,94,95,125,132,],[64,64,64,64,64,64,64,98,99,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'lectura1':([46,72,],[70,103,]),'escritura1':([47,74,75,],[73,106,106,]),'letrero':([47,74,75,],[74,74,74,]),'expresion1':([59,],[84,]),'exp1':([60,],[89,]),'termino1':([61,],[93,]),'escritura2':([74,75,],[104,107,]),'letrero1':([76,109,],[108,129,]),'decision1':([137,],[142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON variables function bloque','programa',6,'p_programa','parser.py',10),
  ('variables -> VARS variables1','variables',2,'p_variables','parser.py',13),
  ('variables1 -> tipo COLON listaids','variables1',3,'p_variables1','parser.py',17),
  ('listaids -> ID listaids1','listaids',2,'p_listaids','parser.py',20),
  ('listaids1 -> COMA ID listaids1','listaids1',3,'p_listaids1','parser.py',23),
  ('listaids1 -> listaids2','listaids1',1,'p_listaids1','parser.py',24),
  ('listaids1 -> SEMICOLON','listaids1',1,'p_listaids1','parser.py',25),
  ('listaids2 -> LBRACKET INT RBRACKET listaids1','listaids2',4,'p_listaids2','parser.py',28),
  ('listaids2 -> LBRACKET INT RBRACKET SEMICOLON','listaids2',4,'p_listaids2','parser.py',29),
  ('listaids2 -> SEMICOLON','listaids2',1,'p_listaids2','parser.py',30),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',33),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',34),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',35),
  ('function -> FUNCTION tiporetorno ID LPAREN variables1 RPAREN SEMICOLON variables bloque','function',9,'p_function','parser.py',38),
  ('bloque -> LCBRACKET estatuto bloque1','bloque',3,'p_bloque','parser.py',41),
  ('bloque -> LCBRACKET RCBRACKET','bloque',2,'p_bloque','parser.py',42),
  ('bloque1 -> RCBRACKET','bloque1',1,'p_bloque1','parser.py',45),
  ('bloque1 -> estatuto','bloque1',1,'p_bloque1','parser.py',46),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',49),
  ('estatuto -> retornofuncion','estatuto',1,'p_estatuto','parser.py',50),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',51),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',52),
  ('estatuto -> decision','estatuto',1,'p_estatuto','parser.py',53),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','parser.py',54),
  ('tiporetorno -> INT','tiporetorno',1,'p_tiporetorno','parser.py',58),
  ('tiporetorno -> FLOAT','tiporetorno',1,'p_tiporetorno','parser.py',59),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',62),
  ('asignacion -> ID LBRACKET exp RBRACKET EQUALS expresion SEMICOLON','asignacion',7,'p_asignacion','parser.py',63),
  ('retornofuncion -> RETURN LPAREN exp RPAREN SEMICOLON','retornofuncion',5,'p_retornofuncion','parser.py',66),
  ('expresion -> exp expresion1','expresion',2,'p_expresion','parser.py',69),
  ('expresion1 -> GTHAN exp','expresion1',2,'p_expresion1','parser.py',72),
  ('expresion1 -> LTHAN exp','expresion1',2,'p_expresion1','parser.py',73),
  ('expresion1 -> AND exp','expresion1',2,'p_expresion1','parser.py',74),
  ('expresion1 -> OR exp','expresion1',2,'p_expresion1','parser.py',75),
  ('exp -> termino exp1','exp',2,'p_exp','parser.py',78),
  ('exp1 -> PLUS exp','exp1',2,'p_exp1','parser.py',81),
  ('exp1 -> MINUS exp','exp1',2,'p_exp1','parser.py',82),
  ('exp1 -> SEMICOLON','exp1',1,'p_exp1','parser.py',83),
  ('termino -> factor termino1','termino',2,'p_termino','parser.py',86),
  ('termino1 -> TIMES termino','termino1',2,'p_termino1','parser.py',89),
  ('termino1 -> DIVIDE termino','termino1',2,'p_termino1','parser.py',90),
  ('termino1 -> SEMICOLON','termino1',1,'p_termino1','parser.py',91),
  ('factor -> LCBRACKET expresion RCBRACKET','factor',3,'p_factor','parser.py',94),
  ('factor -> PLUS varcte','factor',2,'p_factor','parser.py',95),
  ('factor -> MINUS varcte','factor',2,'p_factor','parser.py',96),
  ('factor -> varcte','factor',1,'p_factor','parser.py',97),
  ('varcte -> INT','varcte',1,'p_varcte','parser.py',100),
  ('varcte -> FLOAT','varcte',1,'p_varcte','parser.py',101),
  ('varcte -> ID','varcte',1,'p_varcte','parser.py',102),
  ('lectura -> READ LPAREN lectura1','lectura',3,'p_lectura','parser.py',108),
  ('lectura1 -> RPAREN SEMICOLON','lectura1',2,'p_lectura1','parser.py',111),
  ('lectura1 -> listaids lectura1','lectura1',2,'p_lectura1','parser.py',112),
  ('escritura -> WRITE LPAREN escritura1','escritura',3,'p_escritura','parser.py',115),
  ('escritura1 -> letrero escritura2','escritura1',2,'p_escritura1','parser.py',118),
  ('escritura1 -> expresion escritura2','escritura1',2,'p_escritura1','parser.py',119),
  ('escritura2 -> RPAREN SEMICOLON','escritura2',2,'p_escritura2','parser.py',122),
  ('escritura2 -> escritura1','escritura2',1,'p_escritura2','parser.py',123),
  ('letrero -> QUOTES letrero1','letrero',2,'p_letrero','parser.py',126),
  ('letrero1 -> CHAR QUOTES','letrero1',2,'p_letrero1','parser.py',129),
  ('letrero1 -> CHAR letrero1','letrero1',2,'p_letrero1','parser.py',130),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',133),
  ('repeticion -> nocondicional','repeticion',1,'p_repeticion','parser.py',134),
  ('decision -> IF LPAREN expresion RPAREN THEN bloque decision1','decision',7,'p_decision','parser.py',137),
  ('decision1 -> ELSE bloque','decision1',2,'p_decision1','parser.py',140),
  ('condicional -> WHILE LPAREN expresion RPAREN DO bloque','condicional',6,'p_condicional','parser.py',143),
  ('nocondicional -> FOR ID EQUALS exp TO exp DO bloque','nocondicional',8,'p_nocondicional','parser.py',146),
]

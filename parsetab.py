
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEAND CHAR COLON COMA DIVIDE DO DOT ELSE EQUALS FLOAT FOR FUNCTION GTHAN ID IF INT LBRACKET LCBRACKET LPAREN LTHAN MINUS OR PLUS PROGRAMA QUOTES RBRACKET RCBRACKET READ RETURN RPAREN SEMICOLON SQUOTES THEN TIMES TO VARS VOID WHILE WRITEprograma : PROGRAMA ID SEMICOLON variables functionvariables : VARS variables1variables1 : tipo COLON listaidslistaids : ID listaids1listaids1 : COMA ID listaids1\n                | listaids2\n                | SEMICOLON variables1\n                | SEMICOLON\n                | RPARENlistaids2 : LBRACKET INT RBRACKET listaids1function : FUNCTION tiporetorno ID LPAREN variables1 variables bloquebloque : LCBRACKET estatuto\n            | LCBRACKET RCBRACKETestatuto : asignacion\n                | retornofuncion\n                | lectura\n                | escritura\n                | decision\n                | repeticion\n                | RCBRACKETexpresion : expresion PLUS expresion\n                | expresion MINUS expresion\n                | expresion TIMES expresion\n                | expresion DIVIDE expresion\n                | expresion GTHAN expresion\n                | expresion LTHAN expresion\n                | LPAREN expresion RPAREN\n                | INT\n                | FLOAT\n                | IDasignacion : ID EQUALS expresion SEMICOLON estatuto\n                | ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatutoretornofuncion : RETURN LPAREN expresion RPAREN SEMICOLON estatutolectura : READ LPAREN lectura1lectura1 : listaids SEMICOLON estatuto\n                | RPAREN SEMICOLON estatutoescritura : WRITE LPAREN escritura1 RPAREN SEMICOLON estatutoescritura1 : letrero \n                | letrero COMA escritura1\n                | expresion\n                | expresion COMA escritura1letrero : QUOTES ID QUOTES\n            | COMA escritura1decision : IF LPAREN expresion RPAREN THEN bloque estatuto\n                | IF LPAREN expresion RPAREN THEN bloque decision1decision1 : ELSE bloque\n                | ELSE bloque estatutorepeticion : condicional\n                | nocondicionalcondicional :  WHILE LPAREN expresion RPAREN DO bloque\n                | WHILE LPAREN expresion RPAREN DO bloque estatutonocondicional : FOR ID EQUALS expresion TO expresion DO bloque\n                    | FOR ID EQUALS expresion TO expresion DO bloque estatutotipo : INT\n            | FLOAT\n            | CHARtiporetorno : INT\n                | FLOAT\n                | VOID'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,7,36,39,40,41,42,43,44,45,46,52,53,71,102,103,113,114,123,124,126,129,130,132,134,135,136,137,138,],[0,-1,-11,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,-31,-20,-35,-36,-33,-37,-50,-44,-45,-51,-32,-46,-52,-47,-53,]),'ID':([2,14,15,16,17,18,24,37,39,40,41,42,43,44,45,46,52,53,55,56,57,58,59,60,61,62,66,71,76,78,81,82,83,84,85,86,87,88,92,93,95,97,102,103,111,112,113,114,115,121,123,124,125,126,128,129,130,132,134,135,136,137,138,],[3,19,-57,-58,-59,21,30,47,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,63,64,64,64,21,64,64,64,64,-34,64,98,64,47,64,64,64,64,64,64,47,47,64,64,-31,-20,64,47,-35,-36,47,64,-33,-37,47,47,47,-44,-45,-51,-32,47,47,-47,-53,]),'SEMICOLON':([3,20,21,23,25,26,27,30,31,34,35,38,64,65,67,68,72,73,91,94,104,105,106,107,108,109,110,122,],[4,-3,26,-4,-6,-8,-9,26,-7,-5,26,-10,-30,82,-28,-29,92,93,112,115,-21,-22,-23,-24,-25,-26,-27,128,]),'VARS':([4,20,23,25,26,27,29,31,34,38,],[6,-3,-4,-6,-8,-9,6,-7,-5,-10,]),'FUNCTION':([5,9,20,23,25,26,27,31,34,38,],[8,-2,-3,-4,-6,-8,-9,-7,-5,-10,]),'INT':([6,8,22,26,28,56,57,58,60,61,62,66,76,81,83,84,85,86,87,88,95,97,111,121,],[11,15,11,11,32,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'FLOAT':([6,8,22,26,56,57,58,60,61,62,66,76,81,83,84,85,86,87,88,95,97,111,121,],[12,16,12,12,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'CHAR':([6,22,26,],[13,13,13,]),'VOID':([8,],[17,]),'LCBRACKET':([9,20,23,25,26,27,31,33,34,38,119,120,131,133,],[-2,-3,-4,-6,-8,-9,-7,37,-5,-10,37,37,37,37,]),'COLON':([10,11,12,13,],[18,-54,-55,-56,]),'LPAREN':([19,48,49,50,51,54,56,57,58,60,61,62,66,76,81,83,84,85,86,87,88,95,97,111,121,],[22,58,59,60,61,62,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'COMA':([21,30,35,60,64,67,68,75,76,77,95,96,97,104,105,106,107,108,109,110,116,117,118,],[24,24,24,76,-30,-28,-29,95,76,97,76,-43,76,-21,-22,-23,-24,-25,-26,-27,-39,-41,-42,]),'RPAREN':([21,30,35,59,64,67,68,70,74,75,77,79,80,89,96,104,105,106,107,108,109,110,116,117,118,],[27,27,27,73,-30,-28,-29,91,94,-38,-40,99,100,110,-43,-21,-22,-23,-24,-25,-26,-27,-39,-41,-42,]),'LBRACKET':([21,30,35,47,],[28,28,28,57,]),'RBRACKET':([32,64,67,68,69,104,105,106,107,108,109,110,],[35,-30,-28,-29,90,-21,-22,-23,-24,-25,-26,-27,]),'RCBRACKET':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[40,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,103,103,103,-31,-20,103,-35,-36,103,-33,-37,103,103,103,-44,-45,-51,-32,103,103,-47,-53,]),'RETURN':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[48,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,48,48,48,-31,-20,48,-35,-36,48,-33,-37,48,48,48,-44,-45,-51,-32,48,48,-47,-53,]),'READ':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[49,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,49,49,49,-31,-20,49,-35,-36,49,-33,-37,49,49,49,-44,-45,-51,-32,49,49,-47,-53,]),'WRITE':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[50,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,50,50,50,-31,-20,50,-35,-36,50,-33,-37,50,50,50,-44,-45,-51,-32,50,50,-47,-53,]),'IF':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[51,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,51,51,51,-31,-20,51,-35,-36,51,-33,-37,51,51,51,-44,-45,-51,-32,51,51,-47,-53,]),'WHILE':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[54,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,54,54,54,-31,-20,54,-35,-36,54,-33,-37,54,54,54,-44,-45,-51,-32,54,54,-47,-53,]),'FOR':([37,39,40,41,42,43,44,45,46,52,53,71,82,92,93,102,103,112,113,114,115,123,124,125,126,128,129,130,132,134,135,136,137,138,],[55,-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,55,55,55,-31,-20,55,-35,-36,55,-33,-37,55,55,55,-44,-45,-51,-32,55,55,-47,-53,]),'ELSE':([39,40,41,42,43,44,45,46,52,53,71,102,103,113,114,123,124,125,126,129,130,132,134,135,136,137,138,],[-12,-13,-14,-15,-16,-17,-18,-19,-48,-49,-34,-31,-20,-35,-36,-33,-37,131,-50,-44,-45,-51,-32,-46,-52,-47,-53,]),'EQUALS':([47,63,90,],[56,81,111,]),'QUOTES':([60,76,95,97,98,],[78,78,78,78,118,]),'PLUS':([64,65,67,68,69,70,77,79,80,89,101,104,105,106,107,108,109,110,122,127,],[-30,83,-28,-29,83,83,83,83,83,83,83,-21,-22,-23,-24,83,83,-27,83,83,]),'MINUS':([64,65,67,68,69,70,77,79,80,89,101,104,105,106,107,108,109,110,122,127,],[-30,84,-28,-29,84,84,84,84,84,84,84,-21,-22,-23,-24,84,84,-27,84,84,]),'TIMES':([64,65,67,68,69,70,77,79,80,89,101,104,105,106,107,108,109,110,122,127,],[-30,85,-28,-29,85,85,85,85,85,85,85,85,85,-23,-24,85,85,-27,85,85,]),'DIVIDE':([64,65,67,68,69,70,77,79,80,89,101,104,105,106,107,108,109,110,122,127,],[-30,86,-28,-29,86,86,86,86,86,86,86,86,86,-23,-24,86,86,-27,86,86,]),'GTHAN':([64,65,67,68,69,70,77,79,80,89,101,104,105,106,107,108,109,110,122,127,],[-30,87,-28,-29,87,87,87,87,87,87,87,-21,-22,-23,-24,87,87,-27,87,87,]),'LTHAN':([64,65,67,68,69,70,77,79,80,89,101,104,105,106,107,108,109,110,122,127,],[-30,88,-28,-29,88,88,88,88,88,88,88,-21,-22,-23,-24,88,88,-27,88,88,]),'TO':([64,67,68,101,104,105,106,107,108,109,110,],[-30,-28,-29,121,-21,-22,-23,-24,-25,-26,-27,]),'DO':([64,67,68,100,104,105,106,107,108,109,110,127,],[-30,-28,-29,120,-21,-22,-23,-24,-25,-26,-27,133,]),'THEN':([99,],[119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'variables':([4,29,],[5,33,]),'function':([5,],[7,]),'variables1':([6,22,26,],[9,29,31,]),'tipo':([6,22,26,],[10,10,10,]),'tiporetorno':([8,],[14,]),'listaids':([18,59,],[20,72,]),'listaids1':([21,30,35,],[23,34,38,]),'listaids2':([21,30,35,],[25,25,25,]),'bloque':([33,119,120,131,133,],[36,125,126,135,136,]),'estatuto':([37,82,92,93,112,115,125,126,128,135,136,],[39,102,113,114,123,124,129,132,134,137,138,]),'asignacion':([37,82,92,93,112,115,125,126,128,135,136,],[41,41,41,41,41,41,41,41,41,41,41,]),'retornofuncion':([37,82,92,93,112,115,125,126,128,135,136,],[42,42,42,42,42,42,42,42,42,42,42,]),'lectura':([37,82,92,93,112,115,125,126,128,135,136,],[43,43,43,43,43,43,43,43,43,43,43,]),'escritura':([37,82,92,93,112,115,125,126,128,135,136,],[44,44,44,44,44,44,44,44,44,44,44,]),'decision':([37,82,92,93,112,115,125,126,128,135,136,],[45,45,45,45,45,45,45,45,45,45,45,]),'repeticion':([37,82,92,93,112,115,125,126,128,135,136,],[46,46,46,46,46,46,46,46,46,46,46,]),'condicional':([37,82,92,93,112,115,125,126,128,135,136,],[52,52,52,52,52,52,52,52,52,52,52,]),'nocondicional':([37,82,92,93,112,115,125,126,128,135,136,],[53,53,53,53,53,53,53,53,53,53,53,]),'expresion':([56,57,58,60,61,62,66,76,81,83,84,85,86,87,88,95,97,111,121,],[65,69,70,77,79,80,89,77,101,104,105,106,107,108,109,77,77,122,127,]),'lectura1':([59,],[71,]),'escritura1':([60,76,95,97,],[74,96,116,117,]),'letrero':([60,76,95,97,],[75,75,75,75,]),'decision1':([125,],[130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON variables function','programa',5,'p_programa','parser.py',10),
  ('variables -> VARS variables1','variables',2,'p_variables','parser.py',13),
  ('variables1 -> tipo COLON listaids','variables1',3,'p_variables1','parser.py',17),
  ('listaids -> ID listaids1','listaids',2,'p_listaids','parser.py',20),
  ('listaids1 -> COMA ID listaids1','listaids1',3,'p_listaids1','parser.py',23),
  ('listaids1 -> listaids2','listaids1',1,'p_listaids1','parser.py',24),
  ('listaids1 -> SEMICOLON variables1','listaids1',2,'p_listaids1','parser.py',25),
  ('listaids1 -> SEMICOLON','listaids1',1,'p_listaids1','parser.py',26),
  ('listaids1 -> RPAREN','listaids1',1,'p_listaids1','parser.py',27),
  ('listaids2 -> LBRACKET INT RBRACKET listaids1','listaids2',4,'p_listaids2','parser.py',30),
  ('function -> FUNCTION tiporetorno ID LPAREN variables1 variables bloque','function',7,'p_function','parser.py',33),
  ('bloque -> LCBRACKET estatuto','bloque',2,'p_bloque','parser.py',36),
  ('bloque -> LCBRACKET RCBRACKET','bloque',2,'p_bloque','parser.py',37),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',40),
  ('estatuto -> retornofuncion','estatuto',1,'p_estatuto','parser.py',41),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',42),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',43),
  ('estatuto -> decision','estatuto',1,'p_estatuto','parser.py',44),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','parser.py',45),
  ('estatuto -> RCBRACKET','estatuto',1,'p_estatuto','parser.py',46),
  ('expresion -> expresion PLUS expresion','expresion',3,'p_expresion','parser.py',50),
  ('expresion -> expresion MINUS expresion','expresion',3,'p_expresion','parser.py',51),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','parser.py',52),
  ('expresion -> expresion DIVIDE expresion','expresion',3,'p_expresion','parser.py',53),
  ('expresion -> expresion GTHAN expresion','expresion',3,'p_expresion','parser.py',54),
  ('expresion -> expresion LTHAN expresion','expresion',3,'p_expresion','parser.py',55),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion','parser.py',56),
  ('expresion -> INT','expresion',1,'p_expresion','parser.py',57),
  ('expresion -> FLOAT','expresion',1,'p_expresion','parser.py',58),
  ('expresion -> ID','expresion',1,'p_expresion','parser.py',59),
  ('asignacion -> ID EQUALS expresion SEMICOLON estatuto','asignacion',5,'p_asignacion','parser.py',62),
  ('asignacion -> ID LBRACKET expresion RBRACKET EQUALS expresion SEMICOLON estatuto','asignacion',8,'p_asignacion','parser.py',63),
  ('retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON estatuto','retornofuncion',6,'p_retornofuncion','parser.py',66),
  ('lectura -> READ LPAREN lectura1','lectura',3,'p_lectura','parser.py',69),
  ('lectura1 -> listaids SEMICOLON estatuto','lectura1',3,'p_lectura1','parser.py',72),
  ('lectura1 -> RPAREN SEMICOLON estatuto','lectura1',3,'p_lectura1','parser.py',73),
  ('escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto','escritura',6,'p_escritura','parser.py',76),
  ('escritura1 -> letrero','escritura1',1,'p_escritura1','parser.py',79),
  ('escritura1 -> letrero COMA escritura1','escritura1',3,'p_escritura1','parser.py',80),
  ('escritura1 -> expresion','escritura1',1,'p_escritura1','parser.py',81),
  ('escritura1 -> expresion COMA escritura1','escritura1',3,'p_escritura1','parser.py',82),
  ('letrero -> QUOTES ID QUOTES','letrero',3,'p_letrero','parser.py',85),
  ('letrero -> COMA escritura1','letrero',2,'p_letrero','parser.py',86),
  ('decision -> IF LPAREN expresion RPAREN THEN bloque estatuto','decision',7,'p_decision','parser.py',89),
  ('decision -> IF LPAREN expresion RPAREN THEN bloque decision1','decision',7,'p_decision','parser.py',90),
  ('decision1 -> ELSE bloque','decision1',2,'p_decision1','parser.py',93),
  ('decision1 -> ELSE bloque estatuto','decision1',3,'p_decision1','parser.py',94),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',97),
  ('repeticion -> nocondicional','repeticion',1,'p_repeticion','parser.py',98),
  ('condicional -> WHILE LPAREN expresion RPAREN DO bloque','condicional',6,'p_condicional','parser.py',101),
  ('condicional -> WHILE LPAREN expresion RPAREN DO bloque estatuto','condicional',7,'p_condicional','parser.py',102),
  ('nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque','nocondicional',8,'p_nocondicional','parser.py',105),
  ('nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque estatuto','nocondicional',9,'p_nocondicional','parser.py',106),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',109),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',110),
  ('tipo -> CHAR','tipo',1,'p_tipo','parser.py',111),
  ('tiporetorno -> INT','tiporetorno',1,'p_tiporetorno','parser.py',114),
  ('tiporetorno -> FLOAT','tiporetorno',1,'p_tiporetorno','parser.py',115),
  ('tiporetorno -> VOID','tiporetorno',1,'p_tiporetorno','parser.py',116),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEAND ARREGLO CHAR COLON COMA DIVIDE DO DOT ELSE EQUALS EQUALSDOBLE FLOAT FOR FUNCTION GTHAN ID IF INT LBRACKET LCBRACKET LPAREN LTHAN MINUS OR PLUS PRINCIPAL PROGRAMA QUOTES RBRACKET RCBRACKET READ RETURN RPAREN SEMICOLON SQUOTES THEN TIMES TO VARS VOID WHILE WRITEprograma : PROGRAMA ID SEMICOLON variables function principalprincipal : PRINCIPAL LPAREN RPAREN bloquevariables : VARS variables1variables1 : INT COLON listaidsInt\n                | FLOAT COLON listaidsFloat\n                | CHAR COLON listaidsChar\n                | listaidsInt : ids COMA listaidsInt\n                | ids SEMICOLON variables1\n                | ids variables1listaidsFloat : ids COMA listaidsFloat\n                | ids SEMICOLON variables1\n                | ids variables1listaidsChar : ids COMA listaidsChar\n                | ids SEMICOLON variables1\n                | ids variables1ids : IDfunction : FUNCTION INT ID LPAREN variables1 RPAREN variables bloque\n                | FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque\n                | FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function\n                | FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque functionbloque : LCBRACKET estatuto RCBRACKET\n            | LCBRACKET RCBRACKETestatuto : asignacion\n                | retornofuncion\n                | lectura\n                | escritura\n                | decision\n                | repeticionexpresion : expresion PLUS expresion\n                | expresion MINUS expresion\n                | expresion TIMES expresion\n                | expresion DIVIDE expresion\n                | expresion GTHAN expresion\n                | expresion LTHAN expresion\n                | LPAREN expresion RPAREN\n                | INT\n                | FLOAT\n                | ARREGLO\n                | IDasignacion : ID EQUALS expresion SEMICOLON estatuto\n                | ID EQUALS expresion SEMICOLON\n                | ARREGLO EQUALS expresion SEMICOLON estatuto\n                | ARREGLO EQUALS expresion SEMICOLONretornofuncion : RETURN LPAREN expresion RPAREN SEMICOLONlectura : READ LPAREN lectura1lectura1 : listaidsInt SEMICOLON estatuto\n                | listaidsInt SEMICOLON\n                | RPAREN SEMICOLON estatuto\n                | RPAREN SEMICOLONescritura : WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto\n                | WRITE LPAREN escritura1 RPAREN SEMICOLONescritura1 : letrero \n                | letrero COMA escritura1\n                | expresion\n                | expresion COMA escritura1letrero : QUOTES ID QUOTES\n            | COMA escritura1decision : IF LPAREN opcion RPAREN THEN bloque estatuto\n                | IF LPAREN opcion RPAREN THEN bloque\n                | IF LPAREN opcion RPAREN THEN bloque decision1decision1 : ELSE bloque\n                | ELSE bloque estatutoopcion : expresion EQUALSDOBLE expresion\n            | expresionrepeticion : condicional\n                | nocondicionalcondicional :  WHILE LPAREN expresion RPAREN DO bloque\n                | WHILE LPAREN expresion RPAREN DO bloque estatutonocondicional : FOR ID EQUALS expresion TO expresion DO bloque\n                    | FOR ID EQUALS expresion TO expresion DO bloque estatuto'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,13,42,53,72,],[0,-1,-2,-23,-22,]),'ID':([2,15,16,17,18,19,33,36,39,43,53,69,72,73,74,75,76,77,78,79,85,96,98,102,105,106,107,108,109,110,111,113,115,116,118,120,123,140,147,149,150,157,158,],[3,21,22,25,25,25,25,25,25,60,-23,80,-22,83,83,83,25,83,83,83,83,83,121,83,60,83,83,83,83,83,83,60,60,60,83,83,83,60,83,60,60,60,60,]),'SEMICOLON':([3,23,24,25,26,27,28,29,34,35,37,38,40,41,46,47,48,49,50,51,83,84,86,87,88,89,92,93,114,117,129,130,131,132,133,134,135,],[4,-4,34,-17,-5,37,-6,40,-7,-10,-7,-13,-7,-16,-8,-9,-11,-12,-14,-15,-40,105,-37,-38,-39,113,115,116,137,140,-30,-31,-32,-33,-34,-35,-36,]),'VARS':([4,70,71,],[6,6,6,]),'FUNCTION':([5,6,9,23,24,25,26,27,28,29,34,35,37,38,40,41,46,47,48,49,50,51,53,72,103,104,],[8,-7,-3,-4,-7,-17,-5,-7,-6,-7,-7,-10,-7,-13,-7,-16,-8,-9,-11,-12,-14,-15,-23,-22,8,8,]),'INT':([6,8,24,25,27,29,31,32,34,37,40,73,74,75,77,78,79,85,96,102,106,107,108,109,110,111,118,120,123,147,],[10,15,10,-17,10,10,10,10,10,10,10,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'FLOAT':([6,8,24,25,27,29,31,32,34,37,40,73,74,75,77,78,79,85,96,102,106,107,108,109,110,111,118,120,123,147,],[11,16,11,-17,11,11,11,11,11,11,11,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'CHAR':([6,24,25,27,29,31,32,34,37,40,],[12,12,-17,12,12,12,12,12,12,12,]),'LCBRACKET':([6,9,23,24,25,26,27,28,29,30,34,35,37,38,40,41,46,47,48,49,50,51,81,82,144,146,154,156,],[-7,-3,-4,-7,-17,-5,-7,-6,-7,43,-7,-10,-7,-13,-7,-16,-8,-9,-11,-12,-14,-15,43,43,43,43,43,43,]),'PRINCIPAL':([7,53,72,103,104,126,127,],[14,-23,-22,-18,-19,-20,-21,]),'COLON':([10,11,12,],[17,18,19,]),'LPAREN':([14,21,22,62,63,64,65,68,73,74,75,77,78,79,85,96,102,106,107,108,109,110,111,118,120,123,147,],[20,31,32,75,76,77,78,79,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'RPAREN':([20,23,24,25,26,27,28,29,31,32,34,35,37,38,40,41,44,45,46,47,48,49,50,51,76,83,86,87,88,90,94,95,97,99,100,101,112,119,129,130,131,132,133,134,135,141,142,143,145,],[30,-4,-7,-17,-5,-7,-6,-7,-7,-7,-7,-10,-7,-13,-7,-16,70,71,-8,-9,-11,-12,-14,-15,93,-40,-37,-38,-39,114,117,-53,-55,122,-65,124,135,-58,-30,-31,-32,-33,-34,-35,-36,-54,-56,-57,-64,]),'COMA':([24,25,27,29,77,83,86,87,88,95,96,97,118,119,120,129,130,131,132,133,134,135,141,142,143,],[33,-17,36,39,96,-40,-37,-38,-39,118,96,120,96,-58,96,-30,-31,-32,-33,-34,-35,-36,-54,-56,-57,]),'RCBRACKET':([43,52,53,54,55,56,57,58,59,66,67,72,91,105,113,115,116,128,136,137,138,139,140,148,149,150,152,153,155,157,158,159,160,],[53,72,-23,-24,-25,-26,-27,-28,-29,-66,-67,-22,-46,-42,-44,-48,-50,-41,-43,-45,-47,-49,-52,-51,-60,-68,-59,-61,-69,-62,-70,-63,-71,]),'ARREGLO':([43,53,72,73,74,75,77,78,79,85,96,102,105,106,107,108,109,110,111,113,115,116,118,120,123,140,147,149,150,157,158,],[61,-23,-22,88,88,88,88,88,88,88,88,88,61,88,88,88,88,88,88,61,61,61,88,88,88,61,88,61,61,61,61,]),'RETURN':([43,53,72,105,113,115,116,140,149,150,157,158,],[62,-23,-22,62,62,62,62,62,62,62,62,62,]),'READ':([43,53,72,105,113,115,116,140,149,150,157,158,],[63,-23,-22,63,63,63,63,63,63,63,63,63,]),'WRITE':([43,53,72,105,113,115,116,140,149,150,157,158,],[64,-23,-22,64,64,64,64,64,64,64,64,64,]),'IF':([43,53,72,105,113,115,116,140,149,150,157,158,],[65,-23,-22,65,65,65,65,65,65,65,65,65,]),'WHILE':([43,53,72,105,113,115,116,140,149,150,157,158,],[68,-23,-22,68,68,68,68,68,68,68,68,68,]),'FOR':([43,53,72,105,113,115,116,140,149,150,157,158,],[69,-23,-22,69,69,69,69,69,69,69,69,69,]),'ELSE':([53,72,149,],[-23,-22,154,]),'EQUALS':([60,61,80,],[73,74,102,]),'QUOTES':([77,96,118,120,121,],[98,98,98,98,143,]),'PLUS':([83,84,86,87,88,89,90,97,100,101,112,125,129,130,131,132,133,134,135,145,151,],[-40,106,-37,-38,-39,106,106,106,106,106,106,106,-30,-31,-32,-33,106,106,-36,106,106,]),'MINUS':([83,84,86,87,88,89,90,97,100,101,112,125,129,130,131,132,133,134,135,145,151,],[-40,107,-37,-38,-39,107,107,107,107,107,107,107,-30,-31,-32,-33,107,107,-36,107,107,]),'TIMES':([83,84,86,87,88,89,90,97,100,101,112,125,129,130,131,132,133,134,135,145,151,],[-40,108,-37,-38,-39,108,108,108,108,108,108,108,108,108,-32,-33,108,108,-36,108,108,]),'DIVIDE':([83,84,86,87,88,89,90,97,100,101,112,125,129,130,131,132,133,134,135,145,151,],[-40,109,-37,-38,-39,109,109,109,109,109,109,109,109,109,-32,-33,109,109,-36,109,109,]),'GTHAN':([83,84,86,87,88,89,90,97,100,101,112,125,129,130,131,132,133,134,135,145,151,],[-40,110,-37,-38,-39,110,110,110,110,110,110,110,-30,-31,-32,-33,110,110,-36,110,110,]),'LTHAN':([83,84,86,87,88,89,90,97,100,101,112,125,129,130,131,132,133,134,135,145,151,],[-40,111,-37,-38,-39,111,111,111,111,111,111,111,-30,-31,-32,-33,111,111,-36,111,111,]),'EQUALSDOBLE':([83,86,87,88,100,129,130,131,132,133,134,135,],[-40,-37,-38,-39,123,-30,-31,-32,-33,-34,-35,-36,]),'TO':([83,86,87,88,125,129,130,131,132,133,134,135,],[-40,-37,-38,-39,147,-30,-31,-32,-33,-34,-35,-36,]),'DO':([83,86,87,88,124,129,130,131,132,133,134,135,151,],[-40,-37,-38,-39,146,-30,-31,-32,-33,-34,-35,-36,156,]),'THEN':([122,],[144,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'variables':([4,70,71,],[5,81,82,]),'function':([5,103,104,],[7,126,127,]),'variables1':([6,24,27,29,31,32,34,37,40,],[9,35,38,41,44,45,47,49,51,]),'principal':([7,],[13,]),'listaidsInt':([17,33,76,],[23,46,92,]),'ids':([17,18,19,33,36,39,76,],[24,27,29,24,27,29,24,]),'listaidsFloat':([18,36,],[26,48,]),'listaidsChar':([19,39,],[28,50,]),'bloque':([30,81,82,144,146,154,156,],[42,103,104,149,150,157,158,]),'estatuto':([43,105,113,115,116,140,149,150,157,158,],[52,128,136,138,139,148,152,155,159,160,]),'asignacion':([43,105,113,115,116,140,149,150,157,158,],[54,54,54,54,54,54,54,54,54,54,]),'retornofuncion':([43,105,113,115,116,140,149,150,157,158,],[55,55,55,55,55,55,55,55,55,55,]),'lectura':([43,105,113,115,116,140,149,150,157,158,],[56,56,56,56,56,56,56,56,56,56,]),'escritura':([43,105,113,115,116,140,149,150,157,158,],[57,57,57,57,57,57,57,57,57,57,]),'decision':([43,105,113,115,116,140,149,150,157,158,],[58,58,58,58,58,58,58,58,58,58,]),'repeticion':([43,105,113,115,116,140,149,150,157,158,],[59,59,59,59,59,59,59,59,59,59,]),'condicional':([43,105,113,115,116,140,149,150,157,158,],[66,66,66,66,66,66,66,66,66,66,]),'nocondicional':([43,105,113,115,116,140,149,150,157,158,],[67,67,67,67,67,67,67,67,67,67,]),'expresion':([73,74,75,77,78,79,85,96,102,106,107,108,109,110,111,118,120,123,147,],[84,89,90,97,100,101,112,97,125,129,130,131,132,133,134,97,97,145,151,]),'lectura1':([76,],[91,]),'escritura1':([77,96,118,120,],[94,119,141,142,]),'letrero':([77,96,118,120,],[95,95,95,95,]),'opcion':([78,],[99,]),'decision1':([149,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON variables function principal','programa',6,'p_programa','parser.py',16),
  ('principal -> PRINCIPAL LPAREN RPAREN bloque','principal',4,'p_principal','parser.py',19),
  ('variables -> VARS variables1','variables',2,'p_variables','parser.py',22),
  ('variables1 -> INT COLON listaidsInt','variables1',3,'p_variables1','parser.py',25),
  ('variables1 -> FLOAT COLON listaidsFloat','variables1',3,'p_variables1','parser.py',26),
  ('variables1 -> CHAR COLON listaidsChar','variables1',3,'p_variables1','parser.py',27),
  ('variables1 -> <empty>','variables1',0,'p_variables1','parser.py',28),
  ('listaidsInt -> ids COMA listaidsInt','listaidsInt',3,'p_listaidsInt','parser.py',31),
  ('listaidsInt -> ids SEMICOLON variables1','listaidsInt',3,'p_listaidsInt','parser.py',32),
  ('listaidsInt -> ids variables1','listaidsInt',2,'p_listaidsInt','parser.py',33),
  ('listaidsFloat -> ids COMA listaidsFloat','listaidsFloat',3,'p_listaidsFloat','parser.py',37),
  ('listaidsFloat -> ids SEMICOLON variables1','listaidsFloat',3,'p_listaidsFloat','parser.py',38),
  ('listaidsFloat -> ids variables1','listaidsFloat',2,'p_listaidsFloat','parser.py',39),
  ('listaidsChar -> ids COMA listaidsChar','listaidsChar',3,'p_listaidsChar','parser.py',43),
  ('listaidsChar -> ids SEMICOLON variables1','listaidsChar',3,'p_listaidsChar','parser.py',44),
  ('listaidsChar -> ids variables1','listaidsChar',2,'p_listaidsChar','parser.py',45),
  ('ids -> ID','ids',1,'p_ides','parser.py',49),
  ('function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque','function',8,'p_function','parser.py',53),
  ('function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque','function',8,'p_function','parser.py',54),
  ('function -> FUNCTION INT ID LPAREN variables1 RPAREN variables bloque function','function',9,'p_function','parser.py',55),
  ('function -> FUNCTION FLOAT ID LPAREN variables1 RPAREN variables bloque function','function',9,'p_function','parser.py',56),
  ('bloque -> LCBRACKET estatuto RCBRACKET','bloque',3,'p_bloque','parser.py',61),
  ('bloque -> LCBRACKET RCBRACKET','bloque',2,'p_bloque','parser.py',62),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',65),
  ('estatuto -> retornofuncion','estatuto',1,'p_estatuto','parser.py',66),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',67),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',68),
  ('estatuto -> decision','estatuto',1,'p_estatuto','parser.py',69),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','parser.py',70),
  ('expresion -> expresion PLUS expresion','expresion',3,'p_expresion','parser.py',74),
  ('expresion -> expresion MINUS expresion','expresion',3,'p_expresion','parser.py',75),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion','parser.py',76),
  ('expresion -> expresion DIVIDE expresion','expresion',3,'p_expresion','parser.py',77),
  ('expresion -> expresion GTHAN expresion','expresion',3,'p_expresion','parser.py',78),
  ('expresion -> expresion LTHAN expresion','expresion',3,'p_expresion','parser.py',79),
  ('expresion -> LPAREN expresion RPAREN','expresion',3,'p_expresion','parser.py',80),
  ('expresion -> INT','expresion',1,'p_expresion','parser.py',81),
  ('expresion -> FLOAT','expresion',1,'p_expresion','parser.py',82),
  ('expresion -> ARREGLO','expresion',1,'p_expresion','parser.py',83),
  ('expresion -> ID','expresion',1,'p_expresion','parser.py',84),
  ('asignacion -> ID EQUALS expresion SEMICOLON estatuto','asignacion',5,'p_asignacion','parser.py',88),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',89),
  ('asignacion -> ARREGLO EQUALS expresion SEMICOLON estatuto','asignacion',5,'p_asignacion','parser.py',90),
  ('asignacion -> ARREGLO EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','parser.py',91),
  ('retornofuncion -> RETURN LPAREN expresion RPAREN SEMICOLON','retornofuncion',5,'p_retornofuncion','parser.py',102),
  ('lectura -> READ LPAREN lectura1','lectura',3,'p_lectura','parser.py',105),
  ('lectura1 -> listaidsInt SEMICOLON estatuto','lectura1',3,'p_lectura1','parser.py',108),
  ('lectura1 -> listaidsInt SEMICOLON','lectura1',2,'p_lectura1','parser.py',109),
  ('lectura1 -> RPAREN SEMICOLON estatuto','lectura1',3,'p_lectura1','parser.py',110),
  ('lectura1 -> RPAREN SEMICOLON','lectura1',2,'p_lectura1','parser.py',111),
  ('escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON estatuto','escritura',6,'p_escritura','parser.py',115),
  ('escritura -> WRITE LPAREN escritura1 RPAREN SEMICOLON','escritura',5,'p_escritura','parser.py',116),
  ('escritura1 -> letrero','escritura1',1,'p_escritura1','parser.py',119),
  ('escritura1 -> letrero COMA escritura1','escritura1',3,'p_escritura1','parser.py',120),
  ('escritura1 -> expresion','escritura1',1,'p_escritura1','parser.py',121),
  ('escritura1 -> expresion COMA escritura1','escritura1',3,'p_escritura1','parser.py',122),
  ('letrero -> QUOTES ID QUOTES','letrero',3,'p_letrero','parser.py',125),
  ('letrero -> COMA escritura1','letrero',2,'p_letrero','parser.py',126),
  ('decision -> IF LPAREN opcion RPAREN THEN bloque estatuto','decision',7,'p_decision','parser.py',129),
  ('decision -> IF LPAREN opcion RPAREN THEN bloque','decision',6,'p_decision','parser.py',130),
  ('decision -> IF LPAREN opcion RPAREN THEN bloque decision1','decision',7,'p_decision','parser.py',131),
  ('decision1 -> ELSE bloque','decision1',2,'p_decision1','parser.py',134),
  ('decision1 -> ELSE bloque estatuto','decision1',3,'p_decision1','parser.py',135),
  ('opcion -> expresion EQUALSDOBLE expresion','opcion',3,'p_opcion','parser.py',138),
  ('opcion -> expresion','opcion',1,'p_opcion','parser.py',139),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',142),
  ('repeticion -> nocondicional','repeticion',1,'p_repeticion','parser.py',143),
  ('condicional -> WHILE LPAREN expresion RPAREN DO bloque','condicional',6,'p_condicional','parser.py',146),
  ('condicional -> WHILE LPAREN expresion RPAREN DO bloque estatuto','condicional',7,'p_condicional','parser.py',147),
  ('nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque','nocondicional',8,'p_nocondicional','parser.py',150),
  ('nocondicional -> FOR ID EQUALS expresion TO expresion DO bloque estatuto','nocondicional',9,'p_nocondicional','parser.py',151),
]
